{"version":3,"file":"node_modules_ptsecurity_mosaic-examples_fesm2020_ptsecurity-mosaic-examples-mosaic-list_mjs.js","mappings":"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","sources":["./packages/mosaic/list/list-selection.component.ts","./packages/mosaic/list/list-option.html","./packages/mosaic/list/list.component.ts","./packages/mosaic/list/list-item.html","./packages/mosaic/list/list.module.ts","./packages/mosaic/list/ptsecurity-mosaic-list.ts","./node_modules/@ptsecurity/mosaic-examples/fesm2020/ptsecurity-mosaic-examples-mosaic-list.mjs"],"sourcesContent":["/* tslint:disable:no-empty */\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone,\n    Optional,\n    ContentChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    isCopy,\n    isSelectAll,\n    isVerticalMovement,\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex,\n    MultipleMode,\n    McOptgroup,\n    MC_OPTION_ACTION_PARENT,\n    McOptionActionComponent\n} from '@ptsecurity/mosaic/core';\nimport { McDropdownTrigger } from '@ptsecurity/mosaic/dropdown';\nimport { McTooltipTrigger } from '@ptsecurity/mosaic/tooltip';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    templateUrl: './list-option.html',\n    host: {\n        class: 'mc-list-option',\n\n        '[class.mc-selected]': 'selected',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-focused]': 'hasFocus',\n\n        '[class.mc-action-button-focused]': 'actionButton?.active',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(focusin)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)',\n        '(keydown)': 'onKeydown($event)'\n    },\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_OPTION_ACTION_PARENT, useExisting: McListOption }\n    ]\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChild(McOptionActionComponent) actionButton: McOptionActionComponent;\n    @ContentChild(McTooltipTrigger) tooltipTrigger: McTooltipTrigger;\n    @ContentChild(McDropdownTrigger) dropdownTrigger: McDropdownTrigger;\n\n    @ViewChild('text', { static: false }) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after';\n\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     */\n    private inputsInitialized = false;\n\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this.selected && newValue !== this.value && this.inputsInitialized) {\n            this.selected = false;\n        }\n\n        this._value = newValue;\n    }\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        const listSelectionDisabled = this.listSelection && this.listSelection.disabled;\n        const groupDisabled = this.group && this.group.disabled;\n\n        return listSelectionDisabled || groupDisabled || this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel?.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngOnInit() {\n        const list = this.listSelection;\n\n        if (list._value && list._value.some((value) => list.compareWith(value, this._value))) {\n            this.setSelected(true);\n        }\n\n        const wasSelected = this._selected;\n\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this.changeDetector.markForCheck();\n            }\n        });\n\n        this.inputsInitialized = true;\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        return clientRects.length ? clientRects[0].height : 0;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setSelectedOptionsByClick(\n            this, hasModifierKey($event, 'shiftKey'), hasModifierKey($event, 'ctrlKey')\n        );\n    }\n\n    onKeydown($event) {\n        if (!this.actionButton) { return; }\n\n        if ($event.keyCode === TAB && !$event.shiftKey && !this.actionButton.hasFocus) {\n            this.actionButton.focus();\n\n            $event.preventDefault();\n        }\n    }\n\n    focus() {\n        if (this.disabled || this.hasFocus || this.actionButton?.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetector.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    if (this.actionButton?.hasFocus) { return; }\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\nexport class McListSelectAllEvent<T> {\n    constructor(public source: McListSelection, public options: T[]) {}\n}\n\nexport class McListCopyEvent<T> {\n    constructor(public source: McListSelection, public option: T) {}\n}\n\nexport class McListSelectionBase {\n    constructor(public elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: `\n        <div [attr.tabindex]=\"tabIndex\"\n             (focus)=\"focus()\"\n             (blur)=\"blur()\">\n            <ng-content></ng-content>\n        </div>`,\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-list-selection',\n\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    @ContentChildren(McListOption, { descendants: true }) options: QueryList<McListOption>;\n\n    @Output() readonly onSelectAll = new EventEmitter<McListSelectAllEvent<McListOption>>();\n\n    @Output() readonly onCopy = new EventEmitter<McListCopyEvent<McListOption>>();\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    multipleMode: MultipleMode | null;\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    userTabIndex: number | null = null;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // tslint:disable-next-line:orthodox-getter-and-setter naming-convention\n    _value: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode,\n        @Optional() private clipboard: Clipboard\n    ) {\n        super(elementRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    @Input() compareWith: (o1: any, o2: any) => boolean = (a1, a2) => a1 === a2;\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this._value) {\n            this.setOptionsFromValues(this._value);\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOptionsByClick(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option);\n        } else {\n            this.selectionModel.toggle(option);\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptionsByKey(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.options.forEach((item) => item.setSelected(false));\n            option.setSelected(true);\n\n            this.emitChangeEvent(option);\n            this.reportValueChange();\n        }\n    }\n\n    setSelectedOptions(option: McListOption): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.options\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        this._value = values;\n\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        return clientRects.length ? clientRects[0].height : 0;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (!option.hasFocus) { return; }\n\n        const optionIndex = this.getOptionIndex(option);\n\n        // Check whether the option is the last item\n        if (optionIndex > 0) {\n            this.keyManager.setPreviousItemActive();\n        } else if (optionIndex === 0 && this.options.length > 1) {\n            this.keyManager.setNextItemActive();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        if ([SPACE, ENTER, LEFT_ARROW, RIGHT_ARROW].includes(keyCode) || isVerticalMovement(event)) {\n            event.preventDefault();\n        }\n\n        if (this.multiple && isSelectAll(event)) {\n            this.selectAllOptions();\n            event.preventDefault();\n\n            return;\n        } else if (isCopy(event)) {\n            this.copyActiveOption();\n            event.preventDefault();\n\n            return;\n        } else if ([SPACE, ENTER].includes(keyCode)) {\n            this.toggleFocusedOption();\n\n            return;\n        } else if (keyCode === TAB) {\n            this.keyManager.tabOut.next();\n\n            return;\n        } else if (keyCode === DOWN_ARROW) {\n            this.keyManager.setNextItemActive();\n        } else if (keyCode === UP_ARROW) {\n            this.keyManager.setPreviousItemActive();\n        } else if (keyCode === HOME) {\n            this.keyManager.setFirstItemActive();\n        } else if (keyCode === END) {\n            this.keyManager.setLastItemActive();\n        } else if (keyCode === PAGE_UP) {\n            this.keyManager.setPreviousPageItemActive();\n        } else if (keyCode === PAGE_DOWN) {\n            this.keyManager.setNextPageItemActive();\n        }\n\n        if (this.keyManager.activeItem && isVerticalMovement(event)) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem as McListOption,\n                hasModifierKey(event, 'shiftKey'),\n                hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            const value = this.getSelectedOptionValues();\n            this.onChange(value);\n            this._value = value;\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.userTabIndex || (this.options.length === 0 ? -1 : 0);\n    }\n\n    private onCopyDefaultHandler(): void {\n        this.clipboard?.copy(this.keyManager.activeItem!.value);\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n\n    private selectAllOptions() {\n        const optionsToSelect = this.options\n            .filter((option) => !option.disabled);\n\n        optionsToSelect\n        .forEach((option) => option.setSelected(true));\n\n        this.onSelectAll.emit(new McListSelectAllEvent(this, optionsToSelect));\n    }\n\n    private copyActiveOption() {\n        if (this.onCopy.observers.length) {\n            this.onCopy.emit(new McListCopyEvent(this, this.keyManager.activeItem as McListOption));\n        } else {\n            this.onCopyDefaultHandler();\n        }\n    }\n}\n","<mc-pseudo-checkbox\n    *ngIf=\"showCheckbox\"\n    [state]=\"selected ? 'checked' : 'unchecked'\"\n    [disabled]=\"disabled\">\n</mc-pseudo-checkbox>\n\n<div class=\"mc-list-text\" #text>\n    <ng-content></ng-content>\n</div>\n\n<ng-content select=\"mc-option-action\"></ng-content>\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList {}\n\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterContentInit() {\n        // tslint:disable-next-line:no-unused-expression\n        new McLineSetter(this.lines, this.elementRef);\n    }\n\n    handleFocus() {\n        this.elementRef.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this.elementRef.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n","<ng-content select=\"[mc-list-icon], [mcListIcon]\"></ng-content>\n\n<div class=\"mc-list-text\">\n    <ng-content select=\"[mc-line], [mcLine]\"></ng-content>\n</div>\n\n<ng-content></ng-content>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McLineModule, McOptionModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule,\n        McOptionModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McOptionModule\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption\n    ]\n})\nexport class McListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i6 from '@ptsecurity/mosaic/dropdown';\nimport { McDropdownModule } from '@ptsecurity/mosaic/dropdown';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport * as i1 from '@ptsecurity/mosaic/list';\nimport { McListModule } from '@ptsecurity/mosaic/list';\nimport * as i5 from '@ptsecurity/mosaic/tooltip';\nimport { McToolTipModule } from '@ptsecurity/mosaic/tooltip';\nimport * as i4 from '@ptsecurity/mosaic/core';\n\nfunction ListActionButtonExample_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"mc-option-action\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"value\", \"Item {{ item }}\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Item \", item_r2, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mcTooltip\", \"Tooltip text\")(\"mcPlacement\", \"right\")(\"mcDropdownTriggerFor\", _r1);\n} }\nconst _c0 = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9]; };\n/**\n * @title list ActionButton\n */\nclass ListActionButtonExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListActionButtonExample.ɵfac = function ListActionButtonExample_Factory(t) { return new (t || ListActionButtonExample)(); };\nListActionButtonExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListActionButtonExample, selectors: [[\"list-action-button-example\"]], decls: 13, vars: 5, consts: [[3, \"autoSelect\", \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"dropdown\", \"\"], [\"mc-dropdown-item\", \"\"], [3, \"value\"], [3, \"mcTooltip\", \"mcPlacement\", \"mcDropdownTriggerFor\"]], template: function ListActionButtonExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListActionButtonExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵtemplate(1, ListActionButtonExample_mc_list_option_1_Template, 3, 5, \"mc-list-option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-dropdown\", null, 2)(7, \"button\", 3);\n        i0.ɵɵtext(8, \"item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵtext(10, \"item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 3);\n        i0.ɵɵtext(12, \"item 3\");\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"autoSelect\", false)(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i1.McListOption, i4.McOptionActionComponent, i5.McTooltipTrigger, i6.McDropdownTrigger, i6.McDropdown, i6.McDropdownItem], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListActionButtonExample, [{\n        type: Component,\n        args: [{ selector: 'list-action-button-example', template: \"<mc-list-selection\\n    [autoSelect]=\\\"false\\\"\\n    [(ngModel)]=\\\"selected\\\">\\n    <mc-list-option *ngFor=\\\"let item of [1, 2, 3, 4, 5, 6, 7, 8, 9]\\\"\\n                    [value]=\\\"'Item {{ item }}'\\\">\\n        Item {{ item }}\\n\\n        <mc-option-action\\n            [mcTooltip]=\\\"'Tooltip text'\\\"\\n            [mcPlacement]=\\\"'right'\\\"\\n            [mcDropdownTriggerFor]=\\\"dropdown\\\">\\n        </mc-option-action>\\n    </mc-list-option>\\n</mc-list-selection>\\n<br>\\n<div>Selected: {{ selected }}</div>\\n\\n<mc-dropdown #dropdown>\\n    <button mc-dropdown-item>item 1</button>\\n    <button mc-dropdown-item>item 2</button>\\n    <button mc-dropdown-item>item 3</button>\\n</mc-dropdown>\\n\", styles: [\"\"] }]\n    }], null, null); })();\n\nfunction ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pokemon_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pokemon_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r3.viewValue, \" \");\n} }\nfunction ListGroupsExample_mc_optgroup_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-optgroup\", 2);\n    i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template, 2, 2, \"mc-list-option\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r1.name)(\"disabled\", group_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r1.pokemon);\n} }\n/**\n * @title Basic list\n */\nclass ListGroupsExample {\n    constructor() {\n        this.pokemonTypes = [\n            {\n                name: 'Grass',\n                pokemon: [\n                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n                    { value: 'oddish-1', viewValue: 'Oddish' },\n                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n                ]\n            },\n            {\n                name: 'Water',\n                disabled: true,\n                pokemon: [\n                    { value: 'squirtle-3', viewValue: 'Squirtle' },\n                    { value: 'psyduck-4', viewValue: 'Psyduck' },\n                    { value: 'horsea-5', viewValue: 'Horsea' }\n                ]\n            },\n            {\n                name: 'Fire',\n                pokemon: [\n                    { value: 'charmander-6', viewValue: 'Charmander' },\n                    { value: 'vulpix-7', viewValue: 'Vulpix' },\n                    { value: 'flareon-8', viewValue: 'Flareon' }\n                ]\n            },\n            {\n                name: 'Psychic',\n                pokemon: [\n                    { value: 'mew-9', viewValue: 'Mew' },\n                    { value: 'mewtwo-10', viewValue: 'Mewtwo' }\n                ]\n            }\n        ];\n    }\n}\nListGroupsExample.ɵfac = function ListGroupsExample_Factory(t) { return new (t || ListGroupsExample)(); };\nListGroupsExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListGroupsExample, selectors: [[\"list-groups-example\"]], decls: 4, vars: 2, consts: [[3, \"label\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"label\", \"disabled\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"]], template: function ListGroupsExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\");\n        i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_Template, 2, 3, \"mc-optgroup\", 0);\n        i0.ɵɵelementStart(2, \"mc-list-option\", 1);\n        i0.ɵɵtext(3, \"Mr. Mime\");\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemonTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"mime-11\");\n    } }, directives: [i1.McListSelection, i3.NgForOf, i4.McOptgroup, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListGroupsExample, [{\n        type: Component,\n        args: [{ selector: 'list-groups-example', template: \"<mc-list-selection>\\n    <mc-optgroup *ngFor=\\\"let group of pokemonTypes\\\" [label]=\\\"group.name\\\" [disabled]=\\\"group.disabled\\\">\\n        <mc-list-option *ngFor=\\\"let pokemon of group.pokemon\\\" [value]=\\\"pokemon.value\\\">\\n            {{ pokemon.viewValue }}\\n        </mc-list-option>\\n    </mc-optgroup>\\n    <mc-list-option [value]=\\\"'mime-11'\\\">Mr. Mime</mc-list-option>\\n</mc-list-selection>\\n\", styles: [\"\"] }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleCheckboxExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleCheckboxExample.ɵfac = function ListMultipleCheckboxExample_Factory(t) { return new (t || ListMultipleCheckboxExample)(); };\nListMultipleCheckboxExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleCheckboxExample, selectors: [[\"list-multiple-checkbox-example\"]], decls: 24, vars: 13, consts: [[\"multiple\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"disabled\"], [3, \"value\"]], template: function ListMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 2);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 2);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 2);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 2);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 2);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 2);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 2);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 2);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"Item 1\")(\"disabled\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 3\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 4\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 5\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 6\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 7\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 8\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 9\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 10\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleCheckboxExample, [{\n        type: Component,\n        args: [{ selector: 'list-multiple-checkbox-example', template: \"<mc-list-selection\\n    multiple=\\\"checkbox\\\"\\n    [(ngModel)]=\\\"selected\\\">\\n    <mc-list-option [value]=\\\"'Item 1'\\\" [disabled]=\\\"true\\\">Item 1</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 2'\\\">Item 2</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 3'\\\">Item 3</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 4'\\\">Item 4</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 5'\\\">Item 5</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 6'\\\">Item 6</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 7'\\\">Item 7</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 8'\\\">Item 8</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 9'\\\">Item 9</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 10'\\\">Item 10</mc-list-option>\\n</mc-list-selection>\\n<br>\\n<div>Selected: {{ selected }}</div>\\n\", styles: [\"\"] }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleKeyboardExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleKeyboardExample.ɵfac = function ListMultipleKeyboardExample_Factory(t) { return new (t || ListMultipleKeyboardExample)(); };\nListMultipleKeyboardExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleKeyboardExample, selectors: [[\"list-multiple-keyboard-example\"]], decls: 24, vars: 12, consts: [[\"multiple\", \"keyboard\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", 3, \"value\"], [3, \"value\"]], template: function ListMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 2);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 2);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 2);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 2);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 2);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 2);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 2);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 2);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"Item 1\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 3\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 4\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 5\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 6\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 7\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 8\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 9\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 10\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleKeyboardExample, [{\n        type: Component,\n        args: [{ selector: 'list-multiple-keyboard-example', template: \"<mc-list-selection\\n    multiple=\\\"keyboard\\\"\\n    [(ngModel)]=\\\"selected\\\">\\n    <mc-list-option [value]=\\\"'Item 1'\\\" disabled>Item 1</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 2'\\\">Item 2</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 3'\\\">Item 3</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 4'\\\">Item 4</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 5'\\\">Item 5</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 6'\\\">Item 6</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 7'\\\">Item 7</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 8'\\\">Item 8</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 9'\\\">Item 9</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 10'\\\">Item 10</mc-list-option>\\n</mc-list-selection>\\n<br>\\n<div>Selected: {{ selected }}</div>\\n\", styles: [\"\"] }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListOverviewExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListOverviewExample.ɵfac = function ListOverviewExample_Factory(t) { return new (t || ListOverviewExample)(); };\nListOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListOverviewExample, selectors: [[\"list-overview-example\"]], decls: 24, vars: 12, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", 3, \"value\"], [3, \"value\"]], template: function ListOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 2);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 2);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 2);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 2);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 2);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 2);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 2);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 2);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"Item 1\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 3\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 4\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 5\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 6\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 7\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 8\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 9\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 10\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListOverviewExample, [{\n        type: Component,\n        args: [{ selector: 'list-overview-example', template: \"<mc-list-selection\\n    [(ngModel)]=\\\"selected\\\">\\n    <mc-list-option [value]=\\\"'Item 1'\\\" disabled>Item 1</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 2'\\\">Item 2</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 3'\\\">Item 3</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 4'\\\">Item 4</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 5'\\\">Item 5</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 6'\\\">Item 6</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 7'\\\">Item 7</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 8'\\\">Item 8</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 9'\\\">Item 9</mc-list-option>\\n    <mc-list-option [value]=\\\"'Item 10'\\\">Item 10</mc-list-option>\\n</mc-list-selection>\\n<br>\\n<div>Selected: {{ selected }}</div>\\n\", styles: [\"\"] }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    ListOverviewExample,\n    ListMultipleCheckboxExample,\n    ListMultipleKeyboardExample,\n    ListGroupsExample,\n    ListActionButtonExample\n];\nclass ListExamplesModule {\n}\nListExamplesModule.ɵfac = function ListExamplesModule_Factory(t) { return new (t || ListExamplesModule)(); };\nListExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ListExamplesModule });\nListExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McListModule,\n            McDropdownModule,\n            McToolTipModule,\n            McIconModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McListModule,\n                    McDropdownModule,\n                    McToolTipModule,\n                    McIconModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ListExamplesModule, { declarations: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample,\n        ListActionButtonExample], imports: [CommonModule,\n        FormsModule,\n        McListModule,\n        McDropdownModule,\n        McToolTipModule,\n        McIconModule], exports: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample,\n        ListActionButtonExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ListActionButtonExample, ListExamplesModule, ListGroupsExample, ListMultipleCheckboxExample, ListMultipleKeyboardExample, ListOverviewExample };\n"],"names":["i0","McListOption","constructor","changeDetector","ngZone","listSelection","group","elementRef","hasFocus","Subject","inputsInitialized","_disabled","_selected","value","_value","newValue","selected","disabled","listSelectionDisabled","groupDisabled","toBoolean","markForCheck","showCheckbox","_showCheckbox","undefined","coerceBooleanProperty","selectionModel","isSelected","setSelected","tabIndex","ngOnInit","list","some","compareWith","wasSelected","Promise","resolve","then","ngOnDestroy","removeOptionFromList","toggle","getLabel","text","nativeElement","textContent","select","deselect","getHeight","clientRects","getClientRects","length","height","handleClick","$event","setSelectedOptionsByClick","hasModifierKey","onKeydown","actionButton","keyCode","TAB","shiftKey","focus","preventDefault","onFocus","next","option","blur","onStable","asObservable","pipe","take","subscribe","run","onBlur","getHostElement","forwardRef","McListSelection","i1","McOptionActionComponent","McTooltipTrigger","McDropdownTrigger","provide","MC_OPTION_ACTION_PARENT","useExisting","i2","Component","selector","host","class","encapsulation","None","preserveWhitespaces","changeDetection","OnPush","providers","template","decorators","Inject","args","Optional","ContentChild","tooltipTrigger","dropdownTrigger","ViewChild","static","checkboxPosition","Input","NG_VALUE_ACCESSOR","multi","McListSelectionChange","source","McListSelectAllEvent","options","McListCopyEvent","McListSelectionBase","mixinTabIndex","mixinDisabled","McListSelectionMixinBase","changeDetectorRef","multiple","clipboard","EventEmitter","_autoSelect","_noUnselectLast","horizontal","_tabIndex","userTabIndex","a1","a2","_","MultipleMode","CHECKBOX","KEYBOARD","multipleMode","autoSelect","noUnselectLast","SelectionModel","optionFocusChanges","merge","map","optionBlurChanges","ngAfterContentInit","keyManager","FocusKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","takeUntil","destroyed","setTimeout","setOptionsFromValues","changed","event","item","added","removed","changes","startWith","resetOptions","updateTabIndex","updateScrollSize","complete","setFirstItemActive","hasFocusedOption","setActiveItem","onTouched","selectAll","forEach","reportValueChange","deselectAll","first","withScrollSize","Math","floor","ctrlKey","setSelectedOptions","canDeselectLast","clear","emitChangeEvent","setSelectedOptionsByKey","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","toArray","slice","filter","renderedOption","isLastRenderedOption","activeItem","writeValue","values","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","getSelectedOptionValues","toggleFocusedOption","focusedIndex","isValidIndex","focusedOption","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","onKeyDown","SPACE","ENTER","LEFT_ARROW","RIGHT_ARROW","includes","isVerticalMovement","isSelectAll","selectAllOptions","isCopy","copyActiveOption","DOWN_ARROW","UP_ARROW","HOME","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","selectionChange","emit","onCopyDefaultHandler","copy","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","index","indexOf","updateActiveItem","getOptionByValue","find","Boolean","optionsToSelect","onSelectAll","onCopy","observers","i3","MC_SELECTION_LIST_VALUE_ACCESSOR","inputs","styles","Attribute","ContentChildren","descendants","Output","McList","ChangeDetectionStrategy","McListItem","McLineSetter","lines","handleFocus","classList","add","handleBlur","remove","McLine","McListModule","CommonModule","A11yModule","McPseudoCheckboxModule","McLineModule","McOptionModule","NgModule","imports","exports","declarations"],"sourceRoot":"webpack:///"}