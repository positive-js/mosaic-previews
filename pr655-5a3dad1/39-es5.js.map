{"version":3,"sources":["webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-tree.js"],"names":["TreeFilteringExample_mc_tree_option_6_Template","rf","ctx","node_r2","$implicit","ctx_r0","name","treeControl","getViewValue","filterValue","value","TreeFilteringExample_mc_tree_option_7_Template","node_r3","ctx_r1","FileNode$4","FileFlatNode$4","buildFileTree$4","level","data","Object","keys","k","v","node","undefined","children","type","push","DATA_OBJECT$4","docs","src","cdk","a11ly","documentation","source","tools","mosaic","autocomplete","button","index","version","alert","badge","README","wallabyTest","scripts","deploy","tests","TreeFilteringExample","modelValue","transformer","parent","flatNode","expandable","getLevel","isExpandable","getChildren","getValue","nodeType","treeFlattener","dataSource","filterNodes","_","nodeData","ɵfac","TreeFilteringExample_Factory","t","ɵcmp","selectors","decls","vars","consts","template","TreeFilteringExample_Template","TreeFilteringExample_Template_input_ngModelChange_1_listener","$event","onFilterChange","TreeFilteringExample_Template_mc_tree_selection_ngModelChange_5_listener","hasChild","directives","pipes","styles","ngDevMode","args","selector","templateUrl","styleUrls","TreeMultipleCheckboxExample_mc_tree_option_1_Template","TreeMultipleCheckboxExample_mc_tree_option_2_Template","FileNode$3","FileFlatNode$3","buildFileTree$3","DATA_OBJECT$3","TreeMultipleCheckboxExample","TreeMultipleCheckboxExample_Factory","TreeMultipleCheckboxExample_Template","TreeMultipleCheckboxExample_Template_mc_tree_selection_ngModelChange_0_listener","TreeMultipleChecklistExample_mc_tree_option_1_Template","_r4","TreeMultipleChecklistExample_mc_tree_option_1_Template_mc_checkbox_change_1_listener","ctx_r3","fileSelectionToggle","checklistSelection","isSelected","TreeMultipleChecklistExample_mc_tree_option_2_Template","_r7","TreeMultipleChecklistExample_mc_tree_option_2_Template_mc_checkbox_change_2_listener","node_r5","ctx_r6","descendantsAllSelected","descendantsPartiallySelected","FileNode$2","FileFlatNode$2","buildFileTree$2","DATA_OBJECT$2","TreeMultipleChecklistExample","descendants","getDescendants","every","child","result","some","toggle","select","deselect","checkAllParentsSelection","getParentNode","checkRootNodeSelection","nodeSelected","descAllSelected","currentLevel","startIndex","dataNodes","indexOf","i","currentNode","TreeMultipleChecklistExample_Factory","TreeMultipleChecklistExample_Template","TreeMultipleChecklistExample_Template_mc_tree_selection_ngModelChange_0_listener","TreeMultipleKeyboardExample_mc_tree_option_1_Template","TreeMultipleKeyboardExample_mc_tree_option_2_Template","FileNode$1","FileFlatNode$1","buildFileTree$1","DATA_OBJECT$1","TreeMultipleKeyboardExample","TreeMultipleKeyboardExample_Factory","TreeMultipleKeyboardExample_Template","TreeMultipleKeyboardExample_Template_mc_tree_selection_ngModelChange_0_listener","TreeOverviewExample_mc_tree_option_1_Template","TreeOverviewExample_mc_tree_option_2_Template","FileNode","FileFlatNode","buildFileTree","DATA_OBJECT","TreeOverviewExample","TreeOverviewExample_Factory","TreeOverviewExample_Template","TreeOverviewExample_Template_mc_tree_selection_ngModelChange_0_listener","EXAMPLES","TreeExamplesModule","TreeExamplesModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAkBA;;;AACA,eAASA,8CAAT,CAAwDC,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA,+DAAU,CAAV,EAAa,aAAb;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,mEAAc,UAAd,EAA0BF,OAAO,CAACG,IAAR,KAAiB,OAA3C;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2B,0DAAe,CAAf,EAAkB,CAAlB,EAAqBD,MAAM,CAACE,WAAP,CAAmBC,YAAnB,CAAgCL,OAAhC,CAArB,EAA+DE,MAAM,CAACE,WAAP,CAAmBE,WAAnB,CAA+BC,KAA9F,CAA3B,EAAiI,4DAAjI;AACH;AAAE;;AACH,eAASC,8CAAT,CAAwDV,EAAxD,EAA4DC,GAA5D,EAAiE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC3E,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,qBAAhB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA,+DAAU,CAAV,EAAa,aAAb;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMW,OAAO,GAAGV,GAAG,CAACE,SAApB;;AACA,cAAMS,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,mEAAc,MAAd,EAAsBD,OAAtB;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2B,0DAAe,CAAf,EAAkB,CAAlB,EAAqBC,MAAM,CAACN,WAAP,CAAmBC,YAAnB,CAAgCI,OAAhC,CAArB,EAA+DC,MAAM,CAACN,WAAP,CAAmBE,WAAnB,CAA+BC,KAA9F,CAA3B,EAAiI,4DAAjI;AACH;AAAE;;UACGI,U;;;AAEN;;;UACMC,c;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,eAAT,CAAyBN,KAAzB,EAAgCO,KAAhC,EAAuC;AACnC,YAAMC,IAAI,GAAG,EAAb;;AACA,wCAAgBC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAhB,kCAAoC;AAA/B,cAAMW,CAAC,mBAAP;AACD,cAAMC,CAAC,GAAGZ,KAAK,CAACW,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAIT,UAAJ,EAAb;AACAS,cAAI,CAACjB,IAAL,aAAee,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKE,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACE,QAAL,GAAgBT,eAAe,CAACM,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA/B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACG,IAAL,GAAYJ,CAAZ;AACH;;AACDJ,cAAI,CAACS,IAAL,CAAUJ,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAMU,aAAa,GAAG;AAClBC,YAAI,EAAE,KADY;AAElBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFa;AAuClBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCS;AAgDlBC,aAAK,EAAE;AAhDW,OAAtB;AAkDA;AACA;AACA;;UACMC,oB;AACF,wCAAc;AAAA;;AACV,eAAKC,UAAL,GAAkB,EAAlB;AACA,eAAKxC,WAAL,GAAmB,EAAnB;;AACA,eAAKyC,WAAL,GAAmB,UAAC3B,IAAD,EAAON,KAAP,EAAckC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAIrC,cAAJ,EAAjB;AACAqC,oBAAQ,CAAC9C,IAAT,GAAgBiB,IAAI,CAACjB,IAArB;AACA8C,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBH,IAAI,CAACG,IAArB;AACA0B,oBAAQ,CAACnC,KAAT,GAAiBA,KAAjB;AACAmC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC9B,IAAI,CAACE,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAC/B,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKsC,YAAL,GAAoB,UAAChC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC8B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAACjC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACE,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAAClC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACjB,IAAZ;AACH,WAFD;;AAGA,eAAKE,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,gBAAMmC,QAAQ,GAAGnC,IAAI,CAACG,IAAL,cAAgBH,IAAI,CAACG,IAArB,IAA8B,EAA/C;AACA,6BAAUH,IAAI,CAACjB,IAAf,SAAsBoD,QAAtB;AACH,WAHD;;AAIA,eAAKC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKT,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKjD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAK+C,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKjD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuBF,eAAe,CAACY,aAAD,EAAgB,CAAhB,CAAtC;AACH;;;;iBACD,wBAAelB,KAAf,EAAsB;AAClB,iBAAKH,WAAL,CAAiBsD,WAAjB,CAA6BnD,KAA7B;AACH;;;iBACD,kBAASoD,CAAT,EAAYC,QAAZ,EAAsB;AAAE,mBAAOA,QAAQ,CAACV,UAAhB;AAA6B;;;;;;AAEzDL,0BAAoB,CAACgB,IAArB,GAA4B,SAASC,4BAAT,CAAsCC,CAAtC,EAAyC;AAAE,eAAO,KAAKA,CAAC,IAAIlB,oBAAV,GAAP;AAA2C,OAAlH;;AACAA,0BAAoB,CAACmB,IAArB,GAA4B,gEAAqB;AAAEzC,YAAI,EAAEsB,oBAAR;AAA8BoB,iBAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,CAAzC;AAAuEC,aAAK,EAAE,CAA9E;AAAiFC,YAAI,EAAE,CAAvF;AAA0FC,cAAM,EAAE,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,SAAnC,EAA8C,eAA9C,CAAD,EAAiE,CAAC,CAAD,EAAI,SAAJ,EAAe,YAAf,EAA6B,aAA7B,EAA4C,eAA5C,CAAjE,EAA+H,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,EAAyC,CAAzC,EAA4C,eAA5C,CAA/H,EAA6L,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAA7L,EAAiQ,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,CAAjQ,EAA2S,CAAC,CAAD,EAAI,WAAJ,CAA3S,EAA6T,CAAC,mBAAD,EAAsB,EAAtB,CAA7T,EAAwV,CAAC,CAAD,EAAI,MAAJ,CAAxV,CAAlG;AAAwcC,gBAAQ,EAAE,SAASC,6BAAT,CAAuCxE,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACzjB,yEAAkB,CAAlB,EAAqB,eAArB;;AACA,yEAAkB,CAAlB,EAAqB,OAArB,EAA8B,CAA9B;;AACA,qEAAc,eAAd,EAA+B,SAASyE,4DAAT,CAAsEC,MAAtE,EAA8E;AAAE,qBAAOzE,GAAG,CAAC0E,cAAJ,CAAmBD,MAAnB,CAAP;AAAoC,aAAnJ,EAAqJ,eAArJ,EAAsK,SAASD,4DAAT,CAAsEC,MAAtE,EAA8E;AAAE,qBAAOzE,GAAG,CAACO,WAAJ,GAAkBkE,MAAzB;AAAkC,aAAxR;;AACA;;AACA;;AACA,oEAAa,CAAb,EAAgB,IAAhB;;AACA,oEAAa,CAAb,EAAgB,IAAhB;;AACA,oEAAa,CAAb,EAAgB,IAAhB;;AACA,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,eAAd,EAA+B,SAASE,wEAAT,CAAkFF,MAAlF,EAA0F;AAAE,qBAAOzE,GAAG,CAAC+C,UAAJ,GAAiB0B,MAAxB;AAAiC,aAA5J;;AACA,qEAAc,CAAd,EAAiB3E,8CAAjB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,gBAAvE,EAAyF,CAAzF;;AACA,qEAAc,CAAd,EAAiBW,8CAAjB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,gBAAvE,EAAyF,CAAzF;;AACA;AACH;;AAAC,cAAIV,EAAE,GAAG,CAAT,EAAY;AACV,oEAAa,CAAb;;AACA,qEAAc,SAAd,EAAyBC,GAAG,CAACO,WAA7B;;AACA,oEAAa,CAAb;;AACA,qEAAc,SAAd,EAAyBP,GAAG,CAAC+C,UAA7B,EAAyC,YAAzC,EAAuD/C,GAAG,CAAC0D,UAA3D,EAAuE,aAAvE,EAAsF1D,GAAG,CAACK,WAA1F;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCL,GAAG,CAAC4E,QAAvC;AACH;AAAE,SArB0C;AAqBxCC,kBAAU,EAAE,CAAC,yEAAD,EAAiB,gEAAjB,EAA6B,mEAA7B,EAAwD,8DAAxD,EAA8E,sDAA9E,EAA4F,uEAA5F,EAAkH,qEAAlH,EAAsI,oEAAtI,EAAyJ,yEAAzJ,EAAiL,iFAAjL,CArB4B;AAqBsLC,aAAK,EAAE,CAAC,uEAAD,CArB7L;AAqBmNC,cAAM,EAAE,CAAC,EAAD;AArB3N,OAArB,CAA5B;;AAsBA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqBlC,oBAArB,EAA2C,CAAC;AACtGtB,cAAI,EAAE,uDADgG;AAEtGyD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,wBADX;AAECC,uBAAW,EAAE,6BAFd;AAGCC,qBAAS,EAAE,CAAC,4BAAD;AAHZ,WAAD;AAFgG,SAAD,CAA3C,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;AASA;;;AACA,eAASC,qDAAT,CAA+DtF,EAA/D,EAAmEC,GAAnE,EAAwE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,mEAAc,UAAd,EAA0BF,OAAO,CAACG,IAAR,KAAiB,OAA3C;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BD,MAAM,CAACE,WAAP,CAAmBC,YAAnB,CAAgCL,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;AACH,eAASqF,qDAAT,CAA+DvF,EAA/D,EAAmEC,GAAnE,EAAwE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,qBAAhB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMW,OAAO,GAAGV,GAAG,CAACE,SAApB;;AACA,cAAMS,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,mEAAc,MAAd,EAAsBD,OAAtB;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BC,MAAM,CAACN,WAAP,CAAmBC,YAAnB,CAAgCI,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;UACG6E,U;;;AAEN;;;UACMC,c;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,eAAT,CAAyBjF,KAAzB,EAAgCO,KAAhC,EAAuC;AACnC,YAAMC,IAAI,GAAG,EAAb;;AACA,0CAAgBC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAhB,qCAAoC;AAA/B,cAAMW,CAAC,qBAAP;AACD,cAAMC,CAAC,GAAGZ,KAAK,CAACW,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAIkE,UAAJ,EAAb;AACAlE,cAAI,CAACjB,IAAL,aAAee,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKE,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACE,QAAL,GAAgBkE,eAAe,CAACrE,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA/B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACG,IAAL,GAAYJ,CAAZ;AACH;;AACDJ,cAAI,CAACS,IAAL,CAAUJ,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAM0E,aAAa,GAAG;AAClB/D,YAAI,EAAE,KADY;AAElBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFa;AAuClBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCS;AAgDlBC,aAAK,EAAE;AAhDW,OAAtB;AAkDA;AACA;AACA;;UACM8C,2B;AACF,+CAAc;AAAA;;AACV,eAAK5C,UAAL,GAAkB,EAAlB;;AACA,eAAKC,WAAL,GAAmB,UAAC3B,IAAD,EAAON,KAAP,EAAckC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAIsC,cAAJ,EAAjB;AACAtC,oBAAQ,CAAC9C,IAAT,GAAgBiB,IAAI,CAACjB,IAArB;AACA8C,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBH,IAAI,CAACG,IAArB;AACA0B,oBAAQ,CAACnC,KAAT,GAAiBA,KAAjB;AACAmC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC9B,IAAI,CAACE,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAC/B,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKsC,YAAL,GAAoB,UAAChC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC8B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAACjC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACE,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAAClC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACjB,IAAZ;AACH,WAFD;;AAGA,eAAKE,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,gBAAMmC,QAAQ,GAAGnC,IAAI,CAACG,IAAL,cAAgBH,IAAI,CAACG,IAArB,IAA8B,EAA/C;AACA,6BAAUH,IAAI,CAACjB,IAAf,SAAsBoD,QAAtB;AACH,WAHD;;AAIA,eAAKC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKT,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKjD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAK+C,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKjD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuByE,eAAe,CAACC,aAAD,EAAgB,CAAhB,CAAtC;AACH;;;;iBACD,kBAAS9B,CAAT,EAAYC,QAAZ,EAAsB;AAAE,mBAAOA,QAAQ,CAACV,UAAhB;AAA6B;;;;;;AAEzDwC,iCAA2B,CAAC7B,IAA5B,GAAmC,SAAS8B,mCAAT,CAA6C5B,CAA7C,EAAgD;AAAE,eAAO,KAAKA,CAAC,IAAI2B,2BAAV,GAAP;AAAkD,OAAvI;;AACAA,iCAA2B,CAAC1B,IAA5B,GAAmC,gEAAqB;AAAEzC,YAAI,EAAEmE,2BAAR;AAAqCzB,iBAAS,EAAE,CAAC,CAAC,gCAAD,CAAD,CAAhD;AAAsFC,aAAK,EAAE,CAA7F;AAAgGC,YAAI,EAAE,CAAtG;AAAyGC,cAAM,EAAE,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,CAAzB,EAA4B,SAA5B,EAAuC,YAAvC,EAAqD,aAArD,EAAoE,eAApE,CAAD,EAAuF,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,EAAyC,CAAzC,EAA4C,eAA5C,CAAvF,EAAqJ,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAArJ,EAAyN,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,CAAzN,EAAmQ,CAAC,CAAD,EAAI,WAAJ,CAAnQ,EAAqR,CAAC,mBAAD,EAAsB,EAAtB,CAArR,EAAgT,CAAC,CAAD,EAAI,MAAJ,CAAhT,CAAjH;AAA+aC,gBAAQ,EAAE,SAASuB,oCAAT,CAA8C9F,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9iB,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,eAAd,EAA+B,SAAS+F,+EAAT,CAAyFrB,MAAzF,EAAiG;AAAE,qBAAOzE,GAAG,CAAC+C,UAAJ,GAAiB0B,MAAxB;AAAiC,aAAnK;;AACA,qEAAc,CAAd,EAAiBY,qDAAjB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,gBAA9E,EAAgG,CAAhG;;AACA,qEAAc,CAAd,EAAiBC,qDAAjB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,gBAA9E,EAAgG,CAAhG;;AACA;AACH;;AAAC,cAAIvF,EAAE,GAAG,CAAT,EAAY;AACV,qEAAc,SAAd,EAAyBC,GAAG,CAAC+C,UAA7B,EAAyC,YAAzC,EAAuD/C,GAAG,CAAC0D,UAA3D,EAAuE,aAAvE,EAAsF1D,GAAG,CAACK,WAA1F;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCL,GAAG,CAAC4E,QAAvC;AACH;AAAE,SAViD;AAU/CC,kBAAU,EAAE,CAAC,uEAAD,EAAuB,8DAAvB,EAA6C,sDAA7C,EAA2D,qEAA3D,EAA+E,oEAA/E,EAAkG,yEAAlG,EAA0H,iFAA1H,CAVmC;AAUwHE,cAAM,EAAE,CAAC,EAAD;AAVhI,OAArB,CAAnC;;AAWA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqBW,2BAArB,EAAkD,CAAC;AAC7GnE,cAAI,EAAE,uDADuG;AAE7GyD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,gCADX;AAECC,uBAAW,EAAE,qCAFd;AAGCC,qBAAS,EAAE,CAAC,oCAAD;AAHZ,WAAD;AAFuG,SAAD,CAAlD,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;AASA;;;AACA,eAASW,sDAAT,CAAgEhG,EAAhE,EAAoEC,GAApE,EAAyE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACnF,cAAMiG,GAAG,GAAG,gEAAZ;;AACA,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,uEAAkB,CAAlB,EAAqB,aAArB,EAAoC,CAApC;;AACA,mEAAc,QAAd,EAAwB,SAASC,oFAAT,GAAgG;AAAE,wEAAiBD,GAAjB;;AAAuB,gBAAM/F,OAAO,GAAGD,GAAG,CAACE,SAApB;;AAA+B,gBAAMgG,MAAM,GAAG,6DAAf;;AAAmC,mBAAOA,MAAM,CAACC,mBAAP,CAA2BlG,OAA3B,CAAP;AAA6C,WAAhQ;;AACA;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIF,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,mEAAc,UAAd,EAA0BF,OAAO,CAACG,IAAR,KAAiB,OAA3C;;AACA,kEAAa,CAAb;;AACA,mEAAc,UAAd,EAA0BH,OAAO,CAACG,IAAR,KAAiB,OAA3C,EAAoD,SAApD,EAA+DD,MAAM,CAACiG,kBAAP,CAA0BC,UAA1B,CAAqCpG,OAArC,CAA/D;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BE,MAAM,CAACE,WAAP,CAAmBC,YAAnB,CAAgCL,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;AACH,eAASqG,sDAAT,CAAgEvG,EAAhE,EAAoEC,GAApE,EAAyE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACnF,cAAMwG,GAAG,GAAG,gEAAZ;;AACA,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,qBAAhB,EAAuC,CAAvC;;AACA,uEAAkB,CAAlB,EAAqB,aAArB,EAAoC,CAApC;;AACA,mEAAc,QAAd,EAAwB,SAASC,oFAAT,GAAgG;AAAE,wEAAiBD,GAAjB;;AAAuB,gBAAME,OAAO,GAAGzG,GAAG,CAACE,SAApB;;AAA+B,gBAAMwG,MAAM,GAAG,6DAAf;;AAAmC,mBAAOA,MAAM,CAACP,mBAAP,CAA2BM,OAA3B,CAAP;AAA6C,WAAhQ;;AACA;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAI1G,EAAE,GAAG,CAAT,EAAY;AACV,cAAM0G,OAAO,GAAGzG,GAAG,CAACE,SAApB;;AACA,cAAMS,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,mEAAc,MAAd,EAAsB8F,OAAtB;;AACA,kEAAa,CAAb;;AACA,mEAAc,SAAd,EAAyB9F,MAAM,CAACgG,sBAAP,CAA8BF,OAA9B,CAAzB,EAAiE,eAAjE,EAAkF9F,MAAM,CAACiG,4BAAP,CAAoCH,OAApC,CAAlF;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2B9F,MAAM,CAACN,WAAP,CAAmBC,YAAnB,CAAgCmG,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;UACGI,U;;;AAEN;;;UACMC,c;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,eAAT,CAAyBvG,KAAzB,EAAgCO,KAAhC,EAAuC;AACnC,YAAMC,IAAI,GAAG,EAAb;;AACA,0CAAgBC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAhB,qCAAoC;AAA/B,cAAMW,CAAC,qBAAP;AACD,cAAMC,CAAC,GAAGZ,KAAK,CAACW,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAIwF,UAAJ,EAAb;AACAxF,cAAI,CAACjB,IAAL,aAAee,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKE,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACE,QAAL,GAAgBwF,eAAe,CAAC3F,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA/B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACG,IAAL,GAAYJ,CAAZ;AACH;;AACDJ,cAAI,CAACS,IAAL,CAAUJ,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAMgG,aAAa,GAAG;AAClBrF,YAAI,EAAE,KADY;AAElBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFa;AAuClBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCS;AAgDlBC,aAAK,EAAE;AAhDW,OAAtB;AAkDA;AACA;AACA;;UACMoE,4B;AACF,gDAAc;AAAA;;AACV,eAAKlE,UAAL,GAAkB,EAAlB;AACA;;AACA,eAAKqD,kBAAL,GAA0B,IAAI,uEAAJ,CAAmB;AAAK;AAAxB,WAA1B;;AACA,eAAKpD,WAAL,GAAmB,UAAC3B,IAAD,EAAON,KAAP,EAAckC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAI4D,cAAJ,EAAjB;AACA5D,oBAAQ,CAAC9C,IAAT,GAAgBiB,IAAI,CAACjB,IAArB;AACA8C,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBH,IAAI,CAACG,IAArB;AACA0B,oBAAQ,CAACnC,KAAT,GAAiBA,KAAjB;AACAmC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC9B,IAAI,CAACE,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAC/B,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKsC,YAAL,GAAoB,UAAChC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC8B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAACjC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACE,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAAClC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACjB,IAAZ;AACH,WAFD;;AAGA,eAAKE,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,gBAAMmC,QAAQ,GAAGnC,IAAI,CAACG,IAAL,cAAgBH,IAAI,CAACG,IAArB,IAA8B,EAA/C;AACA,6BAAUH,IAAI,CAACjB,IAAf,SAAsBoD,QAAtB;AACH,WAHD;;AAIA,eAAKC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKT,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKjD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAK+C,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKjD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuB+F,eAAe,CAACC,aAAD,EAAgB,CAAhB,CAAtC;AACH;;;;iBACD,kBAASpD,CAAT,EAAYC,QAAZ,EAAsB;AAAE,mBAAOA,QAAQ,CAACV,UAAhB;AAA6B;AACrD;;;;iBACA,gCAAuB9B,IAAvB,EAA6B;AAAA;;AACzB,gBAAM6F,WAAW,GAAG,KAAK7G,WAAL,CAAiB8G,cAAjB,CAAgC9F,IAAhC,CAApB;AACA,mBAAO6F,WAAW,CAACE,KAAZ,CAAkB,UAACC,KAAD;AAAA,qBAAW,KAAI,CAACjB,kBAAL,CAAwBC,UAAxB,CAAmCgB,KAAnC,CAAX;AAAA,aAAlB,CAAP;AACH;AACD;;;;iBACA,sCAA6BhG,IAA7B,EAAmC;AAAA;;AAC/B,gBAAM6F,WAAW,GAAG,KAAK7G,WAAL,CAAiB8G,cAAjB,CAAgC9F,IAAhC,CAApB;AACA,gBAAMiG,MAAM,GAAGJ,WAAW,CAACK,IAAZ,CAAiB,UAACF,KAAD;AAAA,qBAAW,MAAI,CAACjB,kBAAL,CAAwBC,UAAxB,CAAmCgB,KAAnC,CAAX;AAAA,aAAjB,CAAf;AACA,mBAAOC,MAAM,IAAI,CAAC,KAAKX,sBAAL,CAA4BtF,IAA5B,CAAlB;AACH;AACD;;;;iBACA,6BAAoBA,IAApB,EAA0B;AAAA;AAAA;AAAA;;AACtB,iBAAK+E,kBAAL,CAAwBoB,MAAxB,CAA+BnG,IAA/B;AACA,gBAAM6F,WAAW,GAAG,KAAK7G,WAAL,CAAiB8G,cAAjB,CAAgC9F,IAAhC,CAApB;AACA,iBAAK+E,kBAAL,CAAwBC,UAAxB,CAAmChF,IAAnC,IACM,8BAAK+E,kBAAL,EAAwBqB,MAAxB,iDAAkCP,WAAlC,EADN,GAEM,+BAAKd,kBAAL,EAAwBsB,QAAxB,kDAAoCR,WAApC,EAFN,CAHsB,CAMtB;;AACAA,uBAAW,CAACE,KAAZ,CAAkB,UAACC,KAAD;AAAA,qBAAW,MAAI,CAACjB,kBAAL,CAAwBC,UAAxB,CAAmCgB,KAAnC,CAAX;AAAA,aAAlB;AACA,iBAAKM,wBAAL,CAA8BtG,IAA9B;AACH;AACD;;;;iBACA,kCAAyBA,IAAzB,EAA+B;AAC3B,gBAAI4B,MAAM,GAAG,KAAK2E,aAAL,CAAmBvG,IAAnB,CAAb;;AACA,mBAAO4B,MAAP,EAAe;AACX,mBAAK4E,sBAAL,CAA4B5E,MAA5B;AACAA,oBAAM,GAAG,KAAK2E,aAAL,CAAmB3E,MAAnB,CAAT;AACH;AACJ;AACD;;;;iBACA,gCAAuB5B,IAAvB,EAA6B;AAAA;;AACzB,gBAAMyG,YAAY,GAAG,KAAK1B,kBAAL,CAAwBC,UAAxB,CAAmChF,IAAnC,CAArB;AACA,gBAAM6F,WAAW,GAAG,KAAK7G,WAAL,CAAiB8G,cAAjB,CAAgC9F,IAAhC,CAApB;AACA,gBAAM0G,eAAe,GAAGb,WAAW,CAACE,KAAZ,CAAkB,UAACC,KAAD;AAAA,qBAAW,MAAI,CAACjB,kBAAL,CAAwBC,UAAxB,CAAmCgB,KAAnC,CAAX;AAAA,aAAlB,CAAxB;;AACA,gBAAIS,YAAY,IAAI,CAACC,eAArB,EAAsC;AAClC,mBAAK3B,kBAAL,CAAwBsB,QAAxB,CAAiCrG,IAAjC;AACH,aAFD,MAGK,IAAI,CAACyG,YAAD,IAAiBC,eAArB,EAAsC;AACvC,mBAAK3B,kBAAL,CAAwBqB,MAAxB,CAA+BpG,IAA/B;AACH;AACJ;AACD;;;;iBACA,uBAAcA,IAAd,EAAoB;AAChB,gBAAM2G,YAAY,GAAG,KAAK5E,QAAL,CAAc/B,IAAd,CAArB;;AACA,gBAAI2G,YAAY,GAAG,CAAnB,EAAsB;AAClB,qBAAO,IAAP;AACH;;AACD,gBAAMC,UAAU,GAAG,KAAK5H,WAAL,CAAiB6H,SAAjB,CAA2BC,OAA3B,CAAmC9G,IAAnC,IAA2C,CAA9D;;AACA,iBAAK,IAAI+G,CAAC,GAAGH,UAAb,EAAyBG,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AAClC,kBAAMC,WAAW,GAAG,KAAKhI,WAAL,CAAiB6H,SAAjB,CAA2BE,CAA3B,CAApB;;AACA,kBAAI,KAAKhF,QAAL,CAAciF,WAAd,IAA6BL,YAAjC,EAA+C;AAC3C,uBAAOK,WAAP;AACH;AACJ;;AACD,mBAAO,IAAP;AACH;;;;;;AAELpB,kCAA4B,CAACnD,IAA7B,GAAoC,SAASwE,oCAAT,CAA8CtE,CAA9C,EAAiD;AAAE,eAAO,KAAKA,CAAC,IAAIiD,4BAAV,GAAP;AAAmD,OAA1I;;AACAA,kCAA4B,CAAChD,IAA7B,GAAoC,gEAAqB;AAAEzC,YAAI,EAAEyF,4BAAR;AAAsC/C,iBAAS,EAAE,CAAC,CAAC,iCAAD,CAAD,CAAjD;AAAwFC,aAAK,EAAE,CAA/F;AAAkGC,YAAI,EAAE,CAAxG;AAA2GC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,SAAJ,EAAe,YAAf,EAA6B,aAA7B,EAA4C,eAA5C,CAAD,EAA+D,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,EAAyC,CAAzC,EAA4C,eAA5C,CAA/D,EAA6H,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAA7H,EAAiM,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,CAAjM,EAA2O,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,EAA4C,SAA5C,EAAuD,QAAvD,CAA3O,EAA6S,CAAC,CAAD,EAAI,WAAJ,CAA7S,EAA+T,CAAC,mBAAD,EAAsB,EAAtB,CAA/T,EAA0V,CAAC,CAAD,EAAI,MAAJ,CAA1V,EAAuW,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,SAAhC,EAA2C,eAA3C,EAA4D,QAA5D,CAAvW,CAAnH;AAAkiBC,gBAAQ,EAAE,SAASiE,qCAAT,CAA+CxI,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACnqB,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,eAAd,EAA+B,SAASyI,gFAAT,CAA0F/D,MAA1F,EAAkG;AAAE,qBAAOzE,GAAG,CAAC+C,UAAJ,GAAiB0B,MAAxB;AAAiC,aAApK;;AACA,qEAAc,CAAd,EAAiBsB,sDAAjB,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,gBAA/E,EAAiG,CAAjG;;AACA,qEAAc,CAAd,EAAiBO,sDAAjB,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,gBAA/E,EAAiG,CAAjG;;AACA;AACH;;AAAC,cAAIvG,EAAE,GAAG,CAAT,EAAY;AACV,qEAAc,SAAd,EAAyBC,GAAG,CAAC+C,UAA7B,EAAyC,YAAzC,EAAuD/C,GAAG,CAAC0D,UAA3D,EAAuE,aAAvE,EAAsF1D,GAAG,CAACK,WAA1F;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCL,GAAG,CAAC4E,QAAvC;AACH;AAAE,SAVkD;AAUhDC,kBAAU,EAAE,CAAC,uEAAD,EAAuB,8DAAvB,EAA6C,sDAA7C,EAA2D,qEAA3D,EAA+E,oEAA/E,EAAkG,yEAAlG,EAA0H,sEAA1H,EAAyI,iFAAzI,CAVoC;AAUsIE,cAAM,EAAE,CAAC,6DAAD;AAV9I,OAArB,CAApC;;AAWA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqBiC,4BAArB,EAAmD,CAAC;AAC9GzF,cAAI,EAAE,uDADwG;AAE9GyD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,iCADX;AAECC,uBAAW,EAAE,sCAFd;AAGCC,qBAAS,EAAE,CAAC,qCAAD;AAHZ,WAAD;AAFwG,SAAD,CAAnD,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;AASA;;;AACA,eAASqD,qDAAT,CAA+D1I,EAA/D,EAAmEC,GAAnE,EAAwE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,mEAAc,UAAd,EAA0BF,OAAO,CAACG,IAAR,KAAiB,OAA3C;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BD,MAAM,CAACE,WAAP,CAAmBC,YAAnB,CAAgCL,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;AACH,eAASyI,qDAAT,CAA+D3I,EAA/D,EAAmEC,GAAnE,EAAwE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,qBAAhB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMW,OAAO,GAAGV,GAAG,CAACE,SAApB;;AACA,cAAMS,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,mEAAc,MAAd,EAAsBD,OAAtB;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BC,MAAM,CAACN,WAAP,CAAmBC,YAAnB,CAAgCI,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;UACGiI,U;;;AAEN;;;UACMC,c;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,eAAT,CAAyBrI,KAAzB,EAAgCO,KAAhC,EAAuC;AACnC,YAAMC,IAAI,GAAG,EAAb;;AACA,0CAAgBC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAhB,qCAAoC;AAA/B,cAAMW,CAAC,qBAAP;AACD,cAAMC,CAAC,GAAGZ,KAAK,CAACW,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAIsH,UAAJ,EAAb;AACAtH,cAAI,CAACjB,IAAL,aAAee,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKE,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACE,QAAL,GAAgBsH,eAAe,CAACzH,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA/B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACG,IAAL,GAAYJ,CAAZ;AACH;;AACDJ,cAAI,CAACS,IAAL,CAAUJ,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAM8H,aAAa,GAAG;AAClBnH,YAAI,EAAE,KADY;AAElBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFa;AAuClBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCS;AAgDlBC,aAAK,EAAE;AAhDW,OAAtB;AAkDA;AACA;AACA;;UACMkG,2B;AACF,+CAAc;AAAA;;AACV,eAAKhG,UAAL,GAAkB,EAAlB;;AACA,eAAKC,WAAL,GAAmB,UAAC3B,IAAD,EAAON,KAAP,EAAckC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAI0F,cAAJ,EAAjB;AACA1F,oBAAQ,CAAC9C,IAAT,GAAgBiB,IAAI,CAACjB,IAArB;AACA8C,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBH,IAAI,CAACG,IAArB;AACA0B,oBAAQ,CAACnC,KAAT,GAAiBA,KAAjB;AACAmC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC9B,IAAI,CAACE,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAC/B,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKsC,YAAL,GAAoB,UAAChC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC8B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAACjC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACE,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAAClC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACjB,IAAZ;AACH,WAFD;;AAGA,eAAKE,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,gBAAMmC,QAAQ,GAAGnC,IAAI,CAACG,IAAL,cAAgBH,IAAI,CAACG,IAArB,IAA8B,EAA/C;AACA,6BAAUH,IAAI,CAACjB,IAAf,SAAsBoD,QAAtB;AACH,WAHD;;AAIA,eAAKC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKT,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKjD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAK+C,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKjD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuB6H,eAAe,CAACC,aAAD,EAAgB,CAAhB,CAAtC;AACH;;;;iBACD,kBAASlF,CAAT,EAAYC,QAAZ,EAAsB;AAAE,mBAAOA,QAAQ,CAACV,UAAhB;AAA6B;;;;;;AAEzD4F,iCAA2B,CAACjF,IAA5B,GAAmC,SAASkF,mCAAT,CAA6ChF,CAA7C,EAAgD;AAAE,eAAO,KAAKA,CAAC,IAAI+E,2BAAV,GAAP;AAAkD,OAAvI;;AACAA,iCAA2B,CAAC9E,IAA5B,GAAmC,gEAAqB;AAAEzC,YAAI,EAAEuH,2BAAR;AAAqC7E,iBAAS,EAAE,CAAC,CAAC,gCAAD,CAAD,CAAhD;AAAsFC,aAAK,EAAE,CAA7F;AAAgGC,YAAI,EAAE,CAAtG;AAAyGC,cAAM,EAAE,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,CAAzB,EAA4B,SAA5B,EAAuC,YAAvC,EAAqD,aAArD,EAAoE,eAApE,CAAD,EAAuF,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,EAAyC,CAAzC,EAA4C,eAA5C,CAAvF,EAAqJ,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAArJ,EAAyN,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,CAAzN,EAAmQ,CAAC,CAAD,EAAI,WAAJ,CAAnQ,EAAqR,CAAC,mBAAD,EAAsB,EAAtB,CAArR,EAAgT,CAAC,CAAD,EAAI,MAAJ,CAAhT,CAAjH;AAA+aC,gBAAQ,EAAE,SAAS2E,oCAAT,CAA8ClJ,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9iB,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,eAAd,EAA+B,SAASmJ,+EAAT,CAAyFzE,MAAzF,EAAiG;AAAE,qBAAOzE,GAAG,CAAC+C,UAAJ,GAAiB0B,MAAxB;AAAiC,aAAnK;;AACA,qEAAc,CAAd,EAAiBgE,qDAAjB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,gBAA9E,EAAgG,CAAhG;;AACA,qEAAc,CAAd,EAAiBC,qDAAjB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,gBAA9E,EAAgG,CAAhG;;AACA;AACH;;AAAC,cAAI3I,EAAE,GAAG,CAAT,EAAY;AACV,qEAAc,SAAd,EAAyBC,GAAG,CAAC+C,UAA7B,EAAyC,YAAzC,EAAuD/C,GAAG,CAAC0D,UAA3D,EAAuE,aAAvE,EAAsF1D,GAAG,CAACK,WAA1F;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCL,GAAG,CAAC4E,QAAvC;AACH;AAAE,SAViD;AAU/CC,kBAAU,EAAE,CAAC,uEAAD,EAAuB,8DAAvB,EAA6C,sDAA7C,EAA2D,qEAA3D,EAA+E,oEAA/E,EAAkG,yEAAlG,EAA0H,iFAA1H,CAVmC;AAUwHE,cAAM,EAAE,CAAC,EAAD;AAVhI,OAArB,CAAnC;;AAWA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqB+D,2BAArB,EAAkD,CAAC;AAC7GvH,cAAI,EAAE,uDADuG;AAE7GyD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,gCADX;AAECC,uBAAW,EAAE,qCAFd;AAGCC,qBAAS,EAAE,CAAC,oCAAD;AAHZ,WAAD;AAFuG,SAAD,CAAlD,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;AASA;;;AACA,eAAS+D,6CAAT,CAAuDpJ,EAAvD,EAA2DC,GAA3D,EAAgE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1E,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,mEAAc,UAAd,EAA0BF,OAAO,CAACG,IAAR,KAAiB,OAA3C;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BD,MAAM,CAACE,WAAP,CAAmBC,YAAnB,CAAgCL,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;AACH,eAASmJ,6CAAT,CAAuDrJ,EAAvD,EAA2DC,GAA3D,EAAgE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1E,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,qBAAhB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,MAAhB,EAAwB,CAAxB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMW,OAAO,GAAGV,GAAG,CAACE,SAApB;;AACA,cAAMS,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,mEAAc,MAAd,EAAsBD,OAAtB;;AACA,kEAAa,CAAb;;AACA,mEAAc,WAAd,EAA2BC,MAAM,CAACN,WAAP,CAAmBC,YAAnB,CAAgCI,OAAhC,CAA3B,EAAqE,4DAArE;AACH;AAAE;;UACG2I,Q;;;AAEN;;;UACMC,Y;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,aAAT,CAAuB/I,KAAvB,EAA8BO,KAA9B,EAAqC;AACjC,YAAMC,IAAI,GAAG,EAAb;;AACA,0CAAgBC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAhB,qCAAoC;AAA/B,cAAMW,CAAC,qBAAP;AACD,cAAMC,CAAC,GAAGZ,KAAK,CAACW,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAIgI,QAAJ,EAAb;AACAhI,cAAI,CAACjB,IAAL,aAAee,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKE,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACE,QAAL,GAAgBgI,aAAa,CAACnI,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA7B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACG,IAAL,GAAYJ,CAAZ;AACH;;AACDJ,cAAI,CAACS,IAAL,CAAUJ,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAMwI,WAAW,GAAG;AAChB7H,YAAI,EAAE,KADU;AAEhBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFW;AAuChBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCO;AAgDhBC,aAAK,EAAE;AAhDS,OAApB;AAkDA;AACA;AACA;;UACM4G,mB;AACF,uCAAc;AAAA;;AACV,eAAK1G,UAAL,GAAkB,EAAlB;;AACA,eAAKC,WAAL,GAAmB,UAAC3B,IAAD,EAAON,KAAP,EAAckC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAIoG,YAAJ,EAAjB;AACApG,oBAAQ,CAAC9C,IAAT,GAAgBiB,IAAI,CAACjB,IAArB;AACA8C,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBH,IAAI,CAACG,IAArB;AACA0B,oBAAQ,CAACnC,KAAT,GAAiBA,KAAjB;AACAmC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC9B,IAAI,CAACE,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAC/B,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKsC,YAAL,GAAoB,UAAChC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC8B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAACjC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACE,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAAClC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACjB,IAAZ;AACH,WAFD;;AAGA,eAAKE,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,gBAAMmC,QAAQ,GAAGnC,IAAI,CAACG,IAAL,cAAgBH,IAAI,CAACG,IAArB,IAA8B,EAA/C;AACA,6BAAUH,IAAI,CAACjB,IAAf,SAAsBoD,QAAtB;AACH,WAHD;;AAIA,eAAKC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKT,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKjD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAK+C,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKjD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuBuI,aAAa,CAACC,WAAD,EAAc,CAAd,CAApC;AACH;;;;iBACD,kBAAS5F,CAAT,EAAYC,QAAZ,EAAsB;AAAE,mBAAOA,QAAQ,CAACV,UAAhB;AAA6B;;;;;;AAEzDsG,yBAAmB,CAAC3F,IAApB,GAA2B,SAAS4F,2BAAT,CAAqC1F,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIyF,mBAAV,GAAP;AAA0C,OAA/G;;AACAA,yBAAmB,CAACxF,IAApB,GAA2B,gEAAqB;AAAEzC,YAAI,EAAEiI,mBAAR;AAA6BvF,iBAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAAxC;AAAqEC,aAAK,EAAE,CAA5E;AAA+EC,YAAI,EAAE,CAArF;AAAwFC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,SAAJ,EAAe,YAAf,EAA6B,aAA7B,EAA4C,eAA5C,CAAD,EAA+D,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,EAAyC,CAAzC,EAA4C,eAA5C,CAA/D,EAA6H,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAA7H,EAAiM,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,UAA7B,CAAjM,EAA2O,CAAC,CAAD,EAAI,WAAJ,CAA3O,EAA6P,CAAC,mBAAD,EAAsB,EAAtB,CAA7P,EAAwR,CAAC,CAAD,EAAI,MAAJ,CAAxR,CAAhG;AAAsYC,gBAAQ,EAAE,SAASqF,4BAAT,CAAsC5J,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACrf,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,eAAd,EAA+B,SAAS6J,uEAAT,CAAiFnF,MAAjF,EAAyF;AAAE,qBAAOzE,GAAG,CAAC+C,UAAJ,GAAiB0B,MAAxB;AAAiC,aAA3J;;AACA,qEAAc,CAAd,EAAiB0E,6CAAjB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,gBAAtE,EAAwF,CAAxF;;AACA,qEAAc,CAAd,EAAiBC,6CAAjB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,gBAAtE,EAAwF,CAAxF;;AACA;AACH;;AAAC,cAAIrJ,EAAE,GAAG,CAAT,EAAY;AACV,qEAAc,SAAd,EAAyBC,GAAG,CAAC+C,UAA7B,EAAyC,YAAzC,EAAuD/C,GAAG,CAAC0D,UAA3D,EAAuE,aAAvE,EAAsF1D,GAAG,CAACK,WAA1F;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCL,GAAG,CAAC4E,QAAvC;AACH;AAAE,SAVyC;AAUvCC,kBAAU,EAAE,CAAC,uEAAD,EAAuB,8DAAvB,EAA6C,sDAA7C,EAA2D,qEAA3D,EAA+E,oEAA/E,EAAkG,yEAAlG,EAA0H,iFAA1H,CAV2B;AAUgIE,cAAM,EAAE,CAAC,EAAD;AAVxI,OAArB,CAA3B;;AAWA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqByE,mBAArB,EAA0C,CAAC;AACrGjI,cAAI,EAAE,uDAD+F;AAErGyD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,uBADX;AAECC,uBAAW,EAAE,4BAFd;AAGCC,qBAAS,EAAE,CAAC,2BAAD;AAHZ,WAAD;AAF+F,SAAD,CAA1C,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;;AASA,UAAMyE,QAAQ,GAAG,CACbJ,mBADa,EAEb9D,2BAFa,EAGbsB,4BAHa,EAIb8B,2BAJa,EAKbjG,oBALa,CAAjB;;UAOMgH,kB;;;;AAENA,wBAAkB,CAAChG,IAAnB,GAA0B,SAASiG,0BAAT,CAAoC/F,CAApC,EAAuC;AAAE,eAAO,KAAKA,CAAC,IAAI8F,kBAAV,GAAP;AAAyC,OAA5G;;AACAA,wBAAkB,CAACE,IAAnB,GAA0B,+DAAoB;AAAExI,YAAI,EAAEsI;AAAR,OAApB,CAA1B;AACAA,wBAAkB,CAACG,IAAnB,GAA0B,+DAAoB;AAAEC,eAAO,EAAE,CAAC,CAC9C,0DAD8C,EAE9C,+EAF8C,EAG9C,sEAH8C,EAI9C,oEAJ8C,EAK9C,oEAL8C,EAM9C,yEAN8C,EAO9C,4EAP8C,CAAD;AAAX,OAApB,CAA1B;;AASA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAAsBL,kBAAtB,EAA0C;AAAEM,sBAAY,EAAE,CAACX,mBAAD,EACpH9D,2BADoH,EAEpHsB,4BAFoH,EAGpH8B,2BAHoH,EAIpHjG,oBAJoH,CAAhB;AAI7EoH,iBAAO,EAAE,CAAC,0DAAD,EAChC,+EADgC,EAEhC,sEAFgC,EAGhC,oEAHgC,EAIhC,oEAJgC,EAKhC,yEALgC,EAMhC,4EANgC,CAJoE;AAUjFG,iBAAO,EAAE,CAACZ,mBAAD,EAC5B9D,2BAD4B,EAE5BsB,4BAF4B,EAG5B8B,2BAH4B,EAI5BjG,oBAJ4B;AAVwE,SAA1C,CAAnD;AAcoB,OAdnC;;AAeA,OAAC,YAAY;AAAE,SAAC,OAAOkC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqB8E,kBAArB,EAAyC,CAAC;AACpGtI,cAAI,EAAE,sDAD8F;AAEpGyD,cAAI,EAAE,CAAC;AACCiF,mBAAO,EAAE,CACL,0DADK,EAEL,+EAFK,EAGL,sEAHK,EAIL,oEAJK,EAKL,oEALK,EAML,yEANK,EAOL,4EAPK,CADV;AAUCE,wBAAY,EAAEP,QAVf;AAWCQ,mBAAO,EAAER;AAXV,WAAD;AAF8F,SAAD,CAAzC,EAe1D,IAf0D,EAepD,IAfoD,CAAnD;AAeO,OAftB;AAiBA;AACA;AACA;AAGA","file":"39-es5.js","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@ptsecurity/mosaic/checkbox';\nimport { McCheckboxModule } from '@ptsecurity/mosaic/checkbox';\nimport * as i5 from '@ptsecurity/mosaic/core';\nimport { McHighlightModule } from '@ptsecurity/mosaic/core';\nimport * as i1 from '@ptsecurity/mosaic/form-field';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport * as i2 from '@ptsecurity/mosaic/input';\nimport { McInputModule } from '@ptsecurity/mosaic/input';\nimport * as i1$1 from '@ptsecurity/mosaic/tree';\nimport { McTreeFlattener, McTreeFlatDataSource, McTreeModule } from '@ptsecurity/mosaic/tree';\nimport { FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n/* tslint:disable:no-reserved-keywords object-literal-key-quotes */\nfunction TreeFilteringExample_mc_tree_option_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 4);\n    i0.ɵɵelement(1, \"span\", 5);\n    i0.ɵɵpipe(2, \"mcHighlight\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", node_r2.name === \"tests\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(2, 2, ctx_r0.treeControl.getViewValue(node_r2), ctx_r0.treeControl.filterValue.value), i0.ɵɵsanitizeHtml);\n} }\nfunction TreeFilteringExample_mc_tree_option_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 6);\n    i0.ɵɵelement(1, \"mc-tree-node-toggle\", 7);\n    i0.ɵɵelement(2, \"span\", 5);\n    i0.ɵɵpipe(3, \"mcHighlight\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", node_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(3, 2, ctx_r1.treeControl.getViewValue(node_r3), ctx_r1.treeControl.filterValue.value), i0.ɵɵsanitizeHtml);\n} }\nclass FileNode$4 {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode$4 {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree$4(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode$4();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree$4(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT$4 = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic tree\n */\nclass TreeFilteringExample {\n    constructor() {\n        this.modelValue = '';\n        this.filterValue = '';\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode$4();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            const nodeType = node.type ? `.${node.type}` : '';\n            return `${node.name}${nodeType}`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree$4(DATA_OBJECT$4, 0);\n    }\n    onFilterChange(value) {\n        this.treeControl.filterNodes(value);\n    }\n    hasChild(_, nodeData) { return nodeData.expandable; }\n}\nTreeFilteringExample.ɵfac = function TreeFilteringExample_Factory(t) { return new (t || TreeFilteringExample)(); };\nTreeFilteringExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeFilteringExample, selectors: [[\"tree-filtering-example\"]], decls: 8, vars: 5, consts: [[\"type\", \"text\", \"mcInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"dataSource\", \"treeControl\", \"ngModelChange\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\"], [3, \"innerHTML\"], [\"mcTreeNodePadding\", \"\"], [3, \"node\"]], template: function TreeFilteringExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-form-field\");\n        i0.ɵɵelementStart(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeFilteringExample_Template_input_ngModelChange_1_listener($event) { return ctx.onFilterChange($event); })(\"ngModelChange\", function TreeFilteringExample_Template_input_ngModelChange_1_listener($event) { return ctx.filterValue = $event; });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"mc-tree-selection\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeFilteringExample_Template_mc_tree_selection_ngModelChange_5_listener($event) { return ctx.modelValue = $event; });\n        i0.ɵɵtemplate(6, TreeFilteringExample_mc_tree_option_6_Template, 3, 5, \"mc-tree-option\", 2);\n        i0.ɵɵtemplate(7, TreeFilteringExample_mc_tree_option_7_Template, 4, 5, \"mc-tree-option\", 3);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.filterValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.modelValue)(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1.McFormField, i2.McInput, i2$1.DefaultValueAccessor, i2$1.NgControlStatus, i2$1.NgModel, i1$1.McTreeSelection, i1$1.McTreeNodeDef, i1$1.McTreeOption, i1$1.McTreeNodePadding, i1$1.McTreeNodeToggleComponent], pipes: [i5.McHighlightPipe], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeFilteringExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-filtering-example',\n                templateUrl: 'tree-filtering-example.html',\n                styleUrls: ['tree-filtering-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-reserved-keywords object-literal-key-quotes */\nfunction TreeMultipleCheckboxExample_mc_tree_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 3);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", node_r2.name === \"tests\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.treeControl.getViewValue(node_r2), i0.ɵɵsanitizeHtml);\n} }\nfunction TreeMultipleCheckboxExample_mc_tree_option_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"mc-tree-node-toggle\", 6);\n    i0.ɵɵelement(2, \"span\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", node_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.treeControl.getViewValue(node_r3), i0.ɵɵsanitizeHtml);\n} }\nclass FileNode$3 {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode$3 {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree$3(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode$3();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree$3(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT$3 = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic tree\n */\nclass TreeMultipleCheckboxExample {\n    constructor() {\n        this.modelValue = [];\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode$3();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            const nodeType = node.type ? `.${node.type}` : '';\n            return `${node.name}${nodeType}`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree$3(DATA_OBJECT$3, 0);\n    }\n    hasChild(_, nodeData) { return nodeData.expandable; }\n}\nTreeMultipleCheckboxExample.ɵfac = function TreeMultipleCheckboxExample_Factory(t) { return new (t || TreeMultipleCheckboxExample)(); };\nTreeMultipleCheckboxExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeMultipleCheckboxExample, selectors: [[\"tree-multiple-checkbox-example\"]], decls: 3, vars: 4, consts: [[\"multiple\", \"checkbox\", 3, \"ngModel\", \"dataSource\", \"treeControl\", \"ngModelChange\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\"], [3, \"innerHTML\"], [\"mcTreeNodePadding\", \"\"], [3, \"node\"]], template: function TreeMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-tree-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeMultipleCheckboxExample_Template_mc_tree_selection_ngModelChange_0_listener($event) { return ctx.modelValue = $event; });\n        i0.ɵɵtemplate(1, TreeMultipleCheckboxExample_mc_tree_option_1_Template, 2, 2, \"mc-tree-option\", 1);\n        i0.ɵɵtemplate(2, TreeMultipleCheckboxExample_mc_tree_option_2_Template, 3, 2, \"mc-tree-option\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.modelValue)(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1$1.McTreeSelection, i2$1.NgControlStatus, i2$1.NgModel, i1$1.McTreeNodeDef, i1$1.McTreeOption, i1$1.McTreeNodePadding, i1$1.McTreeNodeToggleComponent], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMultipleCheckboxExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-multiple-checkbox-example',\n                templateUrl: 'tree-multiple-checkbox-example.html',\n                styleUrls: ['tree-multiple-checkbox-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-reserved-keywords object-literal-key-quotes */\nfunction TreeMultipleChecklistExample_mc_tree_option_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 3);\n    i0.ɵɵelementStart(1, \"mc-checkbox\", 4);\n    i0.ɵɵlistener(\"change\", function TreeMultipleChecklistExample_mc_tree_option_1_Template_mc_checkbox_change_1_listener() { i0.ɵɵrestoreView(_r4); const node_r2 = ctx.$implicit; const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.fileSelectionToggle(node_r2); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"span\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", node_r2.name === \"tests\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", node_r2.name === \"tests\")(\"checked\", ctx_r0.checklistSelection.isSelected(node_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.treeControl.getViewValue(node_r2), i0.ɵɵsanitizeHtml);\n} }\nfunction TreeMultipleChecklistExample_mc_tree_option_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 6);\n    i0.ɵɵelement(1, \"mc-tree-node-toggle\", 7);\n    i0.ɵɵelementStart(2, \"mc-checkbox\", 8);\n    i0.ɵɵlistener(\"change\", function TreeMultipleChecklistExample_mc_tree_option_2_Template_mc_checkbox_change_2_listener() { i0.ɵɵrestoreView(_r7); const node_r5 = ctx.$implicit; const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.fileSelectionToggle(node_r5); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", node_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r1.descendantsAllSelected(node_r5))(\"indeterminate\", ctx_r1.descendantsPartiallySelected(node_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.treeControl.getViewValue(node_r5), i0.ɵɵsanitizeHtml);\n} }\nclass FileNode$2 {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode$2 {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree$2(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode$2();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree$2(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT$2 = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Checklist tree\n */\nclass TreeMultipleChecklistExample {\n    constructor() {\n        this.modelValue = [];\n        /** The selection for checklist */\n        this.checklistSelection = new SelectionModel(true /* multiple */);\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode$2();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            const nodeType = node.type ? `.${node.type}` : '';\n            return `${node.name}${nodeType}`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree$2(DATA_OBJECT$2, 0);\n    }\n    hasChild(_, nodeData) { return nodeData.expandable; }\n    /** Whether all the descendants of the node are selected. */\n    descendantsAllSelected(node) {\n        const descendants = this.treeControl.getDescendants(node);\n        return descendants.every((child) => this.checklistSelection.isSelected(child));\n    }\n    /** Whether part of the descendants are selected */\n    descendantsPartiallySelected(node) {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some((child) => this.checklistSelection.isSelected(child));\n        return result && !this.descendantsAllSelected(node);\n    }\n    /** Toggle the to-do item selection. Select/deselect all the descendants node */\n    fileSelectionToggle(node) {\n        this.checklistSelection.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.checklistSelection.isSelected(node)\n            ? this.checklistSelection.select(...descendants)\n            : this.checklistSelection.deselect(...descendants);\n        // Force update for the parent\n        descendants.every((child) => this.checklistSelection.isSelected(child));\n        this.checkAllParentsSelection(node);\n    }\n    /* Checks all the parents when a leaf node is selected/unselected */\n    checkAllParentsSelection(node) {\n        let parent = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n    /** Check root node checked state and change it accordingly */\n    checkRootNodeSelection(node) {\n        const nodeSelected = this.checklistSelection.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected = descendants.every((child) => this.checklistSelection.isSelected(child));\n        if (nodeSelected && !descAllSelected) {\n            this.checklistSelection.deselect(node);\n        }\n        else if (!nodeSelected && descAllSelected) {\n            this.checklistSelection.select(node);\n        }\n    }\n    /* Get the parent node of a node */\n    getParentNode(node) {\n        const currentLevel = this.getLevel(node);\n        if (currentLevel < 1) {\n            return null;\n        }\n        const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n        for (let i = startIndex; i >= 0; i--) {\n            const currentNode = this.treeControl.dataNodes[i];\n            if (this.getLevel(currentNode) < currentLevel) {\n                return currentNode;\n            }\n        }\n        return null;\n    }\n}\nTreeMultipleChecklistExample.ɵfac = function TreeMultipleChecklistExample_Factory(t) { return new (t || TreeMultipleChecklistExample)(); };\nTreeMultipleChecklistExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeMultipleChecklistExample, selectors: [[\"tree-multiple-checklist-example\"]], decls: 3, vars: 4, consts: [[3, \"ngModel\", \"dataSource\", \"treeControl\", \"ngModelChange\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\"], [1, \"tree-example-checkbox\", 3, \"disabled\", \"checked\", \"change\"], [3, \"innerHTML\"], [\"mcTreeNodePadding\", \"\"], [3, \"node\"], [1, \"tree-example-checkbox\", 3, \"checked\", \"indeterminate\", \"change\"]], template: function TreeMultipleChecklistExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-tree-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeMultipleChecklistExample_Template_mc_tree_selection_ngModelChange_0_listener($event) { return ctx.modelValue = $event; });\n        i0.ɵɵtemplate(1, TreeMultipleChecklistExample_mc_tree_option_1_Template, 3, 4, \"mc-tree-option\", 1);\n        i0.ɵɵtemplate(2, TreeMultipleChecklistExample_mc_tree_option_2_Template, 4, 4, \"mc-tree-option\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.modelValue)(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1$1.McTreeSelection, i2$1.NgControlStatus, i2$1.NgModel, i1$1.McTreeNodeDef, i1$1.McTreeOption, i1$1.McTreeNodePadding, i3.McCheckbox, i1$1.McTreeNodeToggleComponent], styles: [\".tree-example-checkbox[_ngcontent-%COMP%]{margin-right:8px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMultipleChecklistExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-multiple-checklist-example',\n                templateUrl: 'tree-multiple-checklist-example.html',\n                styleUrls: ['tree-multiple-checklist-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-reserved-keywords object-literal-key-quotes */\nfunction TreeMultipleKeyboardExample_mc_tree_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 3);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", node_r2.name === \"tests\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.treeControl.getViewValue(node_r2), i0.ɵɵsanitizeHtml);\n} }\nfunction TreeMultipleKeyboardExample_mc_tree_option_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"mc-tree-node-toggle\", 6);\n    i0.ɵɵelement(2, \"span\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", node_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.treeControl.getViewValue(node_r3), i0.ɵɵsanitizeHtml);\n} }\nclass FileNode$1 {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode$1 {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree$1(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode$1();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree$1(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT$1 = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic tree\n */\nclass TreeMultipleKeyboardExample {\n    constructor() {\n        this.modelValue = [];\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode$1();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            const nodeType = node.type ? `.${node.type}` : '';\n            return `${node.name}${nodeType}`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree$1(DATA_OBJECT$1, 0);\n    }\n    hasChild(_, nodeData) { return nodeData.expandable; }\n}\nTreeMultipleKeyboardExample.ɵfac = function TreeMultipleKeyboardExample_Factory(t) { return new (t || TreeMultipleKeyboardExample)(); };\nTreeMultipleKeyboardExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeMultipleKeyboardExample, selectors: [[\"tree-multiple-keyboard-example\"]], decls: 3, vars: 4, consts: [[\"multiple\", \"keyboard\", 3, \"ngModel\", \"dataSource\", \"treeControl\", \"ngModelChange\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\"], [3, \"innerHTML\"], [\"mcTreeNodePadding\", \"\"], [3, \"node\"]], template: function TreeMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-tree-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeMultipleKeyboardExample_Template_mc_tree_selection_ngModelChange_0_listener($event) { return ctx.modelValue = $event; });\n        i0.ɵɵtemplate(1, TreeMultipleKeyboardExample_mc_tree_option_1_Template, 2, 2, \"mc-tree-option\", 1);\n        i0.ɵɵtemplate(2, TreeMultipleKeyboardExample_mc_tree_option_2_Template, 3, 2, \"mc-tree-option\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.modelValue)(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1$1.McTreeSelection, i2$1.NgControlStatus, i2$1.NgModel, i1$1.McTreeNodeDef, i1$1.McTreeOption, i1$1.McTreeNodePadding, i1$1.McTreeNodeToggleComponent], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMultipleKeyboardExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-multiple-keyboard-example',\n                templateUrl: 'tree-multiple-keyboard-example.html',\n                styleUrls: ['tree-multiple-keyboard-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-reserved-keywords object-literal-key-quotes */\nfunction TreeOverviewExample_mc_tree_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 3);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", node_r2.name === \"tests\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.treeControl.getViewValue(node_r2), i0.ɵɵsanitizeHtml);\n} }\nfunction TreeOverviewExample_mc_tree_option_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"mc-tree-node-toggle\", 6);\n    i0.ɵɵelement(2, \"span\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", node_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.treeControl.getViewValue(node_r3), i0.ɵɵsanitizeHtml);\n} }\nclass FileNode {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic tree\n */\nclass TreeOverviewExample {\n    constructor() {\n        this.modelValue = '';\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            const nodeType = node.type ? `.${node.type}` : '';\n            return `${node.name}${nodeType}`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree(DATA_OBJECT, 0);\n    }\n    hasChild(_, nodeData) { return nodeData.expandable; }\n}\nTreeOverviewExample.ɵfac = function TreeOverviewExample_Factory(t) { return new (t || TreeOverviewExample)(); };\nTreeOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeOverviewExample, selectors: [[\"tree-overview-example\"]], decls: 3, vars: 4, consts: [[3, \"ngModel\", \"dataSource\", \"treeControl\", \"ngModelChange\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcTreeNodePadding\", \"\", 3, \"disabled\"], [3, \"innerHTML\"], [\"mcTreeNodePadding\", \"\"], [3, \"node\"]], template: function TreeOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-tree-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeOverviewExample_Template_mc_tree_selection_ngModelChange_0_listener($event) { return ctx.modelValue = $event; });\n        i0.ɵɵtemplate(1, TreeOverviewExample_mc_tree_option_1_Template, 2, 2, \"mc-tree-option\", 1);\n        i0.ɵɵtemplate(2, TreeOverviewExample_mc_tree_option_2_Template, 3, 2, \"mc-tree-option\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.modelValue)(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1$1.McTreeSelection, i2$1.NgControlStatus, i2$1.NgModel, i1$1.McTreeNodeDef, i1$1.McTreeOption, i1$1.McTreeNodePadding, i1$1.McTreeNodeToggleComponent], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-overview-example',\n                templateUrl: 'tree-overview-example.html',\n                styleUrls: ['tree-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\nconst EXAMPLES = [\n    TreeOverviewExample,\n    TreeMultipleCheckboxExample,\n    TreeMultipleChecklistExample,\n    TreeMultipleKeyboardExample,\n    TreeFilteringExample\n];\nclass TreeExamplesModule {\n}\nTreeExamplesModule.ɵfac = function TreeExamplesModule_Factory(t) { return new (t || TreeExamplesModule)(); };\nTreeExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: TreeExamplesModule });\nTreeExamplesModule.ɵinj = i0.ɵɵdefineInjector({ imports: [[\n            FormsModule,\n            McFormFieldModule,\n            McInputModule,\n            McTreeModule,\n            McIconModule,\n            McHighlightModule,\n            McCheckboxModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TreeExamplesModule, { declarations: [TreeOverviewExample,\n        TreeMultipleCheckboxExample,\n        TreeMultipleChecklistExample,\n        TreeMultipleKeyboardExample,\n        TreeFilteringExample], imports: [FormsModule,\n        McFormFieldModule,\n        McInputModule,\n        McTreeModule,\n        McIconModule,\n        McHighlightModule,\n        McCheckboxModule], exports: [TreeOverviewExample,\n        TreeMultipleCheckboxExample,\n        TreeMultipleChecklistExample,\n        TreeMultipleKeyboardExample,\n        TreeFilteringExample] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    FormsModule,\n                    McFormFieldModule,\n                    McInputModule,\n                    McTreeModule,\n                    McIconModule,\n                    McHighlightModule,\n                    McCheckboxModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TreeExamplesModule, TreeFilteringExample, TreeMultipleCheckboxExample, TreeMultipleChecklistExample, TreeMultipleKeyboardExample, TreeOverviewExample };\n//# sourceMappingURL=ptsecurity-mosaic-examples-mosaic-tree.js.map\n"]}