{"version":3,"sources":["./dist/packages/mosaic/sidepanel/sidepanel-config.ts","./dist/packages/mosaic/sidepanel/sidepanel-animations.ts","./dist/packages/mosaic/sidepanel/sidepanel-ref.ts","./dist/packages/mosaic/sidepanel/sidepanel-container.component.ts","./dist/packages/mosaic/sidepanel/sidepanel.service.ts","./dist/packages/mosaic/sidepanel/sidepanel-directives.ts","./dist/packages/mosaic/sidepanel/sidepanel.module.ts","./dist/packages/mosaic/sidepanel/ptsecurity-mosaic-sidepanel.ts","./node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-sidepanel.js"],"names":[],"mappings":"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","file":"14-es2015.js","sourcesContent":["import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: { readonly sidepanelState: AnimationTriggerMetadata } = {\n    sidepanelState: trigger('state', [\n        state(\n            'hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state(\n            'visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition(\n            'visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)\n        ),\n        transition(\n            'void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`)\n        )\n    ])\n};\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet, {static: true}) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean\n    ) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        // tslint:disable-next-line:deprecation\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        // tslint:disable-next-line:deprecation\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        // tslint:disable-next-line:deprecation\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" [color]=\"'second'\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {mcSidepanelAnimations as ɵb,mcSidepanelTransformAnimation as ɵa} from './sidepanel-animations';","import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Inject, TemplateRef, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@ptsecurity/mosaic/button';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport * as i1 from '@ptsecurity/mosaic/sidepanel';\nimport { McSidepanelPosition, MC_SIDEPANEL_DATA, McSidepanelModule } from '@ptsecurity/mosaic/sidepanel';\n\nfunction SidepanelExampleCustomComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r2 + 1, \" \");\n} }\n/**\n * @title Template Modal\n */\nclass SidepanelComponentExample {\n    constructor(sidepanelService) {\n        this.sidepanelService = sidepanelService;\n    }\n    openComponentSidepanel() {\n        this.sidepanelService.open(SidepanelExampleCustomComponent, {\n            position: McSidepanelPosition.Right,\n            data: {\n                openComponentSidepanel: () => { this.openComponentSidepanel(); }\n            }\n        });\n    }\n}\nSidepanelComponentExample.ɵfac = function SidepanelComponentExample_Factory(t) { return new (t || SidepanelComponentExample)(i0.ɵɵdirectiveInject(i1.McSidepanelService)); };\nSidepanelComponentExample.ɵcmp = i0.ɵɵdefineComponent({ type: SidepanelComponentExample, selectors: [[\"sidepanel-component-example\"]], decls: 3, vars: 1, consts: [[\"mc-button\", \"\", 3, \"color\", \"click\"]], template: function SidepanelComponentExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function SidepanelComponentExample_Template_button_click_0_listener() { return ctx.openComponentSidepanel(); });\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2, \"Open component sidepanel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"color\", \"primary\");\n    } }, directives: [i2.McButton, i2.McButtonCssStyler], styles: [\".sidepanel-container{display:flex;flex-direction:column}.layout-padding,.layout-padding>*{padding:8px}\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelComponentExample, [{\n        type: Component,\n        args: [{\n                selector: 'sidepanel-component-example',\n                templateUrl: 'sidepanel-component-example.html',\n                styleUrls: ['sidepanel-component-example.css'],\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: i1.McSidepanelService }]; }, null); })();\nclass SidepanelExampleCustomComponent {\n    constructor(data) {\n        this.data = data;\n        this.array = new Array(60); // tslint:disable-line\n        this.openComponentSidepanel = data.openComponentSidepanel;\n    }\n}\nSidepanelExampleCustomComponent.ɵfac = function SidepanelExampleCustomComponent_Factory(t) { return new (t || SidepanelExampleCustomComponent)(i0.ɵɵdirectiveInject(MC_SIDEPANEL_DATA)); };\nSidepanelExampleCustomComponent.ɵcmp = i0.ɵɵdefineComponent({ type: SidepanelExampleCustomComponent, selectors: [[\"example-sidepanel\"]], hostAttrs: [1, \"layout-column\", \"flex\", \"sidepanel-container\"], decls: 14, vars: 4, consts: [[3, \"closeable\"], [1, \"layout-padding\"], [1, \"mc-subheading\"], [4, \"ngFor\", \"ngForOf\"], [\"align\", \"right\"], [\"mc-button\", \"\", 3, \"color\", \"click\"], [\"mc-button\", \"\", \"mc-sidepanel-close\", \"\", 3, \"color\"]], template: function SidepanelExampleCustomComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-sidepanel-header\", 0);\n        i0.ɵɵtext(1, \" Sidepanel Component Content \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mc-sidepanel-body\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Sidepanel Component Body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, SidepanelExampleCustomComponent_div_5_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mc-sidepanel-footer\");\n        i0.ɵɵelementStart(7, \"mc-sidepanel-actions\", 4);\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function SidepanelExampleCustomComponent_Template_button_click_8_listener() { return ctx.openComponentSidepanel(); });\n        i0.ɵɵelementStart(9, \"span\");\n        i0.ɵɵtext(10, \"Open another sidepanel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵtext(13, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"closeable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.array);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", \"primary\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", \"second\");\n    } }, directives: [i1.McSidepanelHeader, i1.McSidepanelBody, i3.NgForOf, i1.McSidepanelFooter, i1.McSidepanelActions, i2.McButton, i2.McButtonCssStyler, i1.McSidepanelClose], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelExampleCustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'example-sidepanel',\n                template: `\n    <mc-sidepanel-header [closeable]=\"true\">\n        Sidepanel Component Content\n    </mc-sidepanel-header>\n    <mc-sidepanel-body class=\"layout-padding\">\n        <div class=\"mc-subheading\">Sidepanel Component Body</div>\n\n        <div *ngFor=\"let item of array; index as i\">\n            {{ i + 1 }}\n        </div>\n    </mc-sidepanel-body>\n    <mc-sidepanel-footer>\n        <mc-sidepanel-actions align=\"right\">\n            <button mc-button [color]=\"'primary'\" (click)=\"openComponentSidepanel()\">\n                <span>Open another sidepanel</span>\n            </button>\n\n            <button mc-button [color]=\"'second'\" mc-sidepanel-close>\n                <span>Close</span>\n            </button>\n        </mc-sidepanel-actions>\n    </mc-sidepanel-footer>`,\n                host: {\n                    class: 'layout-column flex sidepanel-container'\n                }\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MC_SIDEPANEL_DATA]\n            }] }]; }, null); })();\n\nfunction SidepanelOverviewExample_ng_template_3_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r3 + 1, \" \");\n} }\nfunction SidepanelOverviewExample_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mc-sidepanel-header\", 1);\n    i0.ɵɵtext(1, \" Sidepanel Template Content \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mc-sidepanel-body\", 2);\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtext(4, \"Sidepanel Template Body\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SidepanelOverviewExample_ng_template_3_div_5_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mc-sidepanel-footer\");\n    i0.ɵɵelementStart(7, \"mc-sidepanel-actions\", 5);\n    i0.ɵɵelementStart(8, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function SidepanelOverviewExample_ng_template_3_Template_button_click_8_listener() { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.openTemplateSidepanel(); });\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"Open another sidepanel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mc-sidepanel-actions\", 7);\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function SidepanelOverviewExample_ng_template_3_Template_button_click_12_listener() { i0.ɵɵrestoreView(_r5); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.openTemplateSidepanel(); });\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14, \"Open another sidepanel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 8);\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"closeable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.array);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"color\", \"primary\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"color\", \"primary\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"color\", \"second\");\n} }\n/**\n * @title Template Modal\n */\nclass SidepanelOverviewExample {\n    constructor(sidepanelService) {\n        this.sidepanelService = sidepanelService;\n        this.arrayLength = 40;\n        this.array = new Array(this.arrayLength); // tslint:disable-line\n    }\n    openTemplateSidepanel() {\n        this.sidepanelService.open(this.template, {\n            position: McSidepanelPosition.Bottom\n        });\n    }\n}\nSidepanelOverviewExample.ɵfac = function SidepanelOverviewExample_Factory(t) { return new (t || SidepanelOverviewExample)(i0.ɵɵdirectiveInject(i1.McSidepanelService)); };\nSidepanelOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: SidepanelOverviewExample, selectors: [[\"sidepanel-overview-example\"]], viewQuery: function SidepanelOverviewExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 1);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, decls: 4, vars: 1, consts: [[\"mc-button\", \"\", 1, \"template-button\", 3, \"color\", \"click\"], [3, \"closeable\"], [1, \"layout-padding\"], [1, \"mc-subheading\"], [4, \"ngFor\", \"ngForOf\"], [\"align\", \"left\"], [\"mc-button\", \"\", 3, \"color\", \"click\"], [\"align\", \"right\"], [\"mc-button\", \"\", \"mc-sidepanel-close\", \"\", 3, \"color\"]], template: function SidepanelOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function SidepanelOverviewExample_Template_button_click_0_listener() { return ctx.openTemplateSidepanel(); });\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2, \"Open template sidepanel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, SidepanelOverviewExample_ng_template_3_Template, 18, 5, \"ng-template\");\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"color\", \"primary\");\n    } }, directives: [i2.McButton, i2.McButtonCssStyler, i1.McSidepanelHeader, i1.McSidepanelBody, i3.NgForOf, i1.McSidepanelFooter, i1.McSidepanelActions, i1.McSidepanelClose], styles: [\".layout-padding,.layout-padding>*{padding:8px}\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'sidepanel-overview-example',\n                templateUrl: 'sidepanel-overview-example.html',\n                styleUrls: ['sidepanel-overview-example.css'],\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: i1.McSidepanelService }]; }, { template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: false }]\n        }] }); })();\n\nconst EXAMPLES = [\n    SidepanelOverviewExample,\n    SidepanelComponentExample,\n    SidepanelExampleCustomComponent\n];\nclass SidepanelExamplesModule {\n}\nSidepanelExamplesModule.ɵfac = function SidepanelExamplesModule_Factory(t) { return new (t || SidepanelExamplesModule)(); };\nSidepanelExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: SidepanelExamplesModule });\nSidepanelExamplesModule.ɵinj = i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            McButtonModule,\n            McIconModule,\n            McSidepanelModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SidepanelExamplesModule, { declarations: [SidepanelOverviewExample,\n        SidepanelComponentExample,\n        SidepanelExampleCustomComponent], imports: [CommonModule,\n        McButtonModule,\n        McIconModule,\n        McSidepanelModule], exports: [SidepanelOverviewExample,\n        SidepanelComponentExample,\n        SidepanelExampleCustomComponent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    McButtonModule,\n                    McIconModule,\n                    McSidepanelModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SidepanelComponentExample, SidepanelExampleCustomComponent, SidepanelExamplesModule, SidepanelOverviewExample };\n//# sourceMappingURL=ptsecurity-mosaic-examples-mosaic-sidepanel.js.map\n"],"sourceRoot":"webpack:///"}