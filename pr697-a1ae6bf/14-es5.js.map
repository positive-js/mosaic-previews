{"version":3,"sources":["webpack:///packages/mosaic/progress-spinner/progress-spinner.component.ts","webpack:///packages/mosaic/progress-spinner/progress-spinner.module.ts","webpack:///packages/mosaic/progress-spinner/ptsecurity-mosaic-progress-spinner.ts","webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-progress-spinner.js"],"names":["idIterator","MIN_PERCENT","MAX_PERCENT","McProgressSpinnerBase","_elementRef","McProgressSpinnerMixinBase","Primary","MAX_DASH_ARRAY","McProgressSpinner","elementRef","id","value","mode","Math","max","min","percentage","selector","template","changeDetection","OnPush","encapsulation","None","inputs","host","McProgressSpinnerModule","imports","exports","declarations","ProgressSpinnerIndeterminateExample","ɵfac","ProgressSpinnerIndeterminateExample_Factory","t","ɵcmp","type","selectors","decls","vars","consts","ProgressSpinnerIndeterminateExample_Template","rf","ctx","directives","styles","ngDevMode","args","templateUrl","styleUrls","INTERVAL","STEP","ProgressSpinnerOverviewExample","percent","setInterval","clearInterval","intervalId","ProgressSpinnerOverviewExample_Factory","ProgressSpinnerOverviewExample_Template","EXAMPLES","ProgressSpinnerExamplesModule","ProgressSpinnerExamplesModule_Factory","ɵmod","ɵinj","ngJitMode"],"mappings":"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","file":"14-es5.js","sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McProgressSpinnerMixinBase:\n    CanColorCtor & typeof McProgressSpinnerBase = mixinColor(McProgressSpinnerBase, ThemePalette.Primary);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport * as i1 from '@ptsecurity/mosaic/progress-spinner';\nimport { McProgressSpinnerModule } from '@ptsecurity/mosaic/progress-spinner';\n\n/**\n * @title Indeterminate progress spinner\n */\nclass ProgressSpinnerIndeterminateExample {\n}\nProgressSpinnerIndeterminateExample.ɵfac = function ProgressSpinnerIndeterminateExample_Factory(t) { return new (t || ProgressSpinnerIndeterminateExample)(); };\nProgressSpinnerIndeterminateExample.ɵcmp = i0.ɵɵdefineComponent({ type: ProgressSpinnerIndeterminateExample, selectors: [[\"progress-spinner-indeterminate-example\"]], decls: 4, vars: 3, consts: [[1, \"example-progress-spinner-group\"], [\"mode\", \"indeterminate\", 1, \"example-progress-spinner-element\", 3, \"color\"]], template: function ProgressSpinnerIndeterminateExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"mc-progress-spinner\", 1);\n        i0.ɵɵelement(2, \"mc-progress-spinner\", 1);\n        i0.ɵɵelement(3, \"mc-progress-spinner\", 1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"second\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"error\");\n    } }, directives: [i1.McProgressSpinner], styles: [\".example-progress-spinner-group[_ngcontent-%COMP%]{display:flex}.example-progress-spinner-element[_ngcontent-%COMP%]{margin-right:8px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerIndeterminateExample, [{\n        type: Component,\n        args: [{\n                selector: 'progress-spinner-indeterminate-example',\n                templateUrl: 'progress-spinner-indeterminate-example.html',\n                styleUrls: ['progress-spinner-indeterminate-example.css']\n            }]\n    }], null, null); })();\n\nconst INTERVAL = 300;\nconst STEP = 4;\nconst MAX_PERCENT = 100;\n/**\n * @title Basic progress spinner\n */\nclass ProgressSpinnerOverviewExample {\n    constructor() {\n        this.percent = 0;\n        setInterval(() => this.percent = (this.percent + STEP) % (MAX_PERCENT + STEP), INTERVAL);\n    }\n    ngOnDestroy() {\n        clearInterval(this.intervalId);\n    }\n}\nProgressSpinnerOverviewExample.ɵfac = function ProgressSpinnerOverviewExample_Factory(t) { return new (t || ProgressSpinnerOverviewExample)(); };\nProgressSpinnerOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: ProgressSpinnerOverviewExample, selectors: [[\"progress-spinner-overview-example\"]], decls: 6, vars: 7, consts: [[1, \"example-progress-spinner-group\"], [1, \"example-progress-spinner-element\"], [1, \"example-progress-spinner-element\", 3, \"value\", \"color\"]], template: function ProgressSpinnerOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"mc-progress-spinner\", 2);\n        i0.ɵɵelement(4, \"mc-progress-spinner\", 2);\n        i0.ɵɵelement(5, \"mc-progress-spinner\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.percent, \"%\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"second\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"error\");\n    } }, directives: [i1.McProgressSpinner], styles: [\".example-progress-spinner-group[_ngcontent-%COMP%]{display:flex}.example-progress-spinner-element[_ngcontent-%COMP%]{margin-right:8px}.example-progress-spinner-element[_ngcontent-%COMP%]:first-child{width:40px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'progress-spinner-overview-example',\n                templateUrl: 'progress-spinner-overview-example.html',\n                styleUrls: ['progress-spinner-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\nconst EXAMPLES = [\n    ProgressSpinnerIndeterminateExample,\n    ProgressSpinnerOverviewExample\n];\nclass ProgressSpinnerExamplesModule {\n}\nProgressSpinnerExamplesModule.ɵfac = function ProgressSpinnerExamplesModule_Factory(t) { return new (t || ProgressSpinnerExamplesModule)(); };\nProgressSpinnerExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: ProgressSpinnerExamplesModule });\nProgressSpinnerExamplesModule.ɵinj = i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McFormFieldModule,\n            McProgressSpinnerModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ProgressSpinnerExamplesModule, { declarations: [ProgressSpinnerIndeterminateExample,\n        ProgressSpinnerOverviewExample], imports: [CommonModule,\n        FormsModule,\n        McFormFieldModule,\n        McProgressSpinnerModule], exports: [ProgressSpinnerIndeterminateExample,\n        ProgressSpinnerOverviewExample] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McFormFieldModule,\n                    McProgressSpinnerModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressSpinnerExamplesModule, ProgressSpinnerIndeterminateExample, ProgressSpinnerOverviewExample };\n//# sourceMappingURL=ptsecurity-mosaic-examples-mosaic-progress-spinner.js.map\n"]}