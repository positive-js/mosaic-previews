{"version":3,"mappings":"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","names":["nextUniqueId","McToggleBase","_elementRef","McToggleMixinBase","_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_0__","McToggleChange","McToggleComponent","_focusMonitor","_changeDetectorRef","_angular_core__WEBPACK_IMPORTED_MODULE_1__","id","uniqueId","monitor","nativeElement","_disabled","value","markForCheck","_checked","stopMonitoring","focusVia","inputElement","checked","event","stopPropagation","updateModelValue","emitChangeEvent","fn","onChangeCallback","onTouchedCallback","isDisabled","disabled","source","change","emit","provide","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","useExisting","multi","left","selector","exportAs","templateUrl","styleUrls","changeDetection","encapsulation","inputs","host","animations","providers","labelPosition","ariaLabel","ariaLabelledby","name","McToggleModule","Éµinj","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__","imports","exports","declarations","ToggleOverviewExample","_angular_core__WEBPACK_IMPORTED_MODULE_0__","type","selectors","decls","vars","consts","template","ctx","directives","_ptsecurity_mosaic_toggle__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","styles","args","ToggleExamplesModule"],"sources":["webpack:///packages/mosaic/toggle/toggle.component.ts","webpack:///packages/mosaic/toggle/toggle.component.html","webpack:///packages/mosaic/toggle/toggle.module.ts","webpack:///packages/mosaic/toggle/ptsecurity-mosaic-toggle.ts","webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-toggle.js"],"sourcesContent":["import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    // tslint:disable-next-line: naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line: naming-convention\nexport const McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true\n    }]\n})\nexport class McToggleComponent extends McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input', { static: false }) inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    @Input() id: string;\n\n    get inputId(): string {\n        return `${this.id || this.uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    @Output() readonly change: EventEmitter<McToggleChange> = new EventEmitter<McToggleChange>();\n\n    private uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    constructor(\n        // tslint:disable-next-line:naming-convention\n        public _elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(_elementRef);\n\n        this.id =  this.uniqueId;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this.inputElement.nativeElement, 'keyboard');\n    }\n\n    getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    onChangeEvent(event: Event) {\n        event.stopPropagation();\n\n        this.updateModelValue();\n        this.emitChangeEvent();\n    }\n\n    onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private onChangeCallback = (_: any) => {};\n\n    private updateModelValue() {\n        this._checked = !this.checked;\n        this.onTouchedCallback();\n    }\n\n    private emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this.onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","<label [attr.for]=\"inputId\" class=\"mc-toggle-layout\">\n    <div class=\"mc-toggle__container\" [class.left]=\"labelPosition === 'left'\">\n        <input #input\n               type=\"checkbox\"\n               role=\"switch\"\n               class=\"mc-toggle-input cdk-visually-hidden\"\n               [id]=\"inputId\"\n               [checked]=\"checked\"\n               [attr.value]=\"value\"\n               [disabled]=\"disabled\"\n               [attr.name]=\"name\"\n               [tabIndex]=\"tabIndex\"\n               [attr.aria-label]=\"ariaLabel || null\"\n               [attr.aria-labelledby]=\"ariaLabelledby\"\n               [attr.aria-checked]=\"getAriaChecked()\"\n               (click)=\"onInputClick($event)\"\n               (change)=\"onChangeEvent($event)\"/>\n        <div class=\"mc-toggle-bar-container\">\n            <div class=\"mc-toggle__overlay\"></div>\n            <div class=\"mc-toggle-bar\">\n                <div class=\"mc-toggle__circle\" [@switch]=\"checked\"></div>\n            </div>\n        </div>\n        <div class=\"mc-toggle__content\"\n             [class.left]=\"labelPosition === 'left'\"\n             [class.right]=\"labelPosition === 'right'\">\n            <span class=\"mc-toggle-label\" (cdkObserveContent)=\"onLabelTextChange()\">\n                <ng-content></ng-content>\n            </span>\n        </div>\n    </div>\n</label>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from '@ptsecurity/mosaic/toggle';\nimport { McToggleModule } from '@ptsecurity/mosaic/toggle';\n\n/**\n * @title Basic toggle\n */\nclass ToggleOverviewExample {\n    constructor() {\n        this.value = true;\n    }\n}\nToggleOverviewExample.Éµfac = function ToggleOverviewExample_Factory(t) { return new (t || ToggleOverviewExample)(); };\nToggleOverviewExample.Éµcmp = /*@__PURE__*/ i0.ÉµÉµdefineComponent({ type: ToggleOverviewExample, selectors: [[\"toggle-overview-example\"]], decls: 29, vars: 12, consts: [[1, \"mc-toggle_small\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mc-toggle_small\", 3, \"color\", \"ngModel\", \"ngModelChange\"], [\"labelPosition\", \"left\", 1, \"mc-toggle_small\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"color\", \"ngModel\", \"ngModelChange\"], [\"labelPosition\", \"left\", 3, \"ngModel\", \"ngModelChange\"]], template: function ToggleOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"h3\");\n        i0.ÉµÉµtext(1, \"Small Toggles\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(2, \"mc-toggle\", 0);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_2_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(3, \"mc-toggle\", 0);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_3_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"mc-toggle\", 1);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_4_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(5, \"br\");\n        i0.ÉµÉµelement(6, \"br\");\n        i0.ÉµÉµelementStart(7, \"mc-toggle\", 0);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_7_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµtext(8, \" right label\\n\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(9, \"br\");\n        i0.ÉµÉµelement(10, \"br\");\n        i0.ÉµÉµelementStart(11, \"mc-toggle\", 2);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_11_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµtext(12, \" left label\\n\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(13, \"br\");\n        i0.ÉµÉµelement(14, \"br\");\n        i0.ÉµÉµelement(15, \"br\");\n        i0.ÉµÉµelementStart(16, \"h3\");\n        i0.ÉµÉµtext(17, \"Big Toggles\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(18, \"mc-toggle\", 3);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_18_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(19, \"mc-toggle\", 3);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_19_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(20, \"mc-toggle\", 4);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_20_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(21, \"br\");\n        i0.ÉµÉµelement(22, \"br\");\n        i0.ÉµÉµelementStart(23, \"mc-toggle\", 3);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_23_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµtext(24, \" right label\\n\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(25, \"br\");\n        i0.ÉµÉµelement(26, \"br\");\n        i0.ÉµÉµelementStart(27, \"mc-toggle\", 5);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ToggleOverviewExample_Template_mc_toggle_ngModelChange_27_listener($event) { return ctx.value = $event; });\n        i0.ÉµÉµtext(28, \" left label\\n\");\n        i0.ÉµÉµelementEnd();\n    } if (rf & 2) {\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"color\", \"error\")(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(7);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"color\", \"error\")(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.value);\n    } }, directives: [i1.McToggleComponent, i2.NgControlStatus, i2.NgModel], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToggleOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'toggle-overview-example',\n                templateUrl: 'toggle-overview-example.html',\n                styleUrls: ['toggle-overview-example.css']\n            }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    ToggleOverviewExample\n];\nclass ToggleExamplesModule {\n}\nToggleExamplesModule.Éµfac = function ToggleExamplesModule_Factory(t) { return new (t || ToggleExamplesModule)(); };\nToggleExamplesModule.Éµmod = /*@__PURE__*/ i0.ÉµÉµdefineNgModule({ type: ToggleExamplesModule });\nToggleExamplesModule.Éµinj = /*@__PURE__*/ i0.ÉµÉµdefineInjector({ imports: [[\n            FormsModule,\n            McToggleModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToggleExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    FormsModule,\n                    McToggleModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ÉµÉµsetNgModuleScope(ToggleExamplesModule, { declarations: [ToggleOverviewExample], imports: [FormsModule,\n        McToggleModule], exports: [ToggleOverviewExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ToggleExamplesModule, ToggleOverviewExample };\n"]}