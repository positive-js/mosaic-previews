{"version":3,"sources":["./node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-tree-select.js","./dist/packages/mosaic/tree-select/tree-select.component.ts","./dist/packages/mosaic/tree-select/tree-select.module.ts","./dist/packages/mosaic/tree-select/ptsecurity-mosaic-tree-select.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACgB;AACf;AAC6B;AACI;AAClB;AACc;AACpB;AACS;AACE;AACX;AACgD;AACzC;AACe;;AAEpE;AACA,+EAA+E;AAC/E,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,CAAC;AACD;AACA,mBAAmB,2DAAgB;AACnC,IAAI,uDAAY;AAChB,IAAI,gEAAqB;AACzB,CAAC;AACD,+EAA+E;AAC/E,IAAI,4DAAiB;AACrB,IAAI,uDAAY;AAChB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,CAAC;AACD;AACA,mBAAmB,2DAAgB;AACnC,IAAI,uDAAY;AAChB,IAAI,yDAAc;AAClB,IAAI,uDAAY;AAChB,IAAI,gEAAqB;AACzB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA,iCAAiC,uEAAe;AAChD,+BAA+B,oEAAe;AAC9C,8BAA8B,4EAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gGAAg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","file":"19-es2015.js","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlatTreeControl, CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport * as i1 from '@ptsecurity/mosaic/form-field';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport * as i5 from '@ptsecurity/mosaic/icon';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McInputModule } from '@ptsecurity/mosaic/input';\nimport * as i4 from '@ptsecurity/mosaic/tree';\nimport { McTreeFlattener, McTreeFlatDataSource, McTreeModule } from '@ptsecurity/mosaic/tree';\nimport * as i2 from '@ptsecurity/mosaic/tree-select';\nimport { McTreeSelectModule } from '@ptsecurity/mosaic/tree-select';\n\n/* tslint:disable:no-reserved-keywords */\nfunction TreeSelectMultipleOverviewExample_mc_tree_option_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.treeControl.getViewValue(node_r3), \" \");\n} }\nfunction TreeSelectMultipleOverviewExample_mc_tree_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"i\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"transform\", ctx_r1.treeControl.isExpanded(node_r4) ? \"\" : \"rotate(-90deg)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.treeControl.getViewValue(node_r4), \" \");\n} }\nclass FileNode$1 {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode$1 {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree$1(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode$1();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree$1(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT$1 = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic Select\n */\nclass TreeSelectMultipleOverviewExample {\n    constructor() {\n        this.selected = '';\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode$1();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            return `${node.name} view`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree$1(DATA_OBJECT$1, 0);\n    }\n    hasChild(_, nodeData) {\n        return nodeData.expandable;\n    }\n}\nTreeSelectMultipleOverviewExample.ɵfac = function TreeSelectMultipleOverviewExample_Factory(t) { return new (t || TreeSelectMultipleOverviewExample)(); };\nTreeSelectMultipleOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeSelectMultipleOverviewExample, selectors: [[\"tree-select-multiple-overview-example\"]], decls: 7, vars: 5, consts: [[3, \"multiple\", \"ngModel\", \"ngModelChange\"], [3, \"dataSource\", \"treeControl\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcSelectCleaner\", \"\"], [\"mcTreeNodePadding\", \"\"], [\"mc-icon\", \"mc-angle-down-S_16\", \"mcTreeNodeToggle\", \"\"]], template: function TreeSelectMultipleOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-form-field\");\n        i0.ɵɵelementStart(1, \"mc-tree-select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeSelectMultipleOverviewExample_Template_mc_tree_select_ngModelChange_1_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(2, \"mc-tree-selection\", 1);\n        i0.ɵɵtemplate(3, TreeSelectMultipleOverviewExample_mc_tree_option_3_Template, 2, 1, \"mc-tree-option\", 2);\n        i0.ɵɵtemplate(4, TreeSelectMultipleOverviewExample_mc_tree_option_4_Template, 3, 3, \"mc-tree-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"mc-cleaner\", null, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"multiple\", true)(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1.McFormField, i2.McTreeSelect, i3.NgControlStatus, i3.NgModel, i4.McTreeSelection, i4.McTreeNodeDef, i1.McCleaner, i4.McTreeOption, i4.McTreeNodePadding, i5.McIcon, i5.McIconCSSStyler, i4.McTreeNodeToggleDirective], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeSelectMultipleOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-select-multiple-overview-example',\n                templateUrl: 'tree-select-multiple-overview-example.html',\n                styleUrls: ['tree-select-multiple-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-reserved-keywords */\nfunction TreeSelectOverviewExample_mc_tree_option_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.treeControl.getViewValue(node_r3), \" \");\n} }\nfunction TreeSelectOverviewExample_mc_tree_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"i\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"transform\", ctx_r1.treeControl.isExpanded(node_r4) ? \"\" : \"rotate(-90deg)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.treeControl.getViewValue(node_r4), \" \");\n} }\nclass FileNode {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic Select\n */\nclass TreeSelectOverviewExample {\n    constructor() {\n        this.selected = '';\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            return `${node.name} view`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree(DATA_OBJECT, 0);\n    }\n    hasChild(_, nodeData) {\n        return nodeData.expandable;\n    }\n}\nTreeSelectOverviewExample.ɵfac = function TreeSelectOverviewExample_Factory(t) { return new (t || TreeSelectOverviewExample)(); };\nTreeSelectOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeSelectOverviewExample, selectors: [[\"tree-select-overview-example\"]], decls: 7, vars: 4, consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"dataSource\", \"treeControl\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcSelectCleaner\", \"\"], [\"mcTreeNodePadding\", \"\"], [\"mc-icon\", \"mc-angle-down-S_16\", \"mcTreeNodeToggle\", \"\"]], template: function TreeSelectOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-form-field\");\n        i0.ɵɵelementStart(1, \"mc-tree-select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeSelectOverviewExample_Template_mc_tree_select_ngModelChange_1_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(2, \"mc-tree-selection\", 1);\n        i0.ɵɵtemplate(3, TreeSelectOverviewExample_mc_tree_option_3_Template, 2, 1, \"mc-tree-option\", 2);\n        i0.ɵɵtemplate(4, TreeSelectOverviewExample_mc_tree_option_4_Template, 3, 3, \"mc-tree-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"mc-cleaner\", null, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1.McFormField, i2.McTreeSelect, i3.NgControlStatus, i3.NgModel, i4.McTreeSelection, i4.McTreeNodeDef, i1.McCleaner, i4.McTreeOption, i4.McTreeNodePadding, i5.McIcon, i5.McIconCSSStyler, i4.McTreeNodeToggleDirective], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeSelectOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-select-overview-example',\n                templateUrl: 'tree-select-overview-example.html',\n                styleUrls: ['tree-select-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\nconst EXAMPLES = [\n    TreeSelectOverviewExample,\n    TreeSelectMultipleOverviewExample\n];\nclass TreeSelectExamplesModule {\n}\nTreeSelectExamplesModule.ɵfac = function TreeSelectExamplesModule_Factory(t) { return new (t || TreeSelectExamplesModule)(); };\nTreeSelectExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: TreeSelectExamplesModule });\nTreeSelectExamplesModule.ɵinj = i0.ɵɵdefineInjector({ imports: [[\n            CdkTreeModule,\n            FormsModule,\n            ReactiveFormsModule,\n            McFormFieldModule,\n            McTreeModule,\n            McTreeSelectModule,\n            McInputModule,\n            McIconModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TreeSelectExamplesModule, { declarations: [TreeSelectOverviewExample,\n        TreeSelectMultipleOverviewExample], imports: [CdkTreeModule,\n        FormsModule,\n        ReactiveFormsModule,\n        McFormFieldModule,\n        McTreeModule,\n        McTreeSelectModule,\n        McInputModule,\n        McIconModule], exports: [TreeSelectOverviewExample,\n        TreeSelectMultipleOverviewExample] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeSelectExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTreeModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    McFormFieldModule,\n                    McTreeModule,\n                    McTreeSelectModule,\n                    McInputModule,\n                    McIconModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TreeSelectExamplesModule, TreeSelectMultipleOverviewExample, TreeSelectOverviewExample };\n//# sourceMappingURL=ptsecurity-mosaic-examples-mosaic-tree-select.js.map\n","/* tslint:disable:no-empty */\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@angular/cdk/overlay';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControlName,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    NgModel,\n    Validator\n} from '@angular/forms';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A,\n    PAGE_UP,\n    PAGE_DOWN,\n    hasModifierKey\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n    MC_SELECT_SCROLL_STRATEGY,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MultipleMode,\n\n    MC_VALIDATION,\n    setMosaicValidation,\n    McValidationOptions\n} from '@ptsecurity/mosaic/core';\nimport { McCleaner, McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tags';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject, Subscription } from 'rxjs';\nimport {\n    filter,\n    map,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged,\n    startWith\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeSelect, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.scss'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-invalid]': 'errorState',\n\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(click)': 'toggle()',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<McTreeOption>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'select';\n\n    hiddenItems: number = 0;\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<any>;\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    options: QueryList<McTreeOption>;\n\n    @ViewChild('trigger', { static: false }) trigger: ElementRef;\n\n    @ViewChild('panel', { static: false }) panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay, { static: false }) overlayDir: CdkConnectedOverlay;\n\n    @ViewChild('hiddenItemsCounter', { static: false }) hiddenItemsCounter: ElementRef;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ContentChild('mcSelectCleaner', { static: true }) cleaner: McCleaner;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger, { static: false }) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection, { static: false }) tree: McTreeSelection<McTreeOption>;\n\n    @Input() hiddenItemsText: string = '...ещё';\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    @Input() backdropClass: string = 'cdk-overlay-transparent-backdrop';\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McTreeOption, b: McTreeOption, options: McTreeOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return this.options.changes.pipe(\n                startWith(this.options),\n                switchMap(() => merge(...this.options.map((option) => option.onSelectionChange)))\n            );\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    get value(): any {\n        return this.multiple ? this.tree.getSelectedValues() : this.tree.getSelectedValues()[0];\n    }\n\n    private _value: any = null;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    @Input()\n    get hasBackdrop(): boolean {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    private _hasBackdrop: boolean = false;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.cleaner && this.selectionModel.hasValue();\n    }\n\n    private closeSubscription = Subscription.EMPTY;\n\n    private _panelOpen = false;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private tempValues: string | string[] | null;\n\n    constructor(\n        elementRef: ElementRef,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly viewportRuler: ViewportRuler,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory,\n        @Optional() @Inject(NG_VALIDATORS) public rawValidators: Validator[],\n        @Optional() @Inject(MC_VALIDATION) private mcValidation: McValidationOptions,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Optional() @Self() ngControl: NgControl,\n        @Optional() @Self() public ngModel: NgModel,\n        @Optional() @Self() public formControlName: FormControlName\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        if (this.mcValidation.useValidation) {\n            setMosaicValidation(this);\n        }\n\n        this.tree.resetFocusedItemOnBlur = false;\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<any>(this.multiple);\n        this.tree.ngAfterContentInit();\n\n        this.initKeyManager();\n\n        this.options = this.tree.renderedOptions;\n        this.tree.autoSelect = this.autoSelect;\n\n        if (this.tree.multipleMode === null) {\n            this.tree.multipleMode = this.multiple ? MultipleMode.CHECKBOX : null;\n        }\n\n        if (this.multiple) {\n            this.tree.noUnselectLast = false;\n        }\n\n        if (this.tempValues) {\n            this.setSelectionByValue(this.tempValues);\n            this.tempValues = null;\n        }\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                if (!this.multiple && this.panelOpen && event.isUserInput) {\n                    this.close();\n                }\n            });\n\n        this.tree.selectionChange\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                this.onChange(this.selectedValues);\n\n                this.selectionChange.emit(new McTreeSelectChange(this, event.option));\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                if (event.added.length) {\n                    this.tree.keyManager.setFocusOrigin('program');\n                    this.tree.keyManager.setActiveItem(\n                        this.options.find((option) => option.data === event.added[0]) as any\n                    );\n                }\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        setTimeout(() => this.calculateHiddenItems(), 0);\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n        this.closeSubscription.unsubscribe();\n    }\n\n    @Input()\n    hiddenItemsTextFormatter(hiddenItemsText: string, hiddenItems: number): string {\n        return `${hiddenItemsText} ${hiddenItems}`;\n    }\n\n    clearValue($event): void {\n        $event.stopPropagation();\n\n        this.selectionModel.clear();\n        this.tree.keyManager.setActiveItem(-1);\n\n        this.setSelectionByValue([]);\n\n        this.onChange(this.selectedValues);\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n\n        setTimeout(() => this.highlightCorrectOption());\n\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (!this._panelOpen) { return; }\n\n        this._panelOpen = false;\n\n        this.changeDetectorRef.markForCheck();\n        this.onTouched();\n\n        setTimeout(() => this.focus(), 0);\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.tree) {\n            this.setSelectionByValue(value);\n        } else {\n            this.tempValues = value;\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): any {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get selectedValues(): any {\n        const selectedValues = this.selectionModel.selected.map((value) => this.tree.treeControl.getValue(value));\n\n        return this.multiple ? selectedValues : selectedValues[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return this.tree.treeControl.getViewValue(this.selected);\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        return this.selectedValues\n            .map((value) => this.tree.renderedOptions.find((option) => option.value === value))\n            .filter((option) => option);\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n\n                this.tree.updateScrollSize();\n            });\n\n        this.closeSubscription = this.closingActions()\n            .subscribe(() => this.close());\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: any, $event) {\n        $event.stopPropagation();\n\n        this.selectionModel\n            .deselect(this.selected.find((value) => this.tree.treeControl.getValue(value) === selectedOption.value));\n\n        this.onChange(this.selectedValues);\n    }\n\n    calculateHiddenItems() {\n        if (this.customTrigger || this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += this.getItemWidth(tag.nativeElement);\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private closingActions() {\n        const backdrop = this.overlayDir.overlayRef!.backdropClick();\n        const outsidePointerEvents = this.overlayDir.overlayRef!.outsidePointerEvents();\n        const detachments = this.overlayDir.overlayRef!.detachments();\n\n        return merge(backdrop, outsidePointerEvents, detachments);\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += this.getItemWidth(item);\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private getItemWidth(element: HTMLElement): number {\n        const computedStyle = window.getComputedStyle(element);\n\n        const width: number = parseInt(computedStyle.width as string);\n        const marginLeft: number = parseInt(computedStyle.marginLeft as string);\n        const marginRight: number = parseInt(computedStyle.marginRight as string);\n\n        return width + marginLeft + marginRight;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME) {\n            event.preventDefault();\n\n            this.tree.keyManager.setFirstItemActive();\n        } else if (keyCode === END) {\n            event.preventDefault();\n\n            this.tree.keyManager.setLastItemActive();\n        } else if (keyCode === PAGE_UP) {\n            event.preventDefault();\n\n            this.tree.keyManager.setPreviousPageItemActive();\n        } else if (keyCode === PAGE_DOWN) {\n            event.preventDefault();\n\n            this.tree.keyManager.setNextPageItemActive();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            if (!this.autoSelect) {\n                this.selectionModel.toggle(this.tree.keyManager.activeItem.data);\n            } else {\n                this.close();\n            }\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.setFocusOrigin('keyboard');\n            this.tree.keyManager.onKeydown(event);\n\n            if (\n                this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex\n            ) {\n                this.tree.keyManager.activeItem.selectViaInteraction(event);\n            }\n\n            if (this.autoSelect && this.tree.keyManager.activeItem) {\n                this.tree.setSelectedOptionsByKey(\n                    this.tree.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n                );\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.tree.setOptionsFromValues(value);\n\n            this.sortValues();\n        } else {\n            this.tree.setOptionsFromValues([value]);\n        }\n\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.empty || !this.tree.keyManager) { return; }\n\n        const firstSelectedValue = this.multiple ? this.selectedValues[0] : this.selectedValues;\n\n        const selectedOption = this.options.find((option) => option.value === firstSelectedValue);\n\n        if (selectedOption) {\n            this.tree.keyManager.setActiveItem(selectedOption);\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.tree.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagsModule } from '@ptsecurity/mosaic/tags';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagsModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"sourceRoot":"webpack:///"}