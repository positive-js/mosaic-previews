{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,UAAIA,YAAY,GAAG,CAAnB;;UAIaC;AAETC,6BAAmBC,WAAnBD,EAA0C;AAAA;;AAAvB;AAA2B,SAGlD;;;UACaE,kBAAiB,GAIJC,wEAAcC,qEAAWC,wEAAcN,aAAdM,CAAXD,EAAwCE,yEAAxCF,CAAdD;;UAEbI;;;;UA+BAC;;;;;AAoDTR;AAEWC,mBAFXD,EAGYS,aAHZT,EAIYU,kBAJZV,EAIiD;AAAA;;AAAA;;AAE7C,oCAAMC,WAAN;AAJO;AACC;AACA;AAnDH,gCAAyC,OAAzC;AAEY,4BAAoB,EAApB;AACK,iCAAgC,IAAhC;AAQjB,uBAAsB,IAAtB;AAgBD,4BAAqB,KAArB;AAcA,2BAAoB,KAApB;AAEW,yBAAuC,IAAIU,uDAAJ,EAAvC;AAEX,+CAAgC,EAAEb,YAAlC,EAMyC;;AAqDzC,oCAAoB,aAApB,EArDyC;;;AAwDzC,mCAAoBc,WAAD,EAAO,CAA1B;;AApDJ,gBAAKC,EAAL,GAAW,MAAKC,QAAhB;;AAEA,gBAAKL,aAAL,CAAmBM,OAAnB,CAA2B,MAAKd,WAAL,CAAiBe,aAA5C,EAA2D,IAA3D;;AAN6C;AAOhD;;;;eAnDU;AACP,6BAAU,KAAKH,EAAL,IAAW,KAAKC,QAA1B;AACH;;;eAOW;AACR,mBAAO,KAAKG,SAAZ;AACH;eAEW,aAACC,KAAD,EAAW;AACnB,gBAAIA,KAAK,KAAK,KAAKD,SAAnB,EAA8B;AAC1B,mBAAKA,SAAL,GAAiBC,KAAjB;;AACA,mBAAKR,kBAAL,CAAwBS,YAAxB;AACH;AACJ;;;eAIU;AACP,mBAAO,KAAKC,QAAZ;AACH;eAGU,aAACF,KAAD,EAAe;AACtB,gBAAIA,KAAK,KAAK,KAAKE,QAAnB,EAA6B;AACzB,mBAAKA,QAAL,GAAgBF,KAAhB;;AACA,mBAAKR,kBAAL,CAAwBS,YAAxB;AACH;AACJ;;;iBAqBDE,uBAAW;AACP,iBAAKZ,aAAL,CAAmBa,cAAnB,CAAkC,KAAKrB,WAAL,CAAiBe,aAAnD;AACH;;;iBAEDO,iBAAK;AACD,iBAAKd,aAAL,CAAmBe,QAAnB,CAA4B,KAAKC,YAAL,CAAkBT,aAA9C,EAA6D,UAA7D;AACH;;;iBAEDU,0BAAc;AACV,mBAAO,KAAKC,OAAZ;AACH;;;iBAEDC,uBAAcC,KAAdD,EAA0B;AACtBC,iBAAK,CAACC,eAAND;AAEA,iBAAKE,gBAAL;AACA,iBAAKC,eAAL;AACH;;;iBAEDC,6BAAiB;AACb,iBAAKvB,kBAAL,CAAwBS,YAAxB;AACH;;;iBAEDe,sBAAaL,KAAbK,EAA8B;AAC1BL,iBAAK,CAACC,eAAND;AACH;;;iBAEDM,oBAAWjB,KAAXiB,EAAqB;AACjB,iBAAKR,OAAL,GAAe,CAAC,CAACT,KAAjB;AACH;;;iBAEDkB,0BAAiBC,EAAjBD,EAAwB;AACpB,iBAAKE,gBAAL,GAAwBD,EAAxB;AACH;;;iBAEDE,2BAAkBF,EAAlBE,EAAyB;AACrB,iBAAKC,iBAAL,GAAyBH,EAAzB;AACH;;;iBAEDI,0BAAiBC,UAAjBD,EAAoC;AAChC,iBAAKE,QAAL,GAAgBD,UAAhB;AACH;;;iBAQOX,4BAAgB;AACpB,iBAAKX,QAAL,GAAgB,CAAC,KAAKO,OAAtB;AACA,iBAAKa,iBAAL;AACH;;;iBAEOR,2BAAe;AACnB,gBAAMH,KAAK,GAAG,IAAItB,eAAJ,EAAd;AACAsB,iBAAK,CAACe,MAANf,GAAe,IAAfA;AACAA,iBAAK,CAACF,OAANE,GAAgB,KAAKF,OAArBE;AAEA,iBAAKS,gBAAL,CAAsB,KAAKX,OAA3B;AACA,iBAAKkB,MAAL,CAAYC,IAAZ,CAAiBjB,KAAjB;AACH;;;;QA9HkC3B;;;;;yBAA1BM,oFAAiBuC,qDAAjBvC,GAAiBuC;;;;;;cAAjBvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oFAJE,CAAC;AACRwC,iBAAO,EAAEC,6DADD;AACoBC,qBAAW,EAAEC,2DAAW;AAAA,mBAAM3C,kBAAN;AAAA,WAAX2C,CADjC;AACsEC,eAAK,EAAE;AAD7E,SAAD;;;;;;;;;yECrEf;;yEAAA;;yEAAA;;qEAAA;AAAA;AAAA;AAAA;AAAA;;;;yEAAA;;oEAAA;;yEAAA;;oEAAA;;;;;;yEAAA;;yEAAA;;qEAAA;AAAA;AAAA;;uEAAA;;;;;;;;;;;;sEAAA;;oEAAA;;sEAAA;;oEAAA;;qEAAA;;sEAAA;;oEAAA;;qEAAA;;oEAAA;;sEAAA;;;;;;qBD8DgB,CACRC,8DAAQ,QAARA,EAAkB,CACdC,4DAAM,MAANA,EAAeC,4DAAM;AAAEC,gBAAI,EAAE;AAAR,WAAND,CAAfD,CADc,EAEdA,4DAAM,OAANA,EAAeC,4DAAM;AAAEC,gBAAI,EAAE;AAAR,WAAND,CAAfD,CAFc,EAGdG,iEAAW,gBAAXA,EAA6BC,8DAAQ,OAARA,CAA7BD,CAHc,CAAlBJ,CADQ;;;;;;2HAWH7C,oBAAiB;gBA1B7BmD,oDA0B6B;iBA1BnB;AACPC,oBAAQ,EAAE,WADH;AAEPC,oBAAQ,EAAE,UAFH;AAGPC,uBAAW,EAAE,yBAHN;AAIPC,qBAAS,EAAE,CAAC,eAAD,CAJJ;AAKPC,2BAAe,EAAEC,yEALV;AAMPC,yBAAa,EAAEC,iEANR;AAOPC,kBAAM,EAAE,CAAC,OAAD,EAAU,UAAV,CAPD;AAQPC,gBAAI,EAAE;AACFC,uBAAO,WADL;AAEF,sBAAQ,IAFN;AAGF,2BAAa,IAHX;AAIF,qCAAuB,UAJrB;AAKF,mCAAqB;AALnB,aARC;AAePC,sBAAU,EAAE,CACRlB,8DAAQ,QAARA,EAAkB,CACdC,4DAAM,MAANA,EAAeC,4DAAM;AAAEC,kBAAI,EAAE;AAAR,aAAND,CAAfD,CADc,EAEdA,4DAAM,OAANA,EAAeC,4DAAM;AAAEC,kBAAI,EAAE;AAAR,aAAND,CAAfD,CAFc,EAGdG,iEAAW,gBAAXA,EAA6BC,8DAAQ,OAARA,CAA7BD,CAHc,CAAlBJ,CADQ,CAfL;AAsBPmB,qBAAS,EAAE,CAAC;AACRxB,qBAAO,EAAEC,6DADD;AACoBC,yBAAW,EAAEC,2DAAW;AAAA;AAAA,eAAXA,CADjC;AACsEC,mBAAK,EAAE;AAD7E,aAAD;AAtBJ;AA0BmB;;;;;;;;;AAGa3B,sBAAY;kBAAlDgD,oDAAkD;mBAAxC,SAAS;AAAEC,wBAAQ;AAAV;AAA+B;AAE1CC,uBAAa;kBAArBC;AAAqB;AAEDC,mBAAS;kBAA7BD,gDAA6B;mBAAvB;AAAuB;AACJE,wBAAc;kBAAvCF,gDAAuC;mBAAjC;AAAiC;AAE/B/D,YAAE;kBAAV+D;AAAU;AAMFG,cAAI;kBAAZH;AAAY;AAEJ1D,eAAK;kBAAb0D;AAAa;AAGVjC,kBAAQ;kBADXiC;AACW;AAkBRjD,iBAAO;kBADViD;AACU;AASQ/B,gBAAM;kBAAxBmC;AAAwB;;;;UE5GhBC;;;;;;;yBAAAA;;;;;;cAAAA;;;;;kBAJA,CAACC,yDAAD,EAAeC,yDAAf,EAA2BC,mEAA3B;;;;2HAIAH,iBAAc;gBAL1BI,mDAK0B;iBALjB;AACNC,mBAAO,EAAE,CAACJ,yDAAD,EAAeC,yDAAf,EAA2BC,mEAA3B,CADH;AAENG,mBAAO,EAAE,CAAC/E,kBAAD,CAFH;AAGNgF,wBAAY,EAAE,CAAChF,kBAAD;AAHR;AAKiB;;ACb3B;;;;;;;","names":["nextUniqueId","McToggleBase","constructor","_elementRef","McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","McToggleChange","McToggleComponent","_focusMonitor","_changeDetectorRef","EventEmitter","_","id","uniqueId","monitor","nativeElement","_disabled","value","markForCheck","_checked","ngOnDestroy","stopMonitoring","focus","focusVia","inputElement","getAriaChecked","checked","onChangeEvent","event","stopPropagation","updateModelValue","emitChangeEvent","onLabelTextChange","onInputClick","writeValue","registerOnChange","fn","onChangeCallback","registerOnTouched","onTouchedCallback","setDisabledState","isDisabled","disabled","source","change","emit","i0","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","trigger","state","style","left","transition","animate","Component","selector","exportAs","templateUrl","styleUrls","changeDetection","ChangeDetectionStrategy","encapsulation","ViewEncapsulation","inputs","host","class","animations","providers","ViewChild","static","labelPosition","Input","ariaLabel","ariaLabelledby","name","Output","McToggleModule","CommonModule","A11yModule","McCommonModule","NgModule","imports","exports","declarations"],"sources":["webpack:///packages/mosaic/toggle/toggle.component.ts","webpack:///packages/mosaic/toggle/toggle.component.html","webpack:///packages/mosaic/toggle/toggle.module.ts","webpack:///packages/mosaic/toggle/ptsecurity-mosaic-toggle.ts"],"sourcesContent":["import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    // tslint:disable-next-line: naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line: naming-convention\nexport const McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true\n    }]\n})\nexport class McToggleComponent extends McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input', { static: false }) inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    @Input() id: string;\n\n    get inputId(): string {\n        return `${this.id || this.uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    @Output() readonly change: EventEmitter<McToggleChange> = new EventEmitter<McToggleChange>();\n\n    private uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    constructor(\n        // tslint:disable-next-line:naming-convention\n        public _elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(_elementRef);\n\n        this.id =  this.uniqueId;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this.inputElement.nativeElement, 'keyboard');\n    }\n\n    getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    onChangeEvent(event: Event) {\n        event.stopPropagation();\n\n        this.updateModelValue();\n        this.emitChangeEvent();\n    }\n\n    onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private onChangeCallback = (_: any) => {};\n\n    private updateModelValue() {\n        this._checked = !this.checked;\n        this.onTouchedCallback();\n    }\n\n    private emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this.onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","<label [attr.for]=\"inputId\" class=\"mc-toggle-layout\">\n    <div class=\"mc-toggle__container\" [class.left]=\"labelPosition === 'left'\">\n        <input #input\n               type=\"checkbox\"\n               role=\"switch\"\n               class=\"mc-toggle-input cdk-visually-hidden\"\n               [id]=\"inputId\"\n               [checked]=\"checked\"\n               [attr.value]=\"value\"\n               [disabled]=\"disabled\"\n               [attr.name]=\"name\"\n               [tabIndex]=\"tabIndex\"\n               [attr.aria-label]=\"ariaLabel || null\"\n               [attr.aria-labelledby]=\"ariaLabelledby\"\n               [attr.aria-checked]=\"getAriaChecked()\"\n               (click)=\"onInputClick($event)\"\n               (change)=\"onChangeEvent($event)\"/>\n        <div class=\"mc-toggle-bar-container\">\n            <div class=\"mc-toggle__overlay\"></div>\n            <div class=\"mc-toggle-bar\">\n                <div class=\"mc-toggle__circle\" [@switch]=\"checked\"></div>\n            </div>\n        </div>\n        <div class=\"mc-toggle__content\"\n             [class.left]=\"labelPosition === 'left'\"\n             [class.right]=\"labelPosition === 'right'\">\n            <span class=\"mc-toggle-label\" (cdkObserveContent)=\"onLabelTextChange()\">\n                <ng-content></ng-content>\n            </span>\n        </div>\n    </div>\n</label>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}