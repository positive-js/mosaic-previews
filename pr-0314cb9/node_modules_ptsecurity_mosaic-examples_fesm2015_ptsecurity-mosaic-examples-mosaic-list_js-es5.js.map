{"version":3,"mappings":"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","names":["McListOption","elementRef","changeDetector","ngZone","listSelection","group","rxjs__WEBPACK_IMPORTED_MODULE_1__","_value","newValue","selected","value","inputsInitialized","listSelectionDisabled","disabled","groupDisabled","_disabled","markForCheck","_showCheckbox","undefined","showCheckbox","selectionModel","isSelected","_selected","setSelected","reportValueChange","list","some","compareWith","wasSelected","Promise","resolve","then","removeOptionFromList","text","nativeElement","textContent","select","deselect","getClientRects","height","$event","setSelectedOptionsByClick","actionButton","keyCode","_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__","shiftKey","hasFocus","focus","preventDefault","_a","onFocus","next","option","onStable","asObservable","pipe","subscribe","run","onBlur","_angular_core__WEBPACK_IMPORTED_MODULE_0__","McListSelection","_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__","_ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__","_ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_7__","ctx","provide","useExisting","_angular_common__WEBPACK_IMPORTED_MODULE_8__","exportAs","selector","templateUrl","host","encapsulation","preserveWhitespaces","changeDetection","providers","decorators","tooltipTrigger","dropdownTrigger","checkboxPosition","MC_SELECTION_LIST_VALUE_ACCESSOR","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","multi","McListSelectionChange","source","McListSelectAllEvent","options","McListCopyEvent","McListSelectionBase","McListSelectionMixinBase","changeDetectorRef","multiple","clipboard","a1","a2","multipleMode","autoSelect","noUnselectLast","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__","_autoSelect","_noUnselectLast","_tabIndex","userTabIndex","map","horizontal","keyManager","_ptsecurity_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","destroyed","setTimeout","setOptionsFromValues","changed","event","added","item","removed","changes","resetOptions","updateTabIndex","updateScrollSize","complete","length","setFirstItemActive","hasFocusedOption","setActiveItem","onTouched","forEach","first","withScrollSize","Math","floor","getHeight","ctrlKey","setSelectedOptions","canDeselectLast","toggle","clear","emitChangeEvent","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","toArray","slice","filter","isLastRenderedOption","renderedOption","activeItem","values","fn","onChange","isDisabled","focusedIndex","isValidIndex","focusedOption","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","includes","selectAllOptions","copyActiveOption","toggleFocusedOption","setLastItemActive","setPreviousPageItemActive","setNextPageItemActive","setSelectedOptionsByKey","getSelectedOptionValues","selectionChange","emit","copy","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","index","indexOf","updateActiveItem","optionBlurChanges","blur","find","getOptionByValue","Boolean","optionsToSelect","onSelectAll","onCopy","observers","onCopyDefaultHandler","_angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_15__","template","styleUrls","inputs","descendants","tabIndex","McList","McListItem","lines","classList","add","remove","McListModule","ɵinj","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_16__","imports","exports","declarations","item_r2","_r1","ListActionButtonExample","type","selectors","decls","vars","consts","ListActionButtonExample_mc_list_option_1_Template","_c0","directives","_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__","_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_5__","styles","args","pokemon_r3","ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template","group_r1","ListGroupsExample","name","pokemon","viewValue","ListGroupsExample_mc_optgroup_1_Template","ListMultipleCheckboxExample","ListMultipleKeyboardExample","ListOverviewExample","ListExamplesModule","_ptsecurity_mosaic_icon__WEBPACK_IMPORTED_MODULE_7__"],"sources":["webpack:///packages/mosaic/list/list-selection.component.ts","webpack:///packages/mosaic/list/list-option.html","webpack:///packages/mosaic/list/list.component.ts","webpack:///packages/mosaic/list/list-item.html","webpack:///packages/mosaic/list/list.module.ts","webpack:///packages/mosaic/list/ptsecurity-mosaic-list.ts","webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-list.js"],"sourcesContent":["/* tslint:disable:no-empty */\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone,\n    Optional,\n    ContentChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    isCopy,\n    isSelectAll,\n    isVerticalMovement,\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex,\n    MultipleMode,\n    McOptgroup,\n    MC_OPTION_ACTION_PARENT,\n    McOptionActionComponent\n} from '@ptsecurity/mosaic/core';\nimport { McDropdownTrigger } from '@ptsecurity/mosaic/dropdown';\nimport { McTooltipTrigger } from '@ptsecurity/mosaic/tooltip';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    templateUrl: './list-option.html',\n    host: {\n        class: 'mc-list-option',\n\n        '[class.mc-selected]': 'selected',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-focused]': 'hasFocus',\n\n        '[class.mc-action-button-focused]': 'actionButton?.active',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(focusin)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)',\n        '(keydown)': 'onKeydown($event)'\n    },\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_OPTION_ACTION_PARENT, useExisting: McListOption }\n    ]\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChild(McOptionActionComponent) actionButton: McOptionActionComponent;\n    @ContentChild(McTooltipTrigger) tooltipTrigger: McTooltipTrigger;\n    @ContentChild(McDropdownTrigger) dropdownTrigger: McDropdownTrigger;\n\n    @ViewChild('text', { static: false }) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after';\n\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     */\n    private inputsInitialized = false;\n\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this.selected && newValue !== this.value && this.inputsInitialized) {\n            this.selected = false;\n        }\n\n        this._value = newValue;\n    }\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        const listSelectionDisabled = this.listSelection && this.listSelection.disabled;\n        const groupDisabled = this.group && this.group.disabled;\n\n        return listSelectionDisabled || groupDisabled || this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngOnInit() {\n        const list = this.listSelection;\n\n        if (list._value && list._value.some((value) => list.compareWith(value, this._value))) {\n            this.setSelected(true);\n        }\n\n        const wasSelected = this._selected;\n\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this.changeDetector.markForCheck();\n            }\n        });\n\n        this.inputsInitialized = true;\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setSelectedOptionsByClick(\n            this, hasModifierKey($event, 'shiftKey'), hasModifierKey($event, 'ctrlKey')\n        );\n    }\n\n    onKeydown($event) {\n        if (!this.actionButton) { return; }\n\n        if ($event.keyCode === TAB && !$event.shiftKey && !this.actionButton.hasFocus) {\n            this.actionButton.focus();\n\n            $event.preventDefault();\n        }\n    }\n\n    focus() {\n        if (this.disabled || this.hasFocus || this.actionButton?.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetector.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    if (this.actionButton?.hasFocus) { return; }\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\nexport class McListSelectAllEvent<T> {\n    constructor(public source: McListSelection, public options: T[]) {}\n}\n\nexport class McListCopyEvent<T> {\n    constructor(public source: McListSelection, public option: T) {}\n}\n\nexport class McListSelectionBase {\n    constructor(public elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: `\n        <div [attr.tabindex]=\"tabIndex\"\n             (focus)=\"focus()\"\n             (blur)=\"blur()\">\n            <ng-content></ng-content>\n        </div>`,\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-list-selection',\n\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    @ContentChildren(McListOption, { descendants: true }) options: QueryList<McListOption>;\n\n    @Output() readonly onSelectAll = new EventEmitter<McListSelectAllEvent<McListOption>>();\n\n    @Output() readonly onCopy = new EventEmitter<McListCopyEvent<McListOption>>();\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    multipleMode: MultipleMode | null;\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    userTabIndex: number | null = null;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // tslint:disable-next-line:orthodox-getter-and-setter naming-convention\n    _value: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode,\n        @Optional() private clipboard: Clipboard\n    ) {\n        super(elementRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    @Input() compareWith: (o1: any, o2: any) => boolean = (a1, a2) => a1 === a2;\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this._value) {\n            this.setOptionsFromValues(this._value);\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOptionsByClick(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option);\n        } else {\n            this.selectionModel.toggle(option);\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptionsByKey(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.options.forEach((item) => item.setSelected(false));\n            option.setSelected(true);\n\n            this.emitChangeEvent(option);\n            this.reportValueChange();\n        }\n    }\n\n    setSelectedOptions(option: McListOption): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.options\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        this._value = values;\n\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        if ([SPACE, ENTER, LEFT_ARROW, RIGHT_ARROW].includes(keyCode) || isVerticalMovement(event)) {\n            event.preventDefault();\n        }\n\n        if (this.multiple && isSelectAll(event)) {\n            this.selectAllOptions();\n            event.preventDefault();\n\n            return;\n        } else if (isCopy(event)) {\n            this.copyActiveOption();\n            event.preventDefault();\n\n            return;\n        } else if ([SPACE, ENTER].includes(keyCode)) {\n            this.toggleFocusedOption();\n\n            return;\n        } else if (keyCode === TAB) {\n            this.keyManager.tabOut.next();\n\n            return;\n        } else if (keyCode === DOWN_ARROW) {\n            this.keyManager.setNextItemActive();\n        } else if (keyCode === UP_ARROW) {\n            this.keyManager.setPreviousItemActive();\n        } else if (keyCode === HOME) {\n            this.keyManager.setFirstItemActive();\n        } else if (keyCode === END) {\n            this.keyManager.setLastItemActive();\n        } else if (keyCode === PAGE_UP) {\n            this.keyManager.setPreviousPageItemActive();\n        } else if (keyCode === PAGE_DOWN) {\n            this.keyManager.setNextPageItemActive();\n        }\n\n        if (this.keyManager.activeItem) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem as McListOption,\n                hasModifierKey(event, 'shiftKey'),\n                hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            const value = this.getSelectedOptionValues();\n            this.onChange(value);\n            this._value = value;\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.userTabIndex || (this.options.length === 0 ? -1 : 0);\n    }\n\n    private onCopyDefaultHandler(): void {\n        this.clipboard?.copy(this.keyManager.activeItem!.value);\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n\n    private selectAllOptions() {\n        const optionsToSelect = this.options\n            .filter((option) => !option.disabled);\n\n        optionsToSelect\n        .forEach((option) => option.setSelected(true));\n\n        this.onSelectAll.emit(new McListSelectAllEvent(this, optionsToSelect));\n    }\n\n    private copyActiveOption() {\n        if (this.onCopy.observers.length) {\n            this.onCopy.emit(new McListCopyEvent(this, this.keyManager.activeItem as McListOption));\n        } else {\n            this.onCopyDefaultHandler();\n        }\n    }\n}\n","<mc-pseudo-checkbox\n    *ngIf=\"showCheckbox\"\n    [state]=\"selected ? 'checked' : 'unchecked'\"\n    [disabled]=\"disabled\">\n</mc-pseudo-checkbox>\n\n<div class=\"mc-list-text\" #text>\n    <ng-content></ng-content>\n</div>\n\n<ng-content select=\"mc-option-action\"></ng-content>\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList {}\n\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterContentInit() {\n        // tslint:disable-next-line:no-unused-expression\n        new McLineSetter(this.lines, this.elementRef);\n    }\n\n    handleFocus() {\n        this.elementRef.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this.elementRef.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n","<ng-content select=\"[mc-list-icon], [mcListIcon]\"></ng-content>\n\n<div class=\"mc-list-text\">\n    <ng-content select=\"[mc-line], [mcLine]\"></ng-content>\n</div>\n\n<ng-content></ng-content>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McLineModule, McOptionModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule,\n        McOptionModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McOptionModule\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption\n    ]\n})\nexport class McListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4 from '@ptsecurity/mosaic/dropdown';\nimport { McDropdownModule } from '@ptsecurity/mosaic/dropdown';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport * as i1 from '@ptsecurity/mosaic/list';\nimport { McListModule } from '@ptsecurity/mosaic/list';\nimport * as i6 from '@ptsecurity/mosaic/tooltip';\nimport { McToolTipModule } from '@ptsecurity/mosaic/tooltip';\nimport * as i5 from '@ptsecurity/mosaic/core';\n\nfunction ListActionButtonExample_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"mc-option-action\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"value\", \"Item {{ item }}\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Item \", item_r2, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mcTooltip\", \"Tooltip text\")(\"mcPlacement\", \"right\")(\"mcDropdownTriggerFor\", _r1);\n} }\nconst _c0 = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9]; };\n/**\n * @title list ActionButton\n */\nclass ListActionButtonExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListActionButtonExample.ɵfac = function ListActionButtonExample_Factory(t) { return new (t || ListActionButtonExample)(); };\nListActionButtonExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListActionButtonExample, selectors: [[\"list-action-button-example\"]], decls: 13, vars: 5, consts: [[3, \"autoSelect\", \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"dropdown\", \"\"], [\"mc-dropdown-item\", \"\"], [3, \"value\"], [3, \"mcTooltip\", \"mcPlacement\", \"mcDropdownTriggerFor\"]], template: function ListActionButtonExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListActionButtonExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵtemplate(1, ListActionButtonExample_mc_list_option_1_Template, 3, 5, \"mc-list-option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-dropdown\", null, 2);\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵtext(8, \"item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵtext(10, \"item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 3);\n        i0.ɵɵtext(12, \"item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"autoSelect\", false)(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i4.McDropdown, i4.McDropdownItem, i1.McListOption, i5.McOptionActionComponent, i6.McTooltipTrigger, i4.McDropdownTrigger], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListActionButtonExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-action-button-example',\n                templateUrl: 'list-action-button-example.html',\n                styleUrls: ['list-action-button-example.css']\n            }]\n    }], null, null); })();\n\nfunction ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pokemon_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pokemon_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r3.viewValue, \" \");\n} }\nfunction ListGroupsExample_mc_optgroup_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-optgroup\", 2);\n    i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template, 2, 2, \"mc-list-option\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r1.name)(\"disabled\", group_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r1.pokemon);\n} }\n/**\n * @title Basic list\n */\nclass ListGroupsExample {\n    constructor() {\n        this.pokemonTypes = [\n            {\n                name: 'Grass',\n                pokemon: [\n                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n                    { value: 'oddish-1', viewValue: 'Oddish' },\n                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n                ]\n            },\n            {\n                name: 'Water',\n                disabled: true,\n                pokemon: [\n                    { value: 'squirtle-3', viewValue: 'Squirtle' },\n                    { value: 'psyduck-4', viewValue: 'Psyduck' },\n                    { value: 'horsea-5', viewValue: 'Horsea' }\n                ]\n            },\n            {\n                name: 'Fire',\n                pokemon: [\n                    { value: 'charmander-6', viewValue: 'Charmander' },\n                    { value: 'vulpix-7', viewValue: 'Vulpix' },\n                    { value: 'flareon-8', viewValue: 'Flareon' }\n                ]\n            },\n            {\n                name: 'Psychic',\n                pokemon: [\n                    { value: 'mew-9', viewValue: 'Mew' },\n                    { value: 'mewtwo-10', viewValue: 'Mewtwo' }\n                ]\n            }\n        ];\n    }\n}\nListGroupsExample.ɵfac = function ListGroupsExample_Factory(t) { return new (t || ListGroupsExample)(); };\nListGroupsExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListGroupsExample, selectors: [[\"list-groups-example\"]], decls: 4, vars: 2, consts: [[3, \"label\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"label\", \"disabled\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"]], template: function ListGroupsExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\");\n        i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_Template, 2, 3, \"mc-optgroup\", 0);\n        i0.ɵɵelementStart(2, \"mc-list-option\", 1);\n        i0.ɵɵtext(3, \"Mr. Mime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemonTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"mime-11\");\n    } }, directives: [i1.McListSelection, i3.NgForOf, i1.McListOption, i5.McOptgroup], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListGroupsExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-groups-example',\n                templateUrl: 'list-groups-example.html',\n                styleUrls: ['list-groups-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleCheckboxExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleCheckboxExample.ɵfac = function ListMultipleCheckboxExample_Factory(t) { return new (t || ListMultipleCheckboxExample)(); };\nListMultipleCheckboxExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleCheckboxExample, selectors: [[\"list-multiple-checkbox-example\"]], decls: 24, vars: 13, consts: [[\"multiple\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"disabled\"], [3, \"value\"]], template: function ListMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 2);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 2);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 2);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 2);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 2);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 2);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 2);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 2);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"Item 1\")(\"disabled\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 3\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 4\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 5\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 6\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 7\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 8\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 9\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 10\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleCheckboxExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-checkbox-example',\n                templateUrl: 'list-multiple-checkbox-example.html',\n                styleUrls: ['list-multiple-checkbox-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleKeyboardExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleKeyboardExample.ɵfac = function ListMultipleKeyboardExample_Factory(t) { return new (t || ListMultipleKeyboardExample)(); };\nListMultipleKeyboardExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleKeyboardExample, selectors: [[\"list-multiple-keyboard-example\"]], decls: 24, vars: 12, consts: [[\"multiple\", \"keyboard\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", 3, \"value\"], [3, \"value\"]], template: function ListMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 2);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 2);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 2);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 2);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 2);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 2);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 2);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 2);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"Item 1\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 3\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 4\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 5\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 6\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 7\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 8\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 9\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 10\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleKeyboardExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-keyboard-example',\n                templateUrl: 'list-multiple-keyboard-example.html',\n                styleUrls: ['list-multiple-keyboard-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListOverviewExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListOverviewExample.ɵfac = function ListOverviewExample_Factory(t) { return new (t || ListOverviewExample)(); };\nListOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListOverviewExample, selectors: [[\"list-overview-example\"]], decls: 24, vars: 12, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", 3, \"value\"], [3, \"value\"]], template: function ListOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 2);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 2);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 2);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 2);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 2);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 2);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 2);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 2);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"Item 1\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 2\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 3\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 4\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 5\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 6\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 7\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 8\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 9\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Item 10\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-overview-example',\n                templateUrl: 'list-overview-example.html',\n                styleUrls: ['list-overview-example.css']\n            }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    ListOverviewExample,\n    ListMultipleCheckboxExample,\n    ListMultipleKeyboardExample,\n    ListGroupsExample,\n    ListActionButtonExample\n];\nclass ListExamplesModule {\n}\nListExamplesModule.ɵfac = function ListExamplesModule_Factory(t) { return new (t || ListExamplesModule)(); };\nListExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ListExamplesModule });\nListExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McListModule,\n            McDropdownModule,\n            McToolTipModule,\n            McIconModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McListModule,\n                    McDropdownModule,\n                    McToolTipModule,\n                    McIconModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ListExamplesModule, { declarations: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample,\n        ListActionButtonExample], imports: [CommonModule,\n        FormsModule,\n        McListModule,\n        McDropdownModule,\n        McToolTipModule,\n        McIconModule], exports: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample,\n        ListActionButtonExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ListActionButtonExample, ListExamplesModule, ListGroupsExample, ListMultipleCheckboxExample, ListMultipleKeyboardExample, ListOverviewExample };\n"]}