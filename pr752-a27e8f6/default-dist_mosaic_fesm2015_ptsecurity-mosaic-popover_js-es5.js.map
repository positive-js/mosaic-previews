{"version":3,"mappings":"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","names":["ctx_r4","ctx_r6","ctx_r8","mcPopoverAnimations","popoverState","trigger","state","style","opacity","transform","transition","animate","McPopoverComponent","constructor","changeDetectorRef","updateClassMap","placement","customClass","size","prefix","McPopUp","i0","ctx","i1","Component","selector","templateUrl","preserveWhitespaces","styleUrls","host","encapsulation","ViewEncapsulation","changeDetection","ChangeDetectionStrategy","animations","MC_POPOVER_SCROLL_STRATEGY","InjectionToken","mcPopoverScrollStrategyFactory","overlay","scrollStrategies","reposition","scrollThrottle","MC_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","getMcPopoverInvalidPositionError","position","Error","McPopoverTrigger","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","PopUpTriggers","PopUpSizes","EventEmitter","visible","value","placementPriority","_hasBackdrop","coerceBooleanProperty","_header","updateData","_content","_footer","_disabled","_trigger","initListeners","_size","includes","_customClass","_closeOnScroll","panelClass","hasBackdrop","backdropClass","instance","header","content","footer","isOpen","updatePosition","reapplyPosition","overlayRef","createOverlay","getConfig","positionStrategy","withPositions","getPrioritizedPositions","withPush","setTimeout","reapplyLastPosition","getOverlayHandleComponentType","newPlacement","POSITION_TO_CSS_MAP","markForCheck","closingActions","merge","backdropClick","NEVER","outsidePointerEvents","closeOnScroll","scrolled","detachments","McPopUpTrigger","i2","i3","Directive","exportAs","Inject","Optional","popoverVisible","Input","popoverPlacement","popoverPlacementPriority","disabled","placementChange","Output","visibleChange","MC_POPOVER_CONFIRM_TEXT","MC_POPOVER_CONFIRM_BUTTON_TEXT","McPopoverConfirmComponent","ThemePalette","Subject","McPopoverConfirmTrigger","confirmText","confirmButtonText","_confirmText","_confirmButtonText","setupButtonEvents","onConfirm","pipe","takeUntil","destroyed","subscribe","confirm","emit","hide","McPopoverModule","CommonModule","OverlayModule","McButtonModule","NgModule","declarations","exports","imports","providers","entryComponents","_Observable__WEBPACK_IMPORTED_MODULE_0__","_util_noop__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///packages/mosaic/popover/popover.component.html","webpack:///packages/mosaic/popover/popover-animations.ts","webpack:///packages/mosaic/popover/popover.component.ts","webpack:///packages/mosaic/popover/popover-confirm.component.ts","webpack:///packages/mosaic/popover/popover-confirm.component.html","webpack:///packages/mosaic/popover/popover.module.ts","webpack:///packages/mosaic/popover/ptsecurity-mosaic-popover.ts","webpack:///node_modules/rxjs/_esm2015/internal/observable/never.js"],"sourcesContent":["<div class=\"mc-popover\"\n     [ngClass]=\"classMap\"\n     [@state]=\"visibility\"\n     (@state.start)=\"animationStart()\"\n     (@state.done)=\"animationDone($event)\">\n\n    <div class=\"mc-popover__container\">\n        <div class=\"mc-popover__header\" *ngIf=\"header\">\n            <ng-container *ngIf=\"isTemplateRef(header)\" [ngTemplateOutlet]=\"$any(header)\"></ng-container>\n            <ng-container *ngIf=\"!isTemplateRef(header)\">\n                <div>{{ header }}</div>\n            </ng-container>\n        </div>\n\n        <div class=\"mc-popover__content\" *ngIf=\"content\">\n            <ng-container *ngIf=\"isTemplateRef(content)\" [ngTemplateOutlet]=\"$any(content)\"></ng-container>\n            <ng-container *ngIf=\"!isTemplateRef(content)\">\n                <div>{{ content }}</div>\n            </ng-container>\n        </div>\n\n        <div class=\"mc-popover__footer\" *ngIf=\"footer\">\n            <ng-container *ngIf=\"isTemplateRef(footer)\" [ngTemplateOutlet]=\"$any(footer)\"></ng-container>\n            <ng-container *ngIf=\"!isTemplateRef(footer)\">\n                <div>{{ footer }}</div>\n            </ng-container>\n        </div>\n    </div>\n\n    <div class=\"mc-popover__arrow\" [class.mc-popover__arrow_with-footer]=\"footer\"></div>\n</div>\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\n\n\nexport const mcPopoverAnimations: {\n    readonly popoverState: AnimationTriggerMetadata;\n} = {\n    /** Animation that transitions a tooltip in and out. */\n    popoverState: trigger('state', [\n        state('initial', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('* => visible', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => hidden', animate('100ms linear', style({ opacity: 0 })))\n    ])\n};\n","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    FlexibleConnectedPositionStrategy,\n    Overlay,\n    ScrollDispatcher,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { OverlayConfig } from '@angular/cdk/overlay/overlay-config';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    Optional,\n    Output,\n    TemplateRef,\n    Type,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    McPopUp,\n    McPopUpTrigger,\n    PopUpPlacements,\n    PopUpSizes,\n    PopUpTriggers,\n    POSITION_TO_CSS_MAP\n} from '@ptsecurity/mosaic/core';\nimport { merge, NEVER } from 'rxjs';\n\nimport { mcPopoverAnimations } from './popover-animations';\n\n\n@Component({\n    selector: 'mc-popover-component',\n    templateUrl: './popover.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./popover.scss'],\n    host: {\n        '(keydown.esc)': 'hide(0)'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcPopoverAnimations.popoverState]\n})\nexport class McPopoverComponent extends McPopUp {\n    prefix = 'mc-popover';\n\n    header: string | TemplateRef<any>;\n    footer: string | TemplateRef<any>;\n\n    constructor(changeDetectorRef: ChangeDetectorRef) {\n        super(changeDetectorRef);\n    }\n\n    updateClassMap(placement: string, customClass: string, size: PopUpSizes) {\n        super.updateClassMap(\n            placement,\n            customClass,\n            { [`${this.prefix}_${size}`]: !!size }\n        );\n    }\n}\n\nexport const MC_POPOVER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-popover-scroll-strategy');\n\n/** @docs-private */\nexport function mcPopoverScrollStrategyFactory(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: 20 });\n}\n\n/** @docs-private */\nexport const MC_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_POPOVER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcPopoverScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid popover position. */\nexport function getMcPopoverInvalidPositionError(position: string) {\n    return Error(`McPopover position \"${position}\" is invalid.`);\n}\n\n\n@Directive({\n    selector: '[mcPopover]',\n    exportAs: 'mcPopover',\n    host: {\n        '[class.mc-popover_open]': 'isOpen',\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McPopoverTrigger extends McPopUpTrigger<McPopoverComponent> {\n    @Input('mcPopoverVisible')\n    get popoverVisible(): boolean {\n        return this.visible;\n    }\n\n    set popoverVisible(value: boolean) {\n        super.updateVisible(value);\n    }\n\n    @Input('mcPopoverPlacement')\n    get popoverPlacement(): PopUpPlacements {\n        return this.placement;\n    }\n\n    set popoverPlacement(value: PopUpPlacements) {\n        super.updatePlacement(value);\n    }\n\n    @Input('mcPopoverPlacementPriority')\n    get popoverPlacementPriority() {\n        return this.placementPriority;\n    }\n\n    set popoverPlacementPriority(value) {\n        super.updatePlacementPriority(value);\n    }\n\n    @Input()\n    get hasBackdrop(): boolean {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    private _hasBackdrop: boolean = false;\n\n    @Input('mcPopoverHeader')\n    get header(): string | TemplateRef<any> {\n        return this._header;\n    }\n\n    set header(value: string | TemplateRef<any>) {\n        this._header = value;\n\n        this.updateData();\n    }\n\n    private _header: string | TemplateRef<any>;\n\n    @Input('mcPopoverContent')\n    get content(): string | TemplateRef<any> {\n        return this._content;\n    }\n\n    set content(value: string | TemplateRef<any>) {\n        this._content = value;\n\n        this.updateData();\n    }\n\n    @Input('mcPopoverFooter')\n    get footer(): string | TemplateRef<any> {\n        return this._footer;\n    }\n\n    set footer(value: string | TemplateRef<any>) {\n        this._footer = value;\n\n        this.updateData();\n    }\n\n    private _footer: string | TemplateRef<any>;\n\n    @Input('mcPopoverDisabled')\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcTrigger')\n    get trigger(): string {\n        return this._trigger;\n    }\n\n    set trigger(value: string) {\n        if (value) {\n            this._trigger = value;\n        } else {\n            this._trigger = PopUpTriggers.Click;\n        }\n\n        this.initListeners();\n    }\n\n    private _trigger: string = PopUpTriggers.Click;\n\n    @Input('mcPopoverSize')\n    get size(): PopUpSizes {\n        return this._size;\n    }\n\n    set size(value: PopUpSizes) {\n        if ([PopUpSizes.Small, PopUpSizes.Normal, PopUpSizes.Large].includes(value)) {\n            this._size = value;\n\n            this.updateClassMap();\n        } else {\n            this._size = PopUpSizes.Normal;\n        }\n    }\n\n    private _size: PopUpSizes = PopUpSizes.Normal;\n\n    @Input('mcPopoverClass')\n    get customClass() {\n        return this._customClass;\n    }\n\n    set customClass(value: string) {\n        this._customClass = value;\n\n        this.updateClassMap();\n    }\n\n    @Input()\n    get closeOnScroll(): boolean {\n        return this._closeOnScroll;\n    }\n\n    set closeOnScroll(value: boolean) {\n        this._closeOnScroll = coerceBooleanProperty(value);\n    }\n\n    private _closeOnScroll: boolean = false;\n\n    @Input() backdropClass: string = 'cdk-overlay-transparent-backdrop';\n\n    @Output('mcPopoverPlacementChange') placementChange = new EventEmitter();\n\n    @Output('mcPopoverVisibleChange') visibleChange = new EventEmitter<boolean>();\n\n    protected originSelector = '.mc-popover';\n\n    protected get overlayConfig(): OverlayConfig {\n        return {\n            panelClass: 'mc-popover__panel',\n            hasBackdrop: this.hasBackdrop,\n            backdropClass: this.backdropClass\n        };\n    }\n\n    constructor(\n        overlay: Overlay,\n        elementRef: ElementRef,\n        ngZone: NgZone,\n        scrollDispatcher: ScrollDispatcher,\n        hostView: ViewContainerRef,\n        @Inject(MC_POPOVER_SCROLL_STRATEGY) scrollStrategy,\n        @Optional() direction: Directionality\n    ) {\n        super(overlay, elementRef, ngZone, scrollDispatcher, hostView, scrollStrategy, direction);\n    }\n\n    updateData() {\n        if (!this.instance) { return; }\n\n        this.instance.header = this.header;\n        this.instance.content = this.content;\n        this.instance.footer = this.footer;\n\n        if (this.isOpen) {\n            this.updatePosition(true);\n        }\n    }\n\n    /** Updates the position of the current popover. */\n    updatePosition(reapplyPosition: boolean = false) {\n        this.overlayRef = this.createOverlay();\n\n        const position = (this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy)\n            .withPositions(this.getPrioritizedPositions())\n            .withPush(true);\n\n        if (reapplyPosition) {\n            setTimeout(() => position.reapplyLastPosition());\n        }\n    }\n\n    getOverlayHandleComponentType(): Type<McPopoverComponent> {\n        return McPopoverComponent;\n    }\n\n    updateClassMap(newPlacement: string = this.placement) {\n        if (!this.instance) { return; }\n\n        this.instance.updateClassMap(POSITION_TO_CSS_MAP[newPlacement], this.customClass, this.size);\n        this.instance.markForCheck();\n    }\n\n    closingActions() {\n        return merge(\n            this.overlayRef!.backdropClick(),\n            this.hasBackdrop ? NEVER : this.overlayRef!.outsidePointerEvents(),\n            this.closeOnScroll ? this.scrollDispatcher.scrolled() : NEVER,\n            this.overlayRef!.detachments()\n        );\n    }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, ScrollDispatcher } from '@angular/cdk/overlay';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    Optional,\n    Output,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { mcPopoverAnimations } from './popover-animations';\nimport { MC_POPOVER_SCROLL_STRATEGY, McPopoverComponent, McPopoverTrigger } from './popover.component';\n\n\nexport const MC_POPOVER_CONFIRM_TEXT = new InjectionToken<string>('');\nexport const MC_POPOVER_CONFIRM_BUTTON_TEXT = new InjectionToken<string>('');\n\n@Component({\n    selector: 'mc-popover-confirm-component',\n    templateUrl: './popover-confirm.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./popover.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcPopoverAnimations.popoverState]\n})\nexport class McPopoverConfirmComponent extends McPopoverComponent {\n    themePalette = ThemePalette;\n\n    onConfirm = new Subject<void>();\n    confirmButtonText: string;\n\n    confirmText: string;\n\n    constructor(changeDetectorRef: ChangeDetectorRef) {\n        super(changeDetectorRef);\n    }\n}\n\n\n@Directive({\n    selector: '[mcPopoverConfirm]',\n    exportAs: 'mcPopoverConfirm',\n    host: {\n        '[class.mc-popover_open]': 'isOpen',\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McPopoverConfirmTrigger extends McPopoverTrigger {\n    @Output() confirm: EventEmitter<void> = new EventEmitter<void>();\n\n    @Input('mcPopoverConfirmText')\n    get confirmText(): string {\n        return this._confirmText;\n    }\n\n    set confirmText(value: string) {\n        this._confirmText = value;\n\n        this.updateData();\n    }\n\n    private _confirmText: string;\n\n    @Input('mcPopoverConfirmButtonText')\n    get confirmButtonText(): string {\n        return this._confirmButtonText;\n    }\n\n    set confirmButtonText(value: string) {\n        this._confirmButtonText = value;\n\n        this.updateData();\n    }\n\n    private _confirmButtonText: string = 'Да';\n\n    constructor(\n        overlay: Overlay,\n        elementRef: ElementRef,\n        ngZone: NgZone,\n        scrollDispatcher: ScrollDispatcher,\n        hostView: ViewContainerRef,\n        @Inject(MC_POPOVER_SCROLL_STRATEGY) scrollStrategy,\n        @Optional() direction: Directionality,\n        @Optional() @Inject(MC_POPOVER_CONFIRM_TEXT) confirmText: string,\n        @Optional() @Inject(MC_POPOVER_CONFIRM_BUTTON_TEXT) confirmButtonText: string\n    ) {\n        super(overlay, elementRef, ngZone, scrollDispatcher, hostView, scrollStrategy, direction);\n\n        this.confirmText = confirmText || 'Вы уверены, что хотите продолжить?';\n        this.confirmButtonText = confirmButtonText || 'Да';\n    }\n\n    updateData() {\n        if (!this.instance) { return; }\n        super.updateData();\n        this.setupButtonEvents();\n        this.instance.confirmButtonText = this.confirmButtonText;\n        this.instance.confirmText = this.confirmText;\n    }\n\n    setupButtonEvents() {\n        this.instance.onConfirm.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            this.confirm.emit();\n            this.hide();\n        });\n    }\n\n    getOverlayHandleComponentType() {\n        return McPopoverConfirmComponent;\n    }\n}\n","<div class=\"mc-popover-confirm mc-popover\"\n     [ngClass]=\"classMap\"\n     [@state]=\"visibility\"\n     (@state.start)=\"animationStart()\"\n     (@state.done)=\"animationDone($event)\">\n    <div class=\"mc-popover__content\">\n        <div>{{ confirmText }}</div>\n        <button mc-button [color]=\"themePalette.Primary\" (click)=\"onConfirm.next()\">{{confirmButtonText}}</button>    \n    </div>\n\n    <div class=\"mc-popover__arrow\"></div>\n</div>\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\n\nimport { McPopoverConfirmComponent, McPopoverConfirmTrigger } from './popover-confirm.component';\nimport { MC_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER, McPopoverComponent, McPopoverTrigger } from './popover.component';\n\n\n@NgModule({\n    declarations: [McPopoverComponent, McPopoverTrigger, McPopoverConfirmComponent, McPopoverConfirmTrigger],\n    exports: [McPopoverComponent, McPopoverTrigger, McPopoverConfirmComponent, McPopoverConfirmTrigger],\n    imports: [CommonModule, OverlayModule, McButtonModule],\n    providers: [MC_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McPopoverComponent, McPopoverConfirmComponent]\n})\nexport class McPopoverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport const NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n"]}