{"version":3,"sources":["webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-list.js","webpack:///dist/packages/mosaic/list/list-selection.component.ts","webpack:///dist/packages/mosaic/list/list.component.ts","webpack:///dist/packages/mosaic/list/list.module.ts","webpack:///dist/packages/mosaic/list/ptsecurity-mosaic-list.ts"],"names":["ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template","rf","ctx","pokemon_r3","$implicit","value","viewValue","ListGroupsExample_mc_optgroup_1_Template","group_r1","name","disabled","pokemon","ListGroupsExample","pokemonTypes","ɵfac","ListGroupsExample_Factory","t","ɵcmp","type","selectors","decls","vars","consts","template","ListGroupsExample_Template","directives","styles","ngDevMode","args","selector","templateUrl","styleUrls","ListMultipleCheckboxExample","selected","ListMultipleCheckboxExample_Factory","ListMultipleCheckboxExample_Template","ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener","$event","ListMultipleKeyboardExample","ListMultipleKeyboardExample_Factory","ListMultipleKeyboardExample_Template","ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener","ListOverviewExample","ListOverviewExample_Factory","ListOverviewExample_Template","ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener","EXAMPLES","ListExamplesModule","ListExamplesModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","McListOption","elementRef","changeDetector","ngZone","listSelection","group","hasFocus","onFocus","onBlur","inputsInitialized","_disabled","_selected","_value","newValue","listSelectionDisabled","groupDisabled","markForCheck","_showCheckbox","undefined","showCheckbox","selectionModel","isSelected","setSelected","reportValueChange","list","some","compareWith","wasSelected","Promise","resolve","then","removeOptionFromList","text","nativeElement","textContent","select","deselect","getClientRects","height","setSelectedOptionsByClick","focus","next","option","onStable","asObservable","pipe","subscribe","run","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","useExisting","multi","McListSelectionChange","source","McListSelectionBase","McListSelectionMixinBase","changeDetectorRef","multiple","_autoSelect","_noUnselectLast","horizontal","_tabIndex","userTabIndex","selectionChange","destroyed","a1","a2","onTouched","onChange","_","CHECKBOX","KEYBOARD","multipleMode","autoSelect","noUnselectLast","options","map","keyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","setTimeout","setOptionsFromValues","changed","event","added","item","removed","changes","resetOptions","updateTabIndex","updateScrollSize","complete","length","setFirstItemActive","hasFocusedOption","setActiveItem","forEach","first","withScrollSize","Math","floor","getHeight","shiftKey","ctrlKey","setSelectedOptions","canDeselectLast","toggle","clear","emitChangeEvent","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","toArray","slice","filter","renderedOption","isLastRenderedOption","activeItem","values","fn","isDisabled","focusedIndex","isValidIndex","focusedOption","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","keyCode","toggleFocusedOption","setLastItemActive","setPreviousPageItemActive","setNextPageItemActive","preventDefault","setSelectedOptionsByKey","getSelectedOptionValues","emit","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","index","indexOf","updateActiveItem","optionBlurChanges","blur","find","getOptionByValue","Boolean","descendants","McList","McListItem","lines","classList","add","remove","McListModule"],"mappings":"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","file":"11-es5.js","sourcesContent":["import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from '@ptsecurity/mosaic/list';\nimport { McListModule } from '@ptsecurity/mosaic/list';\nimport * as i3 from '@ptsecurity/mosaic/core';\n\nfunction ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pokemon_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pokemon_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r3.viewValue, \" \");\n} }\nfunction ListGroupsExample_mc_optgroup_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-optgroup\", 2);\n    i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template, 2, 2, \"mc-list-option\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r1.name)(\"disabled\", group_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r1.pokemon);\n} }\n/**\n * @title Basic list\n */\nclass ListGroupsExample {\n    constructor() {\n        this.pokemonTypes = [\n            {\n                name: 'Grass',\n                pokemon: [\n                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n                    { value: 'oddish-1', viewValue: 'Oddish' },\n                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n                ]\n            },\n            {\n                name: 'Water',\n                disabled: true,\n                pokemon: [\n                    { value: 'squirtle-3', viewValue: 'Squirtle' },\n                    { value: 'psyduck-4', viewValue: 'Psyduck' },\n                    { value: 'horsea-5', viewValue: 'Horsea' }\n                ]\n            },\n            {\n                name: 'Fire',\n                pokemon: [\n                    { value: 'charmander-6', viewValue: 'Charmander' },\n                    { value: 'vulpix-7', viewValue: 'Vulpix' },\n                    { value: 'flareon-8', viewValue: 'Flareon' }\n                ]\n            },\n            {\n                name: 'Psychic',\n                pokemon: [\n                    { value: 'mew-9', viewValue: 'Mew' },\n                    { value: 'mewtwo-10', viewValue: 'Mewtwo' }\n                ]\n            }\n        ];\n    }\n}\nListGroupsExample.ɵfac = function ListGroupsExample_Factory(t) { return new (t || ListGroupsExample)(); };\nListGroupsExample.ɵcmp = i0.ɵɵdefineComponent({ type: ListGroupsExample, selectors: [[\"list-groups-example\"]], decls: 4, vars: 1, consts: [[3, \"label\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"mime-11\"], [3, \"label\", \"disabled\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function ListGroupsExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\");\n        i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_Template, 2, 3, \"mc-optgroup\", 0);\n        i0.ɵɵelementStart(2, \"mc-list-option\", 1);\n        i0.ɵɵtext(3, \"Mr. Mime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemonTypes);\n    } }, directives: [i1.McListSelection, i2.NgForOf, i1.McListOption, i3.McOptgroup], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListGroupsExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-groups-example',\n                templateUrl: 'list-groups-example.html',\n                styleUrls: ['list-groups-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleCheckboxExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleCheckboxExample.ɵfac = function ListMultipleCheckboxExample_Factory(t) { return new (t || ListMultipleCheckboxExample)(); };\nListMultipleCheckboxExample.ɵcmp = i0.ɵɵdefineComponent({ type: ListMultipleCheckboxExample, selectors: [[\"list-multiple-checkbox-example\"]], decls: 24, vars: 2, consts: [[\"multiple\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2$1.NgControlStatus, i2$1.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleCheckboxExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-checkbox-example',\n                templateUrl: 'list-multiple-checkbox-example.html',\n                styleUrls: ['list-multiple-checkbox-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleKeyboardExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleKeyboardExample.ɵfac = function ListMultipleKeyboardExample_Factory(t) { return new (t || ListMultipleKeyboardExample)(); };\nListMultipleKeyboardExample.ɵcmp = i0.ɵɵdefineComponent({ type: ListMultipleKeyboardExample, selectors: [[\"list-multiple-keyboard-example\"]], decls: 24, vars: 2, consts: [[\"multiple\", \"keyboard\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2$1.NgControlStatus, i2$1.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleKeyboardExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-keyboard-example',\n                templateUrl: 'list-multiple-keyboard-example.html',\n                styleUrls: ['list-multiple-keyboard-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListOverviewExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListOverviewExample.ɵfac = function ListOverviewExample_Factory(t) { return new (t || ListOverviewExample)(); };\nListOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: ListOverviewExample, selectors: [[\"list-overview-example\"]], decls: 24, vars: 2, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2$1.NgControlStatus, i2$1.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-overview-example',\n                templateUrl: 'list-overview-example.html',\n                styleUrls: ['list-overview-example.css']\n            }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    ListOverviewExample,\n    ListMultipleCheckboxExample,\n    ListMultipleKeyboardExample,\n    ListGroupsExample\n];\nclass ListExamplesModule {\n}\nListExamplesModule.ɵfac = function ListExamplesModule_Factory(t) { return new (t || ListExamplesModule)(); };\nListExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: ListExamplesModule });\nListExamplesModule.ɵinj = i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McListModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ListExamplesModule, { declarations: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample], imports: [CommonModule,\n        FormsModule,\n        McListModule], exports: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McListModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ListExamplesModule, ListGroupsExample, ListMultipleCheckboxExample, ListMultipleKeyboardExample, ListOverviewExample };\n//# sourceMappingURL=ptsecurity-mosaic-examples-mosaic-list.js.map\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    PAGE_DOWN,\n    PAGE_UP,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    McLine,\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex,\n    MultipleMode,\n    McOptgroup\n} from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        class: 'mc-list-option mc-no-select',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n        '[class.mc-disabled]': 'disabled',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(focusin)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    @ViewChild('text', { static: false }) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after';\n\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     */\n    private inputsInitialized = false;\n\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this.selected && newValue !== this.value && this.inputsInitialized) {\n            this.selected = false;\n        }\n\n        this._value = newValue;\n    }\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        const listSelectionDisabled = this.listSelection && this.listSelection.disabled;\n        const groupDisabled = this.group && this.group.disabled;\n\n        return listSelectionDisabled || groupDisabled || this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngOnInit() {\n        const list = this.listSelection;\n\n        if (list._value && list._value.some((value) => list.compareWith(value, this._value))) {\n            this.setSelected(true);\n        }\n\n        const wasSelected = this._selected;\n\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this.changeDetector.markForCheck();\n            }\n        });\n\n        this.inputsInitialized = true;\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setSelectedOptionsByClick(\n            this, hasModifierKey($event, 'shiftKey'), hasModifierKey($event, 'ctrlKey')\n        );\n    }\n\n    focus() {\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n\n            this.onFocus.next({ option: this });\n\n            Promise.resolve().then(() => {\n                this.hasFocus = true;\n\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\n\nexport class McListSelectionBase {\n    constructor(public elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: `\n        <div [attr.tabindex]=\"tabIndex\"\n             (focus)=\"focus()\"\n             (blur)=\"blur()\">\n            <ng-content></ng-content>\n        </div>`,\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-list-selection',\n\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    @ContentChildren(McListOption, { descendants: true }) options: QueryList<McListOption>;\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    multipleMode: MultipleMode | null;\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    userTabIndex: number | null = null;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // tslint:disable-next-line:orthodox-getter-and-setter naming-convention\n    _value: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode\n    ) {\n        super(elementRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    @Input() compareWith: (o1: any, o2: any) => boolean = (a1, a2) => a1 === a2;\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this._value) {\n            this.setOptionsFromValues(this._value);\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOptionsByClick(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option);\n        } else {\n            this.selectionModel.toggle(option);\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptionsByKey(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else {\n            if (this.multipleMode === MultipleMode.KEYBOARD || !this.multiple) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptions(option: McListOption): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.options\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        this._value = values;\n\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n\n                break;\n\n            case TAB:\n                this.keyManager.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n\n                break;\n            default:\n                return;\n        }\n\n        event.preventDefault();\n\n        this.setSelectedOptionsByKey(\n            this.keyManager.activeItem as McListOption,\n            hasModifierKey(event, 'shiftKey'),\n            hasModifierKey(event, 'ctrlKey')\n        );\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            const value = this.getSelectedOptionValues();\n            this.onChange(value);\n            this._value = value;\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.userTabIndex || (this.options.length === 0 ? -1 : 0);\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList {}\n\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterContentInit() {\n        // tslint:disable-next-line:no-unused-expression\n        new McLineSetter(this.lines, this.elementRef);\n    }\n\n    handleFocus() {\n        this.elementRef.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this.elementRef.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McLineModule, McOptionModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule,\n        McOptionModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McOptionModule\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption\n    ]\n})\nexport class McListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}