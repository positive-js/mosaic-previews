{"version":3,"file":"node_modules_ptsecurity_mosaic-examples_fesm2020_ptsecurity-mosaic-examples-mosaic-modal_mjs.js","mappings":"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","sources":["./packages/mosaic/modal/modal.component.html","./packages/mosaic/modal/modal-control.service.ts","./packages/mosaic/modal/modal-ref.class.ts","./packages/mosaic/modal/modal-util.ts","./packages/mosaic/modal/modal.type.ts","./packages/mosaic/modal/modal.directive.ts","./packages/mosaic/modal/css-unit.pipe.ts","./packages/mosaic/modal/modal.component.ts","./packages/mosaic/modal/modal.service.ts","./packages/mosaic/modal/modal.module.ts","./packages/mosaic/modal/ptsecurity-mosaic-modal.ts","./node_modules/@ptsecurity/mosaic-examples/fesm2020/ptsecurity-mosaic-examples-mosaic-modal.mjs"],"sourcesContent":["<!-- Compatible: the <ng-content> can appear only once -->\n<ng-template #tplOriginContent>\n    <ng-content></ng-content>\n</ng-template>\n\n<div>\n    <div *ngIf=\"mcMask\"\n         class=\"mc-modal-mask\"\n         [ngClass]=\"maskAnimationClassMap\"\n         [class.mc-modal-mask-hidden]=\"hidden\"\n         [ngStyle]=\"mcMaskStyle\"\n         [style.zIndex]=\"mcZIndex\"\n    ></div>\n    <div (mousedown)=\"onClickMask($event)\"\n         class=\"mc-modal-wrap {{ mcWrapClassName }}\"\n         [style.zIndex]=\"mcZIndex\"\n         [style.display]=\"hidden ? 'none' : ''\"\n         tabindex=\"-1\">\n\n        <div #modalContainer\n             class=\"mc-modal {{ mcClassName }} mc-modal_{{ mcSize }}\"\n             [ngClass]=\"modalAnimationClassMap\"\n             [ngStyle]=\"mcStyle\"\n             [style.width]=\"mcWidth | toCssUnit\"\n             [style.transform-origin]=\"transformOrigin\">\n\n            <div class=\"mc-modal-content\" cdkTrapFocus>\n                <button *ngIf=\"mcClosable\"\n                        mc-button\n                        (click)=\"onClickCloseBtn()\"\n                        class=\"mc-modal-close mc-button_transparent\">\n                    <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" [color]=\"themePalette.Second\"></i>\n                </button>\n                <ng-container [ngSwitch]=\"true\">\n                    <ng-container *ngSwitchCase=\"isModalType('default')\"\n                                  [ngTemplateOutlet]=\"tplContentDefault\"></ng-container>\n                    <ng-container *ngSwitchCase=\"isModalType('confirm')\"\n                                  [ngTemplateOutlet]=\"tplContentConfirm\"></ng-container>\n                    <ng-container *ngSwitchCase=\"isModalType('custom')\"\n                                  [ngTemplateOutlet]=\"tplContentCustom\"></ng-container>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #tplContentCustom>\n    <ng-container #bodyContainer></ng-container>\n</ng-template>\n\n\n<!-- [Predefined] Default Modal Content -->\n<ng-template #tplContentDefault>\n    <div *ngIf=\"mcTitle\" class=\"mc-modal-header\" [class.mc-modal-body_top-overflow]=\"isTopOverflow\">\n        <div class=\"mc-modal-title\">\n            <ng-container [ngSwitch]=\"true\">\n                <ng-container *ngSwitchCase=\"isTemplateRef(mcTitle)\" [ngTemplateOutlet]=\"$any(mcTitle)\"></ng-container>\n                <ng-container *ngSwitchCase=\"isNonEmptyString(mcTitle)\">\n                    <div [innerHTML]=\"mcTitle\"></div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"mc-modal-body\" #modalBody [ngStyle]=\"mcBodyStyle\" (scroll)=\"checkOverflow()\">\n        <ng-container #bodyContainer>\n            <ng-container *ngIf=\"!isComponent(mcContent)\" [ngSwitch]=\"true\">\n                <ng-container *ngSwitchCase=\"isTemplateRef(mcContent)\" [ngTemplateOutlet]=\"$any(mcContent)\"></ng-container>\n                <ng-container *ngSwitchCase=\"isNonEmptyString(mcContent)\">\n                    <div [innerHTML]=\"mcContent\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div *ngIf=\"mcFooter || mcOkText || mcCancelText\" class=\"mc-modal-footer\" [class.mc-modal-body_bottom-overflow]=\"isBottomOverflow\">\n        <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"isTemplateRef(mcFooter)\" [ngTemplateOutlet]=\"$any(mcFooter)\"></ng-container>\n            <ng-container *ngSwitchCase=\"isNonEmptyString(mcFooter)\">\n                <div [innerHTML]=\"mcFooter\"></div>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"isModalButtons(mcFooter)\">\n                <ng-container *ngFor=\"let button of $any(mcFooter)\">\n                    <button\n                        mc-button\n                        #autoFocusedButton\n                        [attr.autofocus]=\"button.autoFocus\"\n                        [attr.mc-modal-main-action]=\"button.mcModalMainAction\"\n                        *ngIf=\"getButtonCallableProp(button, 'show')\"\n                        [disabled]=\"getButtonCallableProp(button, 'disabled')\"\n                        [class.mc-progress]=\"getButtonCallableProp(button, 'loading')\"\n                        (click)=\"onButtonClick(button)\"\n                        [color]=\"button.type\">\n                        {{ button.label }}\n                    </button>\n                </ng-container>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <button\n                    #autoFocusedButton\n                    [attr.autofocus]=\"true\"\n                    *ngIf=\"mcOkText\"\n                    mc-button\n                    [color]=\"themePalette.Primary\"\n                    (click)=\"onClickOkCancel('ok')\">\n\n                    {{ okText }}\n                </button>\n                <button *ngIf=\"mcCancelText\" mc-button (click)=\"onClickOkCancel('cancel')\">\n                    {{ cancelText }}\n                </button>\n            </ng-container>\n        </ng-container>\n    </div>\n</ng-template>\n<!-- /[Predefined] Default Modal Content -->\n\n<!-- [Predefined] Confirm Modal Content -->\n<ng-template #tplContentConfirm>\n    <div class=\"mc-modal-body\" [ngStyle]=\"mcBodyStyle\">\n        <div class=\"mc-confirm-body-wrapper\">\n            <div class=\"mc-confirm-body\">\n                <div class=\"mc-confirm-content\">\n                    <ng-container #bodyContainer>\n                        <ng-container *ngIf=\"!isComponent(mcContent)\" [ngSwitch]=\"true\">\n                            <ng-container *ngSwitchCase=\"isTemplateRef(mcContent)\"\n                                          [ngTemplateOutlet]=\"$any(mcContent)\">\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"isNonEmptyString(mcContent)\">\n                                <div [innerHTML]=\"mcContent\"></div>\n                            </ng-container>\n                            <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div> <!-- /.mc-confirm-body-wrapper -->\n    </div>\n    <div class=\"mc-confirm-btns\" *ngIf=\"mcOkText || mcCancelText\">\n        <button\n            mc-button\n            #autoFocusedButton\n            [color]=\"mcOkType\"\n            [attr.autofocus]=\"true\"\n            *ngIf=\"mcOkText\"\n            (click)=\"onClickOkCancel('ok')\">\n\n            {{ okText }}\n        </button>\n\n        <button mc-button [color]=\"themePalette.Second\" *ngIf=\"mcCancelText\" (click)=\"onClickOkCancel('cancel')\">\n            {{ cancelText }}\n        </button>\n    </div>\n</ng-template>\n<!-- /[Predefined] Confirm Modal Content -->\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalComponent } from '.';\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n\n            this.handleMultipleMasks(modalRef);\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n\n    private handleMultipleMasks(modalRef: McModalRef) {\n        const modals = Array.from(this.registeredMetaMap.values()).map((v) => v.modalRef) as McModalComponent[];\n\n        if (modals.filter((modal) => modal.mcVisible).length > 1) {\n            const otherModals = modals.splice(0, modals.length - 1)\n                .filter((modal) => modal.mcVisible && modal.mcMask);\n\n            // hide other masks\n            setTimeout(() => {\n                otherModals.forEach((modal) => {\n                    modal.getInstance().mcMask = false;\n                    modal.markForCheck();\n                });\n            });\n\n            // show other masks on close\n            modalRef.afterClose.subscribe(() => {\n                otherModals.forEach((modal) => {\n                    modal.getInstance().mcMask = true;\n                    modal.markForCheck();\n                });\n            });\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:naming-convention\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n\n    /**\n     * Call markForCheck for change detector\n     */\n    abstract markForCheck();\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport const modalUtilObject = new ModalUtil(document);\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { EventEmitter, TemplateRef, Type } from '@angular/core';\n\n\nexport type OnClickCallback<T> = ((instance: T) => (false | void | {}) | Promise<false | void | {}>);\n\n// Different modal styles we have supported\nexport type ModalType = 'default' | 'confirm' | 'custom';\n\n// Subtypes of Confirm Modal\nexport type ConfirmType = 'confirm' | 'success' | 'warn';\n\nexport enum ModalSize {\n    Small = 'small',\n    Normal = 'normal',\n    Large = 'large'\n}\n\n// Public options for using by service\nexport interface IModalOptions<T = any, R = any> {\n    mcModalType?: ModalType;\n    mcVisible?: boolean;\n    mcZIndex?: number;\n    mcWidth?: number | string;\n    mcSize?: ModalSize;\n    mcWrapClassName?: string;\n    mcClassName?: string;\n    mcStyle?: object;\n    mcTitle?: string | TemplateRef<{}>;\n    mcContent?: string | TemplateRef<{}> | Type<T>;\n    mcComponent?: Type<T>; // The instance of component opened into the dialog.\n    mcComponentParams?: Partial<T>;\n    mcClosable?: boolean;\n    mcMask?: boolean;\n    mcMaskClosable?: boolean;\n    mcMaskStyle?: object;\n    mcBodyStyle?: object;\n    mcFooter?: string | TemplateRef<{}> | IModalButtonOptions<T>[]; // Default Modal ONLY\n    mcGetContainer?: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) | null; // STATIC\n    mcAfterOpen?: EventEmitter<void>;\n    mcAfterClose?: EventEmitter<R>;\n    mcCloseByESC?: boolean;\n\n    // --- Predefined OK & Cancel buttons\n    mcOkText?: string;\n    mcOkType?: string;\n    mcOkLoading?: boolean;\n    mcOnOk?: EventEmitter<T> | OnClickCallback<T>;\n    mcCancelText?: string;\n    mcCancelLoading?: boolean;\n    mcOnCancel?: EventEmitter<T> | OnClickCallback<T>;\n}\n\n// tslint:disable-next-line:no-any\nexport interface IModalOptionsForService<T = any> extends IModalOptions<T> {\n    mcOnOk?: OnClickCallback<T>;\n    mcOnCancel?: OnClickCallback<T>;\n}\n\nexport interface IModalButtonOptions<T = any> {\n    label: string;\n    // tslint:disable-next-line\n    type?: string;\n    shape?: string;\n    ghost?: boolean;\n    size?: string;\n    // Default: true, indicate whether show loading automatically while onClick returned a Promise\n    autoLoading?: boolean;\n\n    // [NOTE] \"componentInstance\" will refer to the component's instance when using Component\n    show?: boolean | ((this: IModalButtonOptions<T>, contentComponentInstance?: T) => boolean);\n    loading?: boolean | ((this: IModalButtonOptions<T>, contentComponentInstance?: T) => boolean);\n    disabled?: boolean | ((this: IModalButtonOptions<T>, contentComponentInstance?: T) => boolean);\n\n    autoFocus?: boolean;\n    mcModalMainAction?: boolean;\n\n    onClick?(this: IModalButtonOptions<T>, contentComponentInstance?: T): (void | {}) | Promise<(void | {})>;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: `[mc-modal-title], mc-modal-title, [mcModalTitle]`,\n    host: {\n        class: 'mc-modal-header mc-modal-title'\n    }\n})\nexport class McModalTitle {}\n\n@Directive({\n    selector: `[mc-modal-body], mc-modal-body, [mcModalBody]`,\n    host: {\n        class: 'mc-modal-body'\n    }\n})\nexport class McModalBody {}\n\n@Directive({\n    selector: `[mc-modal-footer], mc-modal-footer, [mcModalFooter]`,\n    host: {\n        class: 'mc-modal-footer'\n    }\n})\nexport class McModalFooter {}\n\n@Directive({\n    selector: `[mc-modal-main-action]`\n})\nexport class McModalMainAction {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE, ENTER } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { modalUtilObject as ModalUtil } from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalSize, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    themePalette = ThemePalette;\n\n    @Input() mcModalType: ModalType = 'default';\n\n    // The instance of component opened into the dialog.\n    @Input() mcComponent: Type<T>;\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    private _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string;\n    @Input() mcSize: ModalSize = ModalSize.Normal;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    private _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    private _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    private _mcMaskClosable = false;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    private _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    private _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef, static: false }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChildren('autoFocusedButton', { read: ElementRef }) autoFocusedButtons: QueryList<ElementRef>;\n\n    @ViewChild('modalBody') modalBody: ElementRef;\n\n    isTopOverflow: boolean = false;\n    isBottomOverflow: boolean = false;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any\n    ) {\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        if (this.isComponent(this.mcComponent)) {\n            this.createDynamicComponent(this.mcComponent);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n        this.getElement().getElementsByTagName('button')[0]?.focus();\n\n        for (const autoFocusedButton of this.autoFocusedButtons.toArray()) {\n            if (autoFocusedButton.nativeElement.autofocus) {\n                (autoFocusedButton.nativeElement as HTMLButtonElement).focus();\n\n                break;\n            }\n        }\n\n        this.checkOverflow();\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    checkOverflow(): void {\n        const nativeElement = this.modalBody?.nativeElement;\n\n        if (!nativeElement) { return; }\n\n        const scrollTop: number = nativeElement.scrollTop;\n        const offsetHeight: number = nativeElement.offsetHeight;\n        const scrollHeight: number = nativeElement.scrollHeight;\n\n        this.isTopOverflow = scrollTop > 0;\n\n        this.isBottomOverflow = (scrollTop as number + offsetHeight as number) < scrollHeight;\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    markForCheck() {\n        this.changeDetector.markForCheck();\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    getMcFooter(): HTMLElement {\n        return this.getElement().getElementsByClassName('mc-modal-footer').item(0) as HTMLElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line: no-reserved-keywords\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        // tslint:disable-next-line:deprecation .key isn't supported in Edge\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n        // tslint:disable-next-line:deprecation .key isn't supported in Edge\n        if (event.ctrlKey && event.keyCode === ENTER) {\n            if (this.mcModalType === 'confirm') {\n                this.triggerOk();\n            }\n\n            (this.getElement().querySelector('[mc-modal-main-action]') as HTMLElement)?.click();\n\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line: no-reserved-keywords\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        // tslint:disable-next-line:no-inferred-empty-object-type  rule seems to be broken\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => {\n            return window.setTimeout(\n                () => {\n                    this.changeAnimationState(null);\n                    resolve(null);\n                },\n                MODAL_ANIMATE_DURATION\n            );\n        });\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.injector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line: no-unbound-method\n    return !!obj &&\n        (typeof obj === 'object' || typeof obj === 'function') &&\n        typeof (obj as Promise<{}>).then === 'function' &&\n        typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable } from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                // tslint:disable-next-line:deprecation replacement .key isn't supported in Edge\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService\n    ) {}\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            options.mcCancelText = undefined;\n        }\n        // Remove the Ok button if the user not specify a Ok button\n        if (!('mcOkText' in options)) {\n            options.mcOkText = undefined;\n        }\n        // Remove the footer if the user not specify a footer\n        if (!('mcFooter' in options)) {\n            options.mcFooter = undefined;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n\n        return this.create(options);\n    }\n\n    open<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        options.mcModalType = 'custom';\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    // tslint:disable-next-line: no-reserved-keywords\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        return this.confirm(options, confirmType);\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalBody, McModalFooter, McModalTitle, McModalMainAction } from './modal.directive';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        A11yModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter,\n        McModalMainAction\n    ],\n    declarations: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter,\n        CssUnitPipe,\n        McModalMainAction\n    ],\n    providers: [\n        McModalControlService,\n        McModalService\n    ],\n    entryComponents: [McModalComponent]\n})\nexport class McModalModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewChild, Input, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport * as i2 from '@ptsecurity/mosaic/button';\nimport { McButton, McButtonModule } from '@ptsecurity/mosaic/button';\nimport { ThemePalette, McFormsModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McInputModule } from '@ptsecurity/mosaic/input';\nimport * as i1 from '@ptsecurity/mosaic/modal';\nimport { ModalSize, McModalModule } from '@ptsecurity/mosaic/modal';\n\n// tslint:disable:no-console\nconst _c0$4 = [\"modalButton\"];\n/**\n * @title Component Modal\n */\nclass ModalComponentExample {\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    openModal() {\n        this.componentModal = this.modalService.open({\n            mcComponent: McModalCustomComponent,\n            mcComponentParams: {\n                title: 'Title',\n                subtitle: 'Subtitle'\n            }\n        });\n        this.componentModal.afterOpen.subscribe(() => {\n            console.log('[afterOpen] emitted!');\n        });\n        this.componentModal.afterClose.subscribe((action) => {\n            this.modalButton.focusViaKeyboard();\n            console.log(`[afterClose] emitted, chosen action: ${action}`);\n        });\n    }\n}\nModalComponentExample.ɵfac = function ModalComponentExample_Factory(t) { return new (t || ModalComponentExample)(i0.ɵɵdirectiveInject(i1.McModalService)); };\nModalComponentExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModalComponentExample, selectors: [[\"modal-component-example\"]], viewQuery: function ModalComponentExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$4, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalButton = _t.first);\n    } }, decls: 3, vars: 0, consts: [[\"mc-button\", \"\", 3, \"click\"], [\"modalButton\", \"\"]], template: function ModalComponentExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"click\", function ModalComponentExample_Template_button_click_0_listener() { return ctx.openModal(); });\n        i0.ɵɵtext(2, \"Open Modal\");\n        i0.ɵɵelementEnd();\n    } }, directives: [i2.McButton, i2.McButtonCssStyler], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalComponentExample, [{\n        type: Component,\n        args: [{ selector: 'modal-component-example', template: \"<button #modalButton mc-button (click)=\\\"openModal()\\\">Open Modal</button>\\n\", styles: [\"\"] }]\n    }], function () { return [{ type: i1.McModalService }]; }, { modalButton: [{\n            type: ViewChild,\n            args: ['modalButton']\n        }] }); })();\nclass McModalCustomComponent {\n    constructor(modal) {\n        this.modal = modal;\n        this.themePalette = ThemePalette;\n    }\n    destroyModal(action) {\n        this.modal.destroy(action);\n    }\n}\nMcModalCustomComponent.ɵfac = function McModalCustomComponent_Factory(t) { return new (t || McModalCustomComponent)(i0.ɵɵdirectiveInject(i1.McModalRef)); };\nMcModalCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: McModalCustomComponent, selectors: [[\"mc-modal-full-custom-component\"]], inputs: { title: \"title\", subtitle: \"subtitle\" }, decls: 17, vars: 4, consts: [[\"mc-button\", \"\", 3, \"color\", \"click\"], [\"mc-modal-footer\", \"\"], [\"mc-button\", \"\", \"autofocus\", \"\", 3, \"click\"]], template: function McModalCustomComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-modal-title\");\n        i0.ɵɵtext(1, \" Modal Title \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mc-modal-body\");\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h4\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9, \"Get Modal instance in component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function McModalCustomComponent_Template_button_click_10_listener() { return ctx.destroyModal(\"close\"); });\n        i0.ɵɵtext(11, \"destroy modal in the component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 1);\n        i0.ɵɵelementStart(13, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function McModalCustomComponent_Template_button_click_13_listener() { return ctx.destroyModal(\"save\"); });\n        i0.ɵɵtext(14, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function McModalCustomComponent_Template_button_click_15_listener() { return ctx.destroyModal(\"close\"); });\n        i0.ɵɵtext(16, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.subtitle);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"color\", ctx.themePalette.Primary);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", ctx.themePalette.Primary);\n    } }, directives: [i1.McModalTitle, i1.McModalBody, i2.McButton, i2.McButtonCssStyler, i1.McModalFooter], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(McModalCustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mc-modal-full-custom-component',\n                template: `\n        <mc-modal-title>\n            Modal Title\n        </mc-modal-title>\n\n        <mc-modal-body>\n            <h2>{{ title }}</h2>\n            <h4>{{ subtitle }}</h4>\n            <p>\n                <span>Get Modal instance in component</span>\n                <button mc-button [color]=\"themePalette.Primary\" (click)=\"destroyModal('close')\">destroy modal in the component</button>\n            </p>\n        </mc-modal-body>\n\n        <div mc-modal-footer>\n            <button mc-button [color]=\"themePalette.Primary\" (click)=\"destroyModal('save')\">Save</button>\n            <button mc-button autofocus (click)=\"destroyModal('close')\">Close</button>\n        </div>\n  `\n            }]\n    }], function () { return [{ type: i1.McModalRef }]; }, { title: [{\n            type: Input\n        }], subtitle: [{\n            type: Input\n        }] }); })();\n\n// tslint:disable:no-console\n/**\n * @title Multiple Modal\n */\nclass ModalMultipleExample {\n    // use modalService to prevent multiple overlaid masks\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    showConfirmModal() {\n        const modalRef = this.modalService.confirm({\n            mcSize: ModalSize.Normal,\n            mcBodyStyle: { height: '120px' },\n            mcMaskClosable: true,\n            mcContent: 'Save changes?',\n            mcOkText: 'Save',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('OK')\n        });\n        modalRef.afterClose.subscribe(() => this.modalButton.focusViaKeyboard());\n        this.showSuccessModal();\n    }\n    showSuccessModal() {\n        this.modalService.success({\n            mcSize: ModalSize.Small,\n            mcMaskClosable: true,\n            mcContent: 'All changes are saved!',\n            mcOkText: 'ОК',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('OK')\n        });\n    }\n}\nModalMultipleExample.ɵfac = function ModalMultipleExample_Factory(t) { return new (t || ModalMultipleExample)(i0.ɵɵdirectiveInject(i1.McModalService)); };\nModalMultipleExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModalMultipleExample, selectors: [[\"modal-multiple-example\"]], viewQuery: function ModalMultipleExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(McButton, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalButton = _t.first);\n    } }, decls: 3, vars: 0, consts: [[1, \"example-container\"], [\"mc-button\", \"\", 3, \"click\"]], template: function ModalMultipleExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ModalMultipleExample_Template_button_click_1_listener() { return ctx.showConfirmModal(); });\n        i0.ɵɵtext(2, \"Open two modals\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } }, directives: [i2.McButton, i2.McButtonCssStyler], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalMultipleExample, [{\n        type: Component,\n        args: [{ selector: 'modal-multiple-example', template: \"<div class=\\\"example-container\\\">\\n    <button mc-button (click)=\\\"showConfirmModal()\\\">Open two modals</button>\\n</div>\\n\", styles: [\"\"] }]\n    }], function () { return [{ type: i1.McModalService }]; }, { modalButton: [{\n            type: ViewChild,\n            args: [McButton]\n        }] }); })();\n\n// tslint:disable:no-console\nconst _c0$3 = [\"confirm\"];\nconst _c1$1 = [\"success\"];\nconst _c2$1 = [\"delete\"];\n/**\n * @title Basic Modal\n */\nclass ModalOverviewExample {\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    showConfirmModal() {\n        const modalRef = this.modalService.confirm({\n            mcSize: ModalSize.Small,\n            mcMaskClosable: true,\n            mcContent: 'Save changes?',\n            mcOkText: 'Save',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('OK')\n        });\n        modalRef.afterClose.subscribe(() => this.confirmModal.focusViaKeyboard());\n    }\n    showSuccessModal() {\n        const modalRef = this.modalService.success({\n            mcSize: ModalSize.Small,\n            mcMaskClosable: true,\n            mcContent: 'All changes are saved!',\n            mcOkText: 'ОК',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('OK')\n        });\n        modalRef.afterClose.subscribe(() => this.successModal.focusViaKeyboard());\n    }\n    showDeleteModal() {\n        const modalRef = this.modalService.delete({\n            mcContent: 'The tasks, policies and tags associated with the customer will be deleted too. Delete selected customer?',\n            mcOkText: 'Delete',\n            mcCancelText: 'Cancel',\n            mcWidth: '480px',\n            mcMaskClosable: true,\n            mcOnOk: () => console.log('Delete'),\n            mcOnCancel: () => console.log('Cancel')\n        });\n        modalRef.afterClose.subscribe(() => this.deleteModal.focusViaKeyboard());\n    }\n}\nModalOverviewExample.ɵfac = function ModalOverviewExample_Factory(t) { return new (t || ModalOverviewExample)(i0.ɵɵdirectiveInject(i1.McModalService)); };\nModalOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModalOverviewExample, selectors: [[\"modal-overview-example\"]], viewQuery: function ModalOverviewExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$3, 5);\n        i0.ɵɵviewQuery(_c1$1, 5);\n        i0.ɵɵviewQuery(_c2$1, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.confirmModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.successModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteModal = _t.first);\n    } }, decls: 10, vars: 0, consts: [[1, \"example-container\"], [\"mc-button\", \"\", 3, \"click\"], [\"confirm\", \"\"], [\"success\", \"\"], [\"delete\", \"\"]], template: function ModalOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1, 2);\n        i0.ɵɵlistener(\"click\", function ModalOverviewExample_Template_button_click_1_listener() { return ctx.showConfirmModal(); });\n        i0.ɵɵtext(3, \"Open Confirm Modal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 1, 3);\n        i0.ɵɵlistener(\"click\", function ModalOverviewExample_Template_button_click_4_listener() { return ctx.showSuccessModal(); });\n        i0.ɵɵtext(6, \"Open Success Modal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 1, 4);\n        i0.ɵɵlistener(\"click\", function ModalOverviewExample_Template_button_click_7_listener() { return ctx.showDeleteModal(); });\n        i0.ɵɵtext(9, \"Open Delete Modal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } }, directives: [i2.McButton, i2.McButtonCssStyler], styles: [\".example-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:200px}.example-container[_ngcontent-%COMP%] > .mc-button[_ngcontent-%COMP%]{margin-bottom:16px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalOverviewExample, [{\n        type: Component,\n        args: [{ selector: 'modal-overview-example', template: \"<div class=\\\"example-container\\\">\\n    <button #confirm mc-button (click)=\\\"showConfirmModal()\\\">Open Confirm Modal</button>\\n\\n    <button #success mc-button (click)=\\\"showSuccessModal()\\\">Open Success Modal</button>\\n\\n    <button #delete mc-button (click)=\\\"showDeleteModal()\\\">Open Delete Modal</button>\\n</div>\\n\", styles: [\".example-container{display:flex;flex-direction:column;width:200px}.example-container>.mc-button{margin-bottom:16px}\\n\"] }]\n    }], function () { return [{ type: i1.McModalService }]; }, { confirmModal: [{\n            type: ViewChild,\n            args: ['confirm']\n        }], successModal: [{\n            type: ViewChild,\n            args: ['success']\n        }], deleteModal: [{\n            type: ViewChild,\n            args: ['delete']\n        }] }); })();\n\nfunction McLongComponent_p_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1);\n} }\nconst _c0$2 = [\"modalButton\"];\nclass McLongComponent {\n    constructor() {\n        this.longText = [];\n        // tslint:disable-next-line:no-magic-numbers\n        for (let i = 0; i < 50; i++) {\n            this.longText.push(`text lint - ${i}`);\n        }\n    }\n}\nMcLongComponent.ɵfac = function McLongComponent_Factory(t) { return new (t || McLongComponent)(); };\nMcLongComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: McLongComponent, selectors: [[\"mc-long-component\"]], decls: 1, vars: 1, consts: [[4, \"ngFor\", \"ngForOf\"]], template: function McLongComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, McLongComponent_p_0_Template, 2, 1, \"p\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.longText);\n    } }, directives: [i1$1.NgForOf], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(McLongComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mc-long-component',\n                template: `\n        <p *ngFor=\"let item of longText\">{{ item }}</p>\n    `\n            }]\n    }], function () { return []; }, null); })();\n/**\n * @title Component Modal Scroll\n */\nclass ModalScrollExample {\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    createLongModal() {\n        const modalRef = this.modalService.create({\n            mcSize: ModalSize.Small,\n            mcTitle: 'Modal Title',\n            mcContent: McLongComponent,\n            mcOkText: 'Yes',\n            mcCancelText: 'No'\n        });\n        modalRef.afterClose.subscribe(() => this.modalButton.focusViaKeyboard());\n    }\n}\nModalScrollExample.ɵfac = function ModalScrollExample_Factory(t) { return new (t || ModalScrollExample)(i0.ɵɵdirectiveInject(i1.McModalService)); };\nModalScrollExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModalScrollExample, selectors: [[\"modal-scroll-example\"]], viewQuery: function ModalScrollExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$2, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalButton = _t.first);\n    } }, decls: 3, vars: 0, consts: [[\"mc-button\", \"\", 3, \"click\"], [\"modalButton\", \"\"]], template: function ModalScrollExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"click\", function ModalScrollExample_Template_button_click_0_listener() { return ctx.createLongModal(); });\n        i0.ɵɵtext(2, \"Open Modal\");\n        i0.ɵɵelementEnd();\n    } }, directives: [i2.McButton, i2.McButtonCssStyler], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalScrollExample, [{\n        type: Component,\n        args: [{ selector: 'modal-scroll-example', template: `<button #modalButton mc-button (click)=\"createLongModal()\">Open Modal</button>`, styles: [\"\"] }]\n    }], function () { return [{ type: i1.McModalService }]; }, { modalButton: [{\n            type: ViewChild,\n            args: ['modalButton']\n        }] }); })();\n\n// tslint:disable:no-console\nconst _c0$1 = [\"small\"];\nconst _c1 = [\"default\"];\nconst _c2 = [\"large\"];\nconst _c3 = [\"custom\"];\n/**\n * @title Sizes Modal\n */\nclass ModalSizesExample {\n    constructor(modalService) {\n        this.modalService = modalService;\n    }\n    showSmallModal() {\n        const modalRef = this.modalService.confirm({\n            mcSize: ModalSize.Small,\n            mcContent: 'Save changes?',\n            mcOkText: 'Save',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('OK')\n        });\n        modalRef.afterClose.subscribe(() => this.smallButton.focusViaKeyboard());\n    }\n    showDefaultModal() {\n        const modalRef = this.modalService.confirm({\n            mcContent: 'Save changes?',\n            mcOkText: 'Save',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('OK')\n        });\n        modalRef.afterClose.subscribe(() => this.defaultButton.focusViaKeyboard());\n    }\n    showLargeModal() {\n        const modalRef = this.modalService.confirm({\n            mcSize: ModalSize.Large,\n            mcContent: 'Save changes?',\n            mcOkText: 'Save',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('Delete'),\n            mcOnCancel: () => console.log('Cancel')\n        });\n        modalRef.afterClose.subscribe(() => this.largeButton.focusViaKeyboard());\n    }\n    showCustomModal() {\n        const modalRef = this.modalService.confirm({\n            mcWidth: '600px',\n            mcContent: 'Save changes?',\n            mcOkText: 'Save',\n            mcCancelText: 'Cancel',\n            mcOnOk: () => console.log('Delete'),\n            mcOnCancel: () => console.log('Cancel')\n        });\n        modalRef.afterClose.subscribe(() => this.customButton.focusViaKeyboard());\n    }\n}\nModalSizesExample.ɵfac = function ModalSizesExample_Factory(t) { return new (t || ModalSizesExample)(i0.ɵɵdirectiveInject(i1.McModalService)); };\nModalSizesExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModalSizesExample, selectors: [[\"modal-sizes-example\"]], viewQuery: function ModalSizesExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$1, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.smallButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.largeButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customButton = _t.first);\n    } }, decls: 13, vars: 0, consts: [[1, \"example-container\"], [\"mc-button\", \"\", 3, \"click\"], [\"small\", \"\"], [\"default\", \"\"], [\"large\", \"\"], [\"custom\", \"\"]], template: function ModalSizesExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1, 2);\n        i0.ɵɵlistener(\"click\", function ModalSizesExample_Template_button_click_1_listener() { return ctx.showSmallModal(); });\n        i0.ɵɵtext(3, \"Small\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 1, 3);\n        i0.ɵɵlistener(\"click\", function ModalSizesExample_Template_button_click_4_listener() { return ctx.showDefaultModal(); });\n        i0.ɵɵtext(6, \"Default\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 1, 4);\n        i0.ɵɵlistener(\"click\", function ModalSizesExample_Template_button_click_7_listener() { return ctx.showLargeModal(); });\n        i0.ɵɵtext(9, \"Large\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 1, 5);\n        i0.ɵɵlistener(\"click\", function ModalSizesExample_Template_button_click_10_listener() { return ctx.showCustomModal(); });\n        i0.ɵɵtext(12, \"Custom width\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } }, directives: [i2.McButton, i2.McButtonCssStyler], styles: [\".example-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:200px}.example-container[_ngcontent-%COMP%] > .mc-button[_ngcontent-%COMP%]{margin-bottom:16px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalSizesExample, [{\n        type: Component,\n        args: [{ selector: 'modal-sizes-example', template: \"<div class=\\\"example-container\\\">\\n    <button #small mc-button (click)=\\\"showSmallModal()\\\">Small</button>\\n\\n    <button #default mc-button (click)=\\\"showDefaultModal()\\\">Default</button>\\n\\n    <button #large mc-button (click)=\\\"showLargeModal()\\\">Large</button>\\n\\n    <button #custom mc-button (click)=\\\"showCustomModal()\\\">Custom width</button>\\n</div>\\n\", styles: [\".example-container{display:flex;flex-direction:column;width:200px}.example-container>.mc-button{margin-bottom:16px}\\n\"] }]\n    }], function () { return [{ type: i1.McModalService }]; }, { smallButton: [{\n            type: ViewChild,\n            args: ['small']\n        }], defaultButton: [{\n            type: ViewChild,\n            args: ['default']\n        }], largeButton: [{\n            type: ViewChild,\n            args: ['large']\n        }], customButton: [{\n            type: ViewChild,\n            args: ['custom']\n        }] }); })();\n\n// tslint:disable:no-console\nconst _c0 = [\"modalButton\"];\nfunction ModalTemplateExample_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043E\\u043A\\u043D\\u0430\");\n    i0.ɵɵelementEnd();\n} }\nfunction ModalTemplateExample_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵtext(0, \" \\u041A\\u0438\\u0431\\u0435\\u0440\\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u0441\\u0442\\u044C \\u0441\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F \\u2014 \\u044D\\u0442\\u043E \\u0446\\u0435\\u043B\\u043E\\u0435 \\u043D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0445 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0439, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0435 \\u0437\\u0430\\u0442\\u0440\\u0430\\u0433\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438 \\u0432\\u0441\\u0435 \\u0441\\u0444\\u0435\\u0440\\u044B \\u0436\\u0438\\u0437\\u043D\\u0438 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430.\\n\");\n} }\nfunction ModalTemplateExample_ng_template_7_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ModalTemplateExample_ng_template_7_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.destroyTplModal(); });\n    i0.ɵɵtext(2, \"\\u0414\\u043E\\u043F. \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ModalTemplateExample_ng_template_7_Template_button_click_3_listener() { i0.ɵɵrestoreView(_r8); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.destroyTplModal(); });\n    i0.ɵɵtext(4, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ModalTemplateExample_ng_template_7_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r8); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.destroyTplModal(); });\n    i0.ɵɵtext(6, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r6.themePalette.Second);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r6.themePalette.Primary);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r6.themePalette.Second);\n} }\n/**\n * @title Template Modal\n */\nclass ModalTemplateExample {\n    constructor(modalService) {\n        this.modalService = modalService;\n        this.themePalette = ThemePalette;\n    }\n    createTplModal(tplTitle, tplContent, tplFooter) {\n        this.tplModal = this.modalService.create({\n            mcTitle: tplTitle,\n            mcContent: tplContent,\n            mcFooter: tplFooter,\n            mcOnOk: () => console.log('Click ok')\n        });\n        this.tplModal.afterClose.subscribe(() => this.modalButton.focusViaKeyboard());\n    }\n    destroyTplModal() {\n        this.tplModal.triggerOk();\n        this.tplModal.destroy();\n    }\n}\nModalTemplateExample.ɵfac = function ModalTemplateExample_Factory(t) { return new (t || ModalTemplateExample)(i0.ɵɵdirectiveInject(i1.McModalService)); };\nModalTemplateExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ModalTemplateExample, selectors: [[\"modal-template-example\"]], viewQuery: function ModalTemplateExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalButton = _t.first);\n    } }, decls: 9, vars: 0, consts: [[\"mc-button\", \"\", 1, \"modal-example-button\", 3, \"click\"], [\"modalButton\", \"\"], [\"tplTitle\", \"\"], [\"tplContent\", \"\"], [\"tplFooter\", \"\"], [1, \"buttons-container\"], [\"mc-button\", \"\", \"mc-modal-main-action\", \"\", 3, \"color\", \"click\"]], template: function ModalTemplateExample_Template(rf, ctx) { if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"click\", function ModalTemplateExample_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r11); const _r1 = i0.ɵɵreference(4); const _r3 = i0.ɵɵreference(6); const _r5 = i0.ɵɵreference(8); return ctx.createTplModal(_r1, _r3, _r5); });\n        i0.ɵɵtext(2, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ModalTemplateExample_ng_template_3_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(5, ModalTemplateExample_ng_template_5_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(7, ModalTemplateExample_ng_template_7_Template, 7, 3, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    } }, directives: [i2.McButton, i2.McButtonCssStyler, i1.McModalMainAction], styles: [\".buttons-container[_ngcontent-%COMP%]{display:flex}button[_ngcontent-%COMP%]:first-child{margin-right:auto}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalTemplateExample, [{\n        type: Component,\n        args: [{ selector: 'modal-template-example', template: \"<button #modalButton mc-button class=\\\"modal-example-button\\\" (click)=\\\"createTplModal(tplTitle, tplContent, tplFooter)\\\">Delete</button>\\n\\n<ng-template #tplTitle>\\n    <span>\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043E\\u043A\\u043D\\u0430</span>\\n</ng-template>\\n<ng-template #tplContent>\\n    \\u041A\\u0438\\u0431\\u0435\\u0440\\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u0441\\u0442\\u044C \\u0441\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F \\u2014 \\u044D\\u0442\\u043E \\u0446\\u0435\\u043B\\u043E\\u0435 \\u043D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0445 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0439, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0435 \\u0437\\u0430\\u0442\\u0440\\u0430\\u0433\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438 \\u0432\\u0441\\u0435 \\u0441\\u0444\\u0435\\u0440\\u044B \\u0436\\u0438\\u0437\\u043D\\u0438 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430.\\n</ng-template>\\n<ng-template #tplFooter>\\n    <div class=\\\"buttons-container\\\">\\n        <button mc-button mc-modal-main-action [color]=\\\"themePalette.Second\\\" (click)=\\\"destroyTplModal()\\\">\\u0414\\u043E\\u043F. \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435</button>\\n        <button mc-button mc-modal-main-action [color]=\\\"themePalette.Primary\\\" (click)=\\\"destroyTplModal()\\\">\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C</button>\\n        <button mc-button mc-modal-main-action [color]=\\\"themePalette.Second\\\" (click)=\\\"destroyTplModal()\\\">\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430</button>\\n    </div>\\n</ng-template>\\n\", styles: [\".buttons-container{display:flex}button:first-child{margin-right:auto}\\n\"] }]\n    }], function () { return [{ type: i1.McModalService }]; }, { modalButton: [{\n            type: ViewChild,\n            args: ['modalButton']\n        }] }); })();\n\nconst EXAMPLES = [\n    ModalOverviewExample,\n    ModalComponentExample,\n    McModalCustomComponent,\n    ModalTemplateExample,\n    ModalScrollExample,\n    McLongComponent,\n    ModalSizesExample,\n    ModalMultipleExample\n];\nclass ModalExamplesModule {\n}\nModalExamplesModule.ɵfac = function ModalExamplesModule_Factory(t) { return new (t || ModalExamplesModule)(); };\nModalExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ModalExamplesModule });\nModalExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McButtonModule,\n            McModalModule,\n            McIconModule,\n            McInputModule,\n            McFormFieldModule,\n            McFormsModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ModalExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McButtonModule,\n                    McModalModule,\n                    McIconModule,\n                    McInputModule,\n                    McFormFieldModule,\n                    McFormsModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ModalExamplesModule, { declarations: [ModalOverviewExample,\n        ModalComponentExample,\n        McModalCustomComponent,\n        ModalTemplateExample,\n        ModalScrollExample,\n        McLongComponent,\n        ModalSizesExample,\n        ModalMultipleExample], imports: [CommonModule,\n        FormsModule,\n        McButtonModule,\n        McModalModule,\n        McIconModule,\n        McInputModule,\n        McFormFieldModule,\n        McFormsModule], exports: [ModalOverviewExample,\n        ModalComponentExample,\n        McModalCustomComponent,\n        ModalTemplateExample,\n        ModalScrollExample,\n        McLongComponent,\n        ModalSizesExample,\n        ModalMultipleExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { McLongComponent, McModalCustomComponent, ModalComponentExample, ModalExamplesModule, ModalMultipleExample, ModalOverviewExample, ModalScrollExample, ModalSizesExample, ModalTemplateExample };\n"],"names":["McModalControlService","constructor","parentService","Subject","Map","afterAllClose","rootAfterAllClose","openModals","rootOpenModals","registeredMetaMap","rootRegisteredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","handleMultipleMasks","has","closeAll","i","length","close","index","indexOf","splice","next","modals","Array","from","values","map","v","filter","modal","mcVisible","otherModals","mcMask","setTimeout","forEach","getInstance","markForCheck","Injectable","decorators","Optional","SkipSelf","McModalRef","ModalUtil","document","lastPosition","x","y","listenDocumentClick","getLastClickPosition","addEventListener","event","clientX","clientY","modalUtilObject","ModalSize","McModalTitle","Directive","selector","host","class","McModalBody","McModalFooter","McModalMainAction","CssUnitPipe","transform","value","defaultUnit","formatted","isNaN","Pipe","name","MODAL_ANIMATE_DURATION","McModalComponent","overlay","renderer","cfr","elementRef","viewContainer","modalControl","changeDetector","ThemePalette","EventEmitter","Normal","create","_mcVisible","mcClosable","_mcClosable","_mcMask","mcMaskClosable","_mcMaskClosable","mcOkLoading","_mcOkLoading","mcCancelLoading","_mcCancelLoading","mcAfterOpen","asObservable","mcAfterClose","okText","mcOkText","cancelText","mcCancelText","hidden","animationState","ngOnInit","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","mcComponent","container","mcGetContainer","HTMLElement","appendChild","nativeElement","OverlayRef","overlayElement","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","getElement","getElementsByTagName","focus","autoFocusedButton","autoFocusedButtons","toArray","autofocus","checkOverflow","ngOnDestroy","dispose","modalBody","scrollTop","offsetHeight","scrollHeight","isTopOverflow","isBottomOverflow","open","changeVisibleFromInside","result","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","instance","getMcFooter","getElementsByClassName","item","onClickMask","$event","target","classList","contains","isModalType","type","mcModalType","onKeyDown","keyCode","ESCAPE","preventDefault","ctrlKey","ENTER","querySelector","click","onClickCloseBtn","trigger","ok","mcOnOk","cancel","mcOnCancel","loadingKey","emit","caseClose","doClose","isPromise","handleThen","then","catch","isNonEmptyString","isTemplateRef","TemplateRef","Type","isArray","getButtonCallableProp","options","prop","args","apply","onButtonClick","button","loading","visible","animation","closeResult","changeBodyOverflow","Promise","resolve","animateTo","mcVisibleChange","changeAnimationState","state","maskAnimationClassMap","modalAnimationClassMap","changeDetectorRef","isVisible","window","updateTransformOrigin","buttons","size","autoLoading","show","disabled","component","factory","resolveComponentFactory","childInjector","Injector","providers","provide","useValue","parent","injector","mcComponentParams","Object","assign","detectChanges","modalElement","modalContainer","transformOrigin","offsetLeft","offsetTop","plusNum","setStyle","body","removeStyle","i1","DOCUMENT","ViewContainerRef","ElementRef","i5","Component","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","template","styles","Inject","Input","Output","mcZIndex","mcWidth","mcSize","mcWrapClassName","mcClassName","mcStyle","mcTitle","mcCloseByESC","mcMaskStyle","mcBodyStyle","mcOkType","ViewChild","static","read","ViewChildren","obj","ModalBuilderForService","createModal","undefined","changeProps","destroyModal","overlayRef","keydownEvents","pipe","attach","ComponentPortal","McModalService","confirm","confirmType","console","warn","success","simpleConfirm","delete","McModalModule","CommonModule","OverlayModule","A11yModule","McButtonModule","McIconModule","NgModule","imports","exports","declarations","entryComponents"],"sourceRoot":"webpack:///"}