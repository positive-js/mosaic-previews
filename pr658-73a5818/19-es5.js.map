{"version":3,"sources":["webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-tree-select.js","webpack:///dist/packages/mosaic/tree-select/tree-select.component.ts","webpack:///dist/packages/mosaic/tree-select/tree-select.module.ts","webpack:///dist/packages/mosaic/tree-select/ptsecurity-mosaic-tree-select.ts"],"names":["TreeSelectMultipleOverviewExample_mc_tree_option_3_Template","rf","ctx","node_r3","$implicit","ctx_r0","treeControl","getViewValue","TreeSelectMultipleOverviewExample_mc_tree_option_4_Template","node_r4","ctx_r1","isExpanded","FileNode$1","FileFlatNode$1","buildFileTree$1","value","level","data","Object","keys","k","v","node","name","undefined","children","type","push","DATA_OBJECT$1","docs","src","cdk","a11ly","documentation","source","tools","mosaic","autocomplete","button","index","version","alert","badge","README","wallabyTest","scripts","deploy","tests","TreeSelectMultipleOverviewExample","selected","transformer","parent","flatNode","expandable","getLevel","isExpandable","getChildren","getValue","treeFlattener","dataSource","_","nodeData","ɵfac","TreeSelectMultipleOverviewExample_Factory","t","ɵcmp","selectors","decls","vars","consts","template","TreeSelectMultipleOverviewExample_Template","TreeSelectMultipleOverviewExample_Template_mc_tree_select_ngModelChange_1_listener","$event","hasChild","directives","styles","ngDevMode","args","selector","templateUrl","styleUrls","TreeSelectOverviewExample_mc_tree_option_3_Template","TreeSelectOverviewExample_mc_tree_option_4_Template","FileNode","FileFlatNode","buildFileTree","DATA_OBJECT","TreeSelectOverviewExample","TreeSelectOverviewExample_Factory","TreeSelectOverviewExample_Template","TreeSelectOverviewExample_Template_mc_tree_select_ngModelChange_1_listener","EXAMPLES","TreeSelectExamplesModule","TreeSelectExamplesModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","nextUniqueId","McTreeSelectChange","isUserInput","McTreeSelectTrigger","McTreeSelectBase","elementRef","defaultErrorStateMatcher","parentForm","parentFormGroup","ngControl","McTreeSelectMixinBase","McTreeSelect","changeDetectorRef","viewportRuler","ngZone","renderer","scrollStrategyFactory","rawValidators","mcValidation","dir","parentFormField","ngModel","formControlName","controlType","hiddenItems","triggerFontSize","transformOrigin","panelDoneAnimatingStream","scrollStrategy","offsetY","positions","originX","originY","overlayX","overlayY","hiddenItemsText","openedChange","openedStream","pipe","o","closedStream","selectionChange","valueChange","backdropClass","optionSelectionChanges","options","changes","map","option","onSelectionChange","onStable","asObservable","_required","_multiple","_autoSelect","_value","_hasBackdrop","_focused","closeSubscription","EMPTY","_panelOpen","scrollTop","uid","destroy","onChange","onTouched","_compareWith","o1","o2","valueAccessor","id","_placeholder","stateChanges","next","selectionModel","multiple","fn","initializeSelection","tree","getSelectedValues","_id","cleaner","hasValue","subscribe","panelOpen","emit","overlayDir","offsetX","markForCheck","useValidation","resetFocusedItemOnBlur","ngAfterContentInit","initKeyManager","renderedOptions","autoSelect","multipleMode","CHECKBOX","noUnselectLast","tempValues","setSelectionByValue","event","close","selectedValues","changed","added","length","keyManager","setFocusOrigin","setActiveItem","find","tags","setTimeout","calculateHiddenItems","updateErrorState","disabled","complete","unsubscribe","stopPropagation","clear","open","triggerRect","trigger","nativeElement","getBoundingClientRect","parseInt","getComputedStyle","highlightCorrectOption","overlayRef","overlayElement","style","fontSize","focus","isDisabled","empty","filter","isEmpty","handleOpenKeydown","handleClosedKeydown","positionChange","detectChanges","calculateOverlayOffsetX","panel","updateScrollSize","closingActions","color","selectedOption","deselect","customTrigger","visibleItems","totalItemsWidth","getTotalItemsWidthInMatcher","totalVisibleItemsWidth","forEach","tag","offsetTop","offsetHeight","getItemWidth","itemsCounter","querySelector","matcherList","itemsCounterShowed","itemsCounterWidth","matcherListWidth","width","matcherWidth","backdrop","backdropClick","outsidePointerEvents","detachments","triggerClone","cloneNode","remove","setStyle","appendChild","querySelectorAll","item","element","computedStyle","window","marginLeft","marginRight","keyCode","isArrowKey","isOpenKey","altKey","preventDefault","onKeydown","originalOnKeyDown","call","setFirstItemActive","setLastItemActive","setPreviousPageItemActive","setNextPageItemActive","activeItem","toggle","ctrlKey","hasDeselectedOptions","some","select","previouslyFocusedIndex","activeItemIndex","shiftKey","selectViaInteraction","setSelectedOptionsByKey","Promise","resolve","then","Array","isArray","setOptionsFromValues","sortValues","onKeyDown","tabOut","change","scrollActiveOptionIntoView","toArray","sort","a","b","sortComparator","indexOf","firstSelectedValue","activeOptionIndex","getItemHeight","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","leftOverflow","left","rightOverflow","right","Math","round","updatePosition","McTreeSelectModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAgBA;;;AACA,eAASA,2DAAT,CAAqEC,EAArE,EAAyEC,GAAzE,EAA8E;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,+DAAU,CAAV;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,2EAAsB,GAAtB,EAA2BA,MAAM,CAACC,WAAP,CAAmBC,YAAnB,CAAgCJ,OAAhC,CAA3B,EAAqE,GAArE;AACH;AAAE;;AACH,eAASK,2DAAT,CAAqEP,EAArE,EAAyEC,GAAzE,EAA8E;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB;;AACA,+DAAU,CAAV;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMQ,OAAO,GAAGP,GAAG,CAACE,SAApB;;AACA,cAAMM,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,oEAAe,WAAf,EAA4BA,MAAM,CAACJ,WAAP,CAAmBK,UAAnB,CAA8BF,OAA9B,IAAyC,EAAzC,GAA8C,gBAA1E;;AACA,kEAAa,CAAb;;AACA,2EAAsB,GAAtB,EAA2BC,MAAM,CAACJ,WAAP,CAAmBC,YAAnB,CAAgCE,OAAhC,CAA3B,EAAqE,GAArE;AACH;AAAE;;UACGG,U;;;AAEN;;;UACMC,c;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACnC,YAAMC,IAAI,GAAG,EAAb;;AACA,wCAAgBC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAhB,kCAAoC;AAA/B,cAAMK,CAAC,mBAAP;AACD,cAAMC,CAAC,GAAGN,KAAK,CAACK,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAIV,UAAJ,EAAb;AACAU,cAAI,CAACC,IAAL,aAAeH,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKG,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOH,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACG,QAAL,GAAgBX,eAAe,CAACO,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA/B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACI,IAAL,GAAYL,CAAZ;AACH;;AACDJ,cAAI,CAACU,IAAL,CAAUL,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAMW,aAAa,GAAG;AAClBC,YAAI,EAAE,KADY;AAElBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFa;AAuClBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCS;AAgDlBC,aAAK,EAAE;AAhDW,OAAtB;AAkDA;AACA;AACA;;UACMC,iC;AACF,qDAAc;AAAA;;AACV,eAAKC,QAAL,GAAgB,EAAhB;;AACA,eAAKC,WAAL,GAAmB,UAAC5B,IAAD,EAAON,KAAP,EAAcmC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAIvC,cAAJ,EAAjB;AACAuC,oBAAQ,CAAC7B,IAAT,GAAgBD,IAAI,CAACC,IAArB;AACA6B,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBJ,IAAI,CAACI,IAArB;AACA0B,oBAAQ,CAACpC,KAAT,GAAiBA,KAAjB;AACAoC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC/B,IAAI,CAACG,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAChC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKuC,YAAL,GAAoB,UAACjC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC+B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAAClC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACG,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAACnC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACC,IAAZ;AACH,WAFD;;AAGA,eAAKhB,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,6BAAUA,IAAI,CAACC,IAAf;AACH,WAFD;;AAGA,eAAKmC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKR,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKlD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAKgD,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKlD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuBH,eAAe,CAACc,aAAD,EAAgB,CAAhB,CAAtC;AACH;;;;iBACD,kBAASgC,CAAT,EAAYC,QAAZ,EAAsB;AAClB,mBAAOA,QAAQ,CAACR,UAAhB;AACH;;;;;;AAELL,uCAAiC,CAACc,IAAlC,GAAyC,SAASC,yCAAT,CAAmDC,CAAnD,EAAsD;AAAE,eAAO,KAAKA,CAAC,IAAIhB,iCAAV,GAAP;AAAwD,OAAzJ;;AACAA,uCAAiC,CAACiB,IAAlC,GAAyC,gEAAqB;AAAEvC,YAAI,EAAEsB,iCAAR;AAA2CkB,iBAAS,EAAE,CAAC,CAAC,uCAAD,CAAD,CAAtD;AAAmGC,aAAK,EAAE,CAA1G;AAA6GC,YAAI,EAAE,CAAnH;AAAsHC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,UAAJ,EAAgB,SAAhB,EAA2B,eAA3B,CAAD,EAA8C,CAAC,CAAD,EAAI,YAAJ,EAAkB,aAAlB,CAA9C,EAAgF,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,CAAhF,EAA+H,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAA/H,EAAmM,CAAC,iBAAD,EAAoB,EAApB,CAAnM,EAA4N,CAAC,mBAAD,EAAsB,EAAtB,CAA5N,EAAuP,CAAC,SAAD,EAAY,oBAAZ,EAAkC,kBAAlC,EAAsD,EAAtD,CAAvP,CAA9H;AAAibC,gBAAQ,EAAE,SAASC,0CAAT,CAAoDtE,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC5jB,yEAAkB,CAAlB,EAAqB,eAArB;;AACA,yEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,qEAAc,eAAd,EAA+B,SAASuE,kFAAT,CAA4FC,MAA5F,EAAoG;AAAE,qBAAOvE,GAAG,CAAC+C,QAAJ,GAAewB,MAAtB;AAA+B,aAApK;;AACA,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,CAAd,EAAiBzE,2DAAjB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,gBAApF,EAAsG,CAAtG;;AACA,qEAAc,CAAd,EAAiBQ,2DAAjB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,gBAApF,EAAsG,CAAtG;;AACA;;AACA,oEAAa,CAAb,EAAgB,YAAhB,EAA8B,IAA9B,EAAoC,CAApC;;AACA;;AACA;AACH;;AAAC,cAAIP,EAAE,GAAG,CAAT,EAAY;AACV,oEAAa,CAAb;;AACA,qEAAc,UAAd,EAA0B,IAA1B,EAAgC,SAAhC,EAA2CC,GAAG,CAAC+C,QAA/C;;AACA,oEAAa,CAAb;;AACA,qEAAc,YAAd,EAA4B/C,GAAG,CAACyD,UAAhC,EAA4C,aAA5C,EAA2DzD,GAAG,CAACI,WAA/D;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCJ,GAAG,CAACwE,QAAvC;AACH;AAAE,SAlBuD;AAkBrDC,kBAAU,EAAE,CAAC,yEAAD,EAAiB,2EAAjB,EAAkC,8DAAlC,EAAsD,sDAAtD,EAAkE,uEAAlE,EAAsF,qEAAtF,EAAwG,uEAAxG,EAAsH,oEAAtH,EAAuI,yEAAvI,EAA6J,8DAA7J,EAAwK,uEAAxK,EAA4L,iFAA5L,CAlByC;AAkBkLC,cAAM,EAAE,CAAC,EAAD;AAlB1L,OAArB,CAAzC;;AAmBA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqB7B,iCAArB,EAAwD,CAAC;AACnHtB,cAAI,EAAE,uDAD6G;AAEnHoD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,uCADX;AAECC,uBAAW,EAAE,4CAFd;AAGCC,qBAAS,EAAE,CAAC,2CAAD;AAHZ,WAAD;AAF6G,SAAD,CAAxD,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;AASA;;;AACA,eAASC,mDAAT,CAA6DjF,EAA7D,EAAiEC,GAAjE,EAAsE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,+DAAU,CAAV;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,OAAO,GAAGD,GAAG,CAACE,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,2EAAsB,GAAtB,EAA2BA,MAAM,CAACC,WAAP,CAAmBC,YAAnB,CAAgCJ,OAAhC,CAA3B,EAAqE,GAArE;AACH;AAAE;;AACH,eAASgF,mDAAT,CAA6DlF,EAA7D,EAAiEC,GAAjE,EAAsE;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChF,uEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,kEAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB;;AACA,+DAAU,CAAV;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMQ,OAAO,GAAGP,GAAG,CAACE,SAApB;;AACA,cAAMM,MAAM,GAAG,6DAAf;;AACA,kEAAa,CAAb;;AACA,oEAAe,WAAf,EAA4BA,MAAM,CAACJ,WAAP,CAAmBK,UAAnB,CAA8BF,OAA9B,IAAyC,EAAzC,GAA8C,gBAA1E;;AACA,kEAAa,CAAb;;AACA,2EAAsB,GAAtB,EAA2BC,MAAM,CAACJ,WAAP,CAAmBC,YAAnB,CAAgCE,OAAhC,CAA3B,EAAqE,GAArE;AACH;AAAE;;UACG2E,Q;;;AAEN;;;UACMC,Y;;;AAEN;AACA;AACA;AACA;;;AACA,eAASC,aAAT,CAAuBvE,KAAvB,EAA8BC,KAA9B,EAAqC;AACjC,YAAMC,IAAI,GAAG,EAAb;;AACA,0CAAgBC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAhB,qCAAoC;AAA/B,cAAMK,CAAC,qBAAP;AACD,cAAMC,CAAC,GAAGN,KAAK,CAACK,CAAD,CAAf;AACA,cAAME,IAAI,GAAG,IAAI8D,QAAJ,EAAb;AACA9D,cAAI,CAACC,IAAL,aAAeH,CAAf;;AACA,cAAIC,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKG,SAAxB,EAAmC,CAC/B;AACH,WAFD,MAGK,IAAI,OAAOH,CAAP,KAAa,QAAjB,EAA2B;AAC5BC,gBAAI,CAACG,QAAL,GAAgB6D,aAAa,CAACjE,CAAD,EAAIL,KAAK,GAAG,CAAZ,CAA7B;AACH,WAFI,MAGA;AACDM,gBAAI,CAACI,IAAL,GAAYL,CAAZ;AACH;;AACDJ,cAAI,CAACU,IAAL,CAAUL,IAAV;AACH;;AACD,eAAOL,IAAP;AACH;;AACD,UAAMsE,WAAW,GAAG;AAChB1D,YAAI,EAAE,KADU;AAEhBC,WAAG,EAAE;AACDC,aAAG,EAAE;AACDC,iBAAK,EAAE;AACH,gCAAkB;AACd,kCAAkB,IADJ;AAEd,uCAAuB,IAFT;AAGd,kCAAkB,IAHJ;AAId,uCAAuB;AAJT,eADf;AAOH,+BAAiB;AACb,iCAAiB,IADJ;AAEb,sCAAsB;AAFT;AAPd;AADN,WADJ;AAeDC,uBAAa,EAAE;AACXC,kBAAM,EAAE,EADG;AAEXC,iBAAK,EAAE;AAFI,WAfd;AAmBDC,gBAAM,EAAE;AACJC,wBAAY,EAAE,EADV;AAEJC,kBAAM,EAAE,EAFJ;AAGJ,6BAAiB,EAHb;AAIJC,iBAAK,EAAE,IAJH;AAKJ,uBAAS,MALL;AAMJC,mBAAO,EAAE;AANL,WAnBP;AA2BD,wBAAc;AACVC,iBAAK,EAAE,EADG;AAEVC,iBAAK,EAAE;AAFG,WA3Bb;AA+BD,6BAAmB,EA/BlB;AAgCD,mCAAyB,EAhCxB;AAiCDC,gBAAM,EAAE,IAjCP;AAkCD,4BAAkB,MAlCjB;AAmCDC,qBAAW,EAAE;AAnCZ,SAFW;AAuChBC,eAAO,EAAE;AACLC,gBAAM,EAAE;AACJ,+BAAmB,IADf;AAEJ,iCAAqB,IAFjB;AAGJ,4BAAgB,IAHZ;AAIJ,oCAAwB;AAJpB,WADH;AAOL,6BAAmB;AAPd,SAvCO;AAgDhBC,aAAK,EAAE;AAhDS,OAApB;AAkDA;AACA;AACA;;UACMyC,yB;AACF,6CAAc;AAAA;;AACV,eAAKvC,QAAL,GAAgB,EAAhB;;AACA,eAAKC,WAAL,GAAmB,UAAC5B,IAAD,EAAON,KAAP,EAAcmC,MAAd,EAAyB;AACxC,gBAAMC,QAAQ,GAAG,IAAIiC,YAAJ,EAAjB;AACAjC,oBAAQ,CAAC7B,IAAT,GAAgBD,IAAI,CAACC,IAArB;AACA6B,oBAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,oBAAQ,CAAC1B,IAAT,GAAgBJ,IAAI,CAACI,IAArB;AACA0B,oBAAQ,CAACpC,KAAT,GAAiBA,KAAjB;AACAoC,oBAAQ,CAACC,UAAT,GAAsB,CAAC,CAAC/B,IAAI,CAACG,QAA7B;AACA,mBAAO2B,QAAP;AACH,WARD;;AASA,eAAKE,QAAL,GAAgB,UAAChC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACN,KAAZ;AACH,WAFD;;AAGA,eAAKuC,YAAL,GAAoB,UAACjC,IAAD,EAAU;AAC1B,mBAAOA,IAAI,CAAC+B,UAAZ;AACH,WAFD;;AAGA,eAAKG,WAAL,GAAmB,UAAClC,IAAD,EAAU;AACzB,mBAAOA,IAAI,CAACG,QAAZ;AACH,WAFD;;AAGA,eAAKgC,QAAL,GAAgB,UAACnC,IAAD,EAAU;AACtB,mBAAOA,IAAI,CAACC,IAAZ;AACH,WAFD;;AAGA,eAAKhB,YAAL,GAAoB,UAACe,IAAD,EAAU;AAC1B,6BAAUA,IAAI,CAACC,IAAf;AACH,WAFD;;AAGA,eAAKmC,aAAL,GAAqB,IAAI,uEAAJ,CAAoB,KAAKR,WAAzB,EAAsC,KAAKI,QAA3C,EAAqD,KAAKC,YAA1D,EAAwE,KAAKC,WAA7E,CAArB;AACA,eAAKlD,WAAL,GAAmB,IAAI,oEAAJ,CAAoB,KAAKgD,QAAzB,EAAmC,KAAKC,YAAxC,EAAsD,KAAKE,QAA3D,EAAqE,KAAKlD,YAA1E,CAAnB;AACA,eAAKoD,UAAL,GAAkB,IAAI,4EAAJ,CAAyB,KAAKrD,WAA9B,EAA2C,KAAKoD,aAAhD,CAAlB;AACA,eAAKC,UAAL,CAAgB1C,IAAhB,GAAuBqE,aAAa,CAACC,WAAD,EAAc,CAAd,CAApC;AACH;;;;iBACD,kBAAS3B,CAAT,EAAYC,QAAZ,EAAsB;AAClB,mBAAOA,QAAQ,CAACR,UAAhB;AACH;;;;;;AAELmC,+BAAyB,CAAC1B,IAA1B,GAAiC,SAAS2B,iCAAT,CAA2CzB,CAA3C,EAA8C;AAAE,eAAO,KAAKA,CAAC,IAAIwB,yBAAV,GAAP;AAAgD,OAAjI;;AACAA,+BAAyB,CAACvB,IAA1B,GAAiC,gEAAqB;AAAEvC,YAAI,EAAE8D,yBAAR;AAAmCtB,iBAAS,EAAE,CAAC,CAAC,8BAAD,CAAD,CAA9C;AAAkFC,aAAK,EAAE,CAAzF;AAA4FC,YAAI,EAAE,CAAlG;AAAqGC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,SAAJ,EAAe,eAAf,CAAD,EAAkC,CAAC,CAAD,EAAI,YAAJ,EAAkB,aAAlB,CAAlC,EAAoE,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,CAApE,EAAmH,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,eAA7B,EAA8C,mBAA9C,CAAnH,EAAuL,CAAC,iBAAD,EAAoB,EAApB,CAAvL,EAAgN,CAAC,mBAAD,EAAsB,EAAtB,CAAhN,EAA2O,CAAC,SAAD,EAAY,oBAAZ,EAAkC,kBAAlC,EAAsD,EAAtD,CAA3O,CAA7G;AAAoZC,gBAAQ,EAAE,SAASoB,kCAAT,CAA4CzF,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/gB,yEAAkB,CAAlB,EAAqB,eAArB;;AACA,yEAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;;AACA,qEAAc,eAAd,EAA+B,SAAS0F,0EAAT,CAAoFlB,MAApF,EAA4F;AAAE,qBAAOvE,GAAG,CAAC+C,QAAJ,GAAewB,MAAtB;AAA+B,aAA5J;;AACA,yEAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C;;AACA,qEAAc,CAAd,EAAiBS,mDAAjB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,gBAA5E,EAA8F,CAA9F;;AACA,qEAAc,CAAd,EAAiBC,mDAAjB,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E,gBAA5E,EAA8F,CAA9F;;AACA;;AACA,oEAAa,CAAb,EAAgB,YAAhB,EAA8B,IAA9B,EAAoC,CAApC;;AACA;;AACA;AACH;;AAAC,cAAIlF,EAAE,GAAG,CAAT,EAAY;AACV,oEAAa,CAAb;;AACA,qEAAc,SAAd,EAAyBC,GAAG,CAAC+C,QAA7B;;AACA,oEAAa,CAAb;;AACA,qEAAc,YAAd,EAA4B/C,GAAG,CAACyD,UAAhC,EAA4C,aAA5C,EAA2DzD,GAAG,CAACI,WAA/D;;AACA,oEAAa,CAAb;;AACA,qEAAc,mBAAd,EAAmCJ,GAAG,CAACwE,QAAvC;AACH;AAAE,SAlB+C;AAkB7CC,kBAAU,EAAE,CAAC,yEAAD,EAAiB,2EAAjB,EAAkC,8DAAlC,EAAsD,sDAAtD,EAAkE,uEAAlE,EAAsF,qEAAtF,EAAwG,uEAAxG,EAAsH,oEAAtH,EAAuI,yEAAvI,EAA6J,8DAA7J,EAAwK,uEAAxK,EAA4L,iFAA5L,CAlBiC;AAkB0LC,cAAM,EAAE,CAAC,EAAD;AAlBlM,OAArB,CAAjC;;AAmBA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqBW,yBAArB,EAAgD,CAAC;AAC3G9D,cAAI,EAAE,uDADqG;AAE3GoD,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,8BADX;AAECC,uBAAW,EAAE,mCAFd;AAGCC,qBAAS,EAAE,CAAC,kCAAD;AAHZ,WAAD;AAFqG,SAAD,CAAhD,EAO1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAPgC,EAO9B,IAP8B,CAAnD;AAO6B,OAP5C;;AASA,UAAMW,QAAQ,GAAG,CACbJ,yBADa,EAEbxC,iCAFa,CAAjB;;UAIM6C,wB;;;;AAENA,8BAAwB,CAAC/B,IAAzB,GAAgC,SAASgC,gCAAT,CAA0C9B,CAA1C,EAA6C;AAAE,eAAO,KAAKA,CAAC,IAAI6B,wBAAV,GAAP;AAA+C,OAA9H;;AACAA,8BAAwB,CAACE,IAAzB,GAAgC,+DAAoB;AAAErE,YAAI,EAAEmE;AAAR,OAApB,CAAhC;AACAA,8BAAwB,CAACG,IAAzB,GAAgC,+DAAoB;AAAEC,eAAO,EAAE,CAAC,CACpD,4DADoD,EAEpD,kEAFoD,EAGpD,0DAHoD,EAIpD,kEAJoD,EAKpD,+EALoD,EAMpD,oEANoD,EAOpD,iFAPoD,EAQpD,sEARoD,EASpD,oEAToD,CAAD;AAAX,OAApB,CAAhC;;AAWA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAAsBL,wBAAtB,EAAgD;AAAEM,sBAAY,EAAE,CAACX,yBAAD,EAC1HxC,iCAD0H,CAAhB;AACtEiD,iBAAO,EAAE,CAAC,4DAAD,EAC7C,kEAD6C,EAE7C,0DAF6C,EAG7C,kEAH6C,EAI7C,+EAJ6C,EAK7C,oEAL6C,EAM7C,iFAN6C,EAO7C,sEAP6C,EAQ7C,oEAR6C,CAD6D;AAS3FG,iBAAO,EAAE,CAACZ,yBAAD,EACxBxC,iCADwB;AATkF,SAAhD,CAAnD;AAUiC,OAVhD;;AAWA,OAAC,YAAY;AAAE,SAAC,OAAO6B,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAqBgB,wBAArB,EAA+C,CAAC;AAC1GnE,cAAI,EAAE,sDADoG;AAE1GoD,cAAI,EAAE,CAAC;AACCmB,mBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,0DAHK,EAIL,kEAJK,EAKL,+EALK,EAML,oEANK,EAOL,iFAPK,EAQL,sEARK,EASL,oEATK,CADV;AAYCE,wBAAY,EAAEP,QAZf;AAaCQ,mBAAO,EAAER;AAbV,WAAD;AAFoG,SAAD,CAA/C,EAiB1D,IAjB0D,EAiBpD,IAjBoD,CAAnD;AAiBO,OAjBtB;AAmBA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1ZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA,UAAIS,YAAY,GAAG,CAAnB;AAEA;;UACaC,kB,GACT,4BAAmBpE,MAAnB,EAAgDnB,KAAhD,EAAwF;AAAA,YAArBwF,WAAqB,uEAAP,KAAO;;AAAA;;AAArE,aAAArE,MAAA,GAAAA,MAAA;AAA6B,aAAAnB,KAAA,GAAAA,KAAA;AAAmB,aAAAwF,WAAA,GAAAA,WAAA;AAAuB,O;;UAKjFC,mB;;;;sEADH,C,EAAG;AAAA,eAAQ,KAAE,wBAAF,GAAR;AAAoC,O;;;;;;;;;;;;;;;;UAI3CC,gB,GACF,0BACWC,UADX,EAEWC,wBAFX,EAGWC,UAHX,EAIWC,eAJX,EAKWC,SALX,EAK+B;AAAA;;AAJpB,aAAAJ,UAAA,GAAAA,UAAA;AACA,aAAAC,wBAAA,GAAAA,wBAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACP,O,EAGR;;;AACA,UAAMC,qBAAqB,GACG,8EAAc,8EAAc,gFAAgBN,gBAAhB,CAAd,CAAd,CAD9B;;UAoCaO,Y;;;;;AA6QT,8BACIN,UADJ,EAEaO,iBAFb,EAGqBC,aAHrB,EAIqBC,MAJrB,EAKqBC,QALrB,EAMIT,wBANJ,EAOwDU,qBAPxD,EAQ8CC,aAR9C,EAS+CC,YAT/C,EAUiCC,GAVjC,EAWgBZ,UAXhB,EAYgBC,eAZhB,EAaiCY,eAbjC,EAcwBX,SAdxB,EAe+BY,OAf/B,EAgB+BC,eAhB/B,EAgB+D;AAAA;;AAAA;;AAE3D,oCAAMjB,UAAN,EAAkBC,wBAAlB,EAA4CC,UAA5C,EAAwDC,eAAxD,EAAyEC,SAAzE;AAhBS,gBAAAG,iBAAA,GAAAA,iBAAA;AACQ,gBAAAC,aAAA,GAAAA,aAAA;AACA,gBAAAC,MAAA,GAAAA,MAAA;AACA,gBAAAC,QAAA,GAAAA,QAAA;AAEmC,gBAAAC,qBAAA,GAAAA,qBAAA;AACV,gBAAAC,aAAA,GAAAA,aAAA;AACC,gBAAAC,YAAA,GAAAA,YAAA;AACd,gBAAAC,GAAA,GAAAA,GAAA;AAGA,gBAAAC,eAAA,GAAAA,eAAA;AAEF,gBAAAC,OAAA,GAAAA,OAAA;AACA,gBAAAC,eAAA,GAAAA,eAAA;AACnC;;AAzRI,gBAAAC,WAAA,GAAc,QAAd;AAEA,gBAAAC,WAAA,GAAsB,CAAtB;AACJ;;AAKI,gBAAAC,eAAA,GAAkB,CAAlB;AACJ;;AAKI,gBAAAC,eAAA,GAA0B,KAA1B;AACJ;;AAEI,gBAAAC,wBAAA,GAA2B,IAAI,6CAAJ,EAA3B;AACJ;;AAEI,gBAAAC,cAAA,GAAiB,MAAKZ,qBAAL,EAAjB;AACJ;AAEG;AACI;AACI;AAEJ;;AAAH,gBAAAa,OAAA,GAAU,CAAV;AACJ;AAEG;AACI;AACI;AACI;AAEJ;;AAAP,gBAAAC,SAAA,GAAY,CACR;AACIC,mBAAO,EAAE,OADb;AAEIC,mBAAO,EAAE,QAFb;AAGIC,oBAAQ,EAAE,OAHd;AAIIC,oBAAQ,EAAE;AAJd,WADQ,EAOR;AACIH,mBAAO,EAAE,OADb;AAEIC,mBAAO,EAAE,KAFb;AAGIC,oBAAQ,EAAE,OAHd;AAIIC,oBAAQ,EAAE;AAJd,WAPQ,CAAZ;AAkCS,gBAAAC,eAAA,GAA0B,QAA1B;AACb;;AAEuB,gBAAAC,YAAA,GAAsC,IAAI,0DAAJ,EAAtC;AACvB;;AAE+B,gBAAAC,YAAA,GACvB,MAAKD,YAAL,CAAkBE,IAAlB,CAAuB,+DAAO,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAP,CAAvB,EAAyC,4DAAI,YAAM,CAAE,CAAZ,CAAzC,CADuB;AAE/B;;AAE+B,gBAAAC,YAAA,GACvB,MAAKJ,YAAL,CAAkBE,IAAlB,CAAuB,+DAAO,UAACC,CAAD;AAAA,mBAAO,CAACA,CAAR;AAAA,WAAP,CAAvB,EAA0C,4DAAI,YAAM,CAAE,CAAZ,CAA1C,CADuB;AAE/B;;AAEuB,gBAAAE,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACvB;AAEG;AACI;AACI;AAEJ;;AAAgB,gBAAAC,WAAA,GAAiC,IAAI,0DAAJ,EAAjC;AAKV,gBAAAC,aAAA,GAAwB,kCAAxB;AACb;;AAWa,gBAAAC,sBAAA,GAAyD,oDAAM,YAAM;AAC1E,gBAAI,MAAKC,OAAT,EAAkB;AACd,qBAAO,MAAKA,OAAL,CAAaC,OAAb,CAAqBR,IAArB,CACH,kEAAU,MAAKO,OAAf,CADG,EAEH,kEAAU;AAAA,uBAAM,qFAAS,MAAKA,OAAL,CAAaE,GAAb,CAAiB,UAACC,MAAD;AAAA,yBAAYA,MAAM,CAACC,iBAAnB;AAAA,iBAAjB,CAAT,EAAN;AAAA,eAAV,CAFG,CAAP;AAIH;;AAED,mBAAO,MAAKnC,MAAL,CAAYoC,QAAZ,CACFC,YADE,GAEFb,IAFE,CAEG,6DAAK,CAAL,CAFH,EAEY,kEAAU;AAAA,qBAAM,MAAKM,sBAAX;AAAA,aAAV,CAFZ,CAAP;AAGH,WAXiE,CAAzD;AAqCD,gBAAAQ,SAAA,GAAqB,KAArB;AAeA,gBAAAC,SAAA,GAAqB,KAArB;AAaA,gBAAAC,WAAA,GAAuB,IAAvB;AA8BA,gBAAAC,MAAA,GAAc,IAAd;AAuBA,gBAAAC,YAAA,GAAwB,KAAxB;AAWA,gBAAAC,QAAA,GAAW,KAAX;AAUA,gBAAAC,iBAAA,GAAoB,mDAAaC,KAAjC;AAEA,gBAAAC,UAAA,GAAa,KAAb;AACZ;;AAIY,gBAAAC,SAAA,GAAY,CAAZ;AACZ;;AAEqB,gBAAAC,GAAA,uBAAmB9D,YAAY,EAA/B;AACrB;;AAEqB,gBAAA+D,OAAA,GAAU,IAAI,6CAAJ,EAAV;AACrB;;AA+JI,gBAAAC,QAAA,GAAiC,YAAM,CAAE,CAAzC;AACJ;;;AAEI,gBAAAC,SAAA,GAAY,YAAM,CAAE,CAApB;AACJ;;;AAqfY,gBAAAC,YAAA,GAAe,UAACC,EAAD,EAAUC,EAAV;AAAA,mBAAsBD,EAAE,KAAKC,EAA7B;AAAA,WAAf;;AAhoBJ,cAAI,MAAK3D,SAAT,EAAoB;AAChB;AACA;AACA,kBAAKA,SAAL,CAAe4D,aAAf;AACH,WAR0D,CASnE;;;AAEQ,gBAAKC,EAAL,GAAU,MAAKA,EAAf;AAX2D;AAY9D;;;;eA5KD,eACe;AACX,mBAAO,KAAKC,YAAZ;AACH,W;eAED,aAAgB7J,KAAhB,EAA+B;AAC3B,iBAAK6J,YAAL,GAAoB7J,KAApB;AAEA,iBAAK8J,YAAL,CAAkBC,IAAlB;AACH;;;eAID,eACY;AACR,mBAAO,KAAKrB,SAAZ;AACH,W;eAED,aAAa1I,KAAb,EAA6B;AACzB,iBAAK0I,SAAL,GAAiB,oFAAsB1I,KAAtB,CAAjB;AAEA,iBAAK8J,YAAL,CAAkBC,IAAlB;AACH;;;eAID,eACY;AACR,mBAAO,KAAKpB,SAAZ;AACH,W;eAED,aAAa3I,KAAb,EAA6B;AACzB,gBAAI,KAAKgK,cAAT,EAAyB;AACrB,oBAAM,iGAAN;AACH;;AAED,iBAAKrB,SAAL,GAAiB,oFAAsB3I,KAAtB,CAAjB;AACH;;;eAID,eACc;AACV,gBAAI,KAAKiK,QAAT,EAAmB;AAAE,qBAAO,KAAP;AAAe;;AAEpC,mBAAO,KAAKrB,WAAZ;AACH,W;eAED,aAAe5I,KAAf,EAA+B;AAC3B,iBAAK4I,WAAL,GAAmB,oFAAsB5I,KAAtB,CAAnB;AACH;AACL;AACO;AAGwC;AACJ;AAA2B;;;;eAGlE,eACkB;AACd,mBAAO,KAAKwJ,YAAZ;AACH,W;eAED,aAAgBU,EAAhB,EAAmD;AAC/C;AACA,gBAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1B,oBAAM,kGAAN;AACH;;AAED,iBAAKV,YAAL,GAAoBU,EAApB;;AAEA,gBAAI,KAAKF,cAAT,EAAyB;AACrB;AACA,mBAAKG,mBAAL;AACH;AACJ;;;eAED,eAAS;AACL,mBAAO,KAAKF,QAAL,GAAgB,KAAKG,IAAL,CAAUC,iBAAV,EAAhB,GAAgD,KAAKD,IAAL,CAAUC,iBAAV,GAA8B,CAA9B,CAAvD;AACH;;;eAID,eACM;AACF,mBAAO,KAAKC,GAAZ;AACH,W;eAED,aAAOtK,KAAP,EAAsB;AAClB,iBAAKsK,GAAL,GAAWtK,KAAK,IAAI,KAAKoJ,GAAzB;AACA,iBAAKU,YAAL,CAAkBC,IAAlB;AACH;;;eAID,eACe;AACX,mBAAO,KAAKjB,YAAZ;AACH,W;eAED,aAAgB9I,KAAhB,EAAgC;AAC5B,iBAAK8I,YAAL,GAAoB,oFAAsB9I,KAAtB,CAApB;AACH;AACL;;;;eAII,eAAW;AACP,mBAAO,KAAK+I,QAAL,IAAiB,KAAKG,UAA7B;AACH,W;eAED,aAAYlJ,KAAZ,EAA4B;AACxB,iBAAK+I,QAAL,GAAgB/I,KAAhB;AACH;;;eAID,eAAa;AACT,mBAAO,KAAKkJ,UAAZ;AACH;;;eAED,eAAkB;AACd,mBAAO,KAAKqB,OAAL,IAAgB,KAAKP,cAAL,CAAoBQ,QAApB,EAAvB;AACH;;;iBAkDD,oBAAW;AAAA;;AACP,iBAAKV,YAAL,CAAkBC,IAAlB,GADO,CAEf;AAC0E;AACA;;AAElE,iBAAK9C,wBAAL,CACKW,IADL,CACU,8EADV,EACkC,kEAAU,KAAKyB,OAAf,CADlC,EAEKoB,SAFL,CAEe,YAAM;AACb,kBAAI,MAAI,CAACC,SAAT,EAAoB;AAChB,sBAAI,CAACvB,SAAL,GAAiB,CAAjB;;AACA,sBAAI,CAACzB,YAAL,CAAkBiD,IAAlB,CAAuB,IAAvB;AACH,eAHD,MAGO;AACH,sBAAI,CAACjD,YAAL,CAAkBiD,IAAlB,CAAuB,KAAvB;;AACA,sBAAI,CAACC,UAAL,CAAgBC,OAAhB,GAA0B,CAA1B;;AACA,sBAAI,CAAC3E,iBAAL,CAAuB4E,YAAvB;AACH;AACJ,aAXL;AAYH;;;iBAED,8BAAqB;AAAA;;AACjB,gBAAI,CAAC,KAAKV,IAAV,EAAgB;AAAE;AAAS;;AAE3B,gBAAI,KAAK5D,YAAL,CAAkBuE,aAAtB,EAAqC;AACjC,kGAAoB,IAApB;AACH;;AAED,iBAAKX,IAAL,CAAUY,sBAAV,GAAmC,KAAnC;AAEA,iBAAKhB,cAAL,GAAsB,KAAKI,IAAL,CAAUJ,cAAV,GAA2B,IAAI,wEAAJ,CAAwB,KAAKC,QAA7B,CAAjD;AACA,iBAAKG,IAAL,CAAUa,kBAAV;AAEA,iBAAKC,cAAL;AAEA,iBAAK/C,OAAL,GAAe,KAAKiC,IAAL,CAAUe,eAAzB;AACA,iBAAKf,IAAL,CAAUgB,UAAV,GAAuB,KAAKA,UAA5B;;AAEA,gBAAI,KAAKhB,IAAL,CAAUiB,YAAV,KAA2B,IAA/B,EAAqC;AACjC,mBAAKjB,IAAL,CAAUiB,YAAV,GAAyB,KAAKpB,QAAL,GAAgB,qEAAaqB,QAA7B,GAAwC,IAAjE;AACH;;AAED,gBAAI,KAAKrB,QAAT,EAAmB;AACf,mBAAKG,IAAL,CAAUmB,cAAV,GAA2B,KAA3B;AACH;;AAED,gBAAI,KAAKC,UAAT,EAAqB;AACjB,mBAAKC,mBAAL,CAAyB,KAAKD,UAA9B;AACA,mBAAKA,UAAL,GAAkB,IAAlB;AACH;;AAED,iBAAKtD,sBAAL,CACKN,IADL,CACU,kEAAU,KAAKyB,OAAf,CADV,EAEKoB,SAFL,CAEe,UAACiB,KAAD,EAAW;AAClB,kBAAI,CAAC,MAAI,CAACzB,QAAN,IAAkB,MAAI,CAACS,SAAvB,IAAoCgB,KAAK,CAAClG,WAA9C,EAA2D;AACvD,sBAAI,CAACmG,KAAL;AACH;AACJ,aANL;AAQA,iBAAKvB,IAAL,CAAUrC,eAAV,CACKH,IADL,CACU,kEAAU,KAAKyB,OAAf,CADV,EAEKoB,SAFL,CAEe,UAACiB,KAAD,EAAW;AAClB,oBAAI,CAACpC,QAAL,CAAc,MAAI,CAACsC,cAAnB;;AAEA,oBAAI,CAAC7D,eAAL,CAAqB4C,IAArB,CAA0B,IAAIpF,kBAAJ,CAAuB,MAAvB,EAA6BmG,KAAK,CAACpD,MAAnC,CAA1B;AACH,aANL;AAQA,iBAAK0B,cAAL,CAAoB6B,OAApB,CACKjE,IADL,CACU,kEAAU,KAAKyB,OAAf,CADV,EAEKoB,SAFL,CAEe,UAACiB,KAAD,EAAW;AAClB,kBAAIA,KAAK,CAACI,KAAN,CAAYC,MAAhB,EAAwB;AACpB,sBAAI,CAAC3B,IAAL,CAAU4B,UAAV,CAAqBC,cAArB,CAAoC,SAApC;;AACA,sBAAI,CAAC7B,IAAL,CAAU4B,UAAV,CAAqBE,aAArB,CACI,MAAI,CAAC/D,OAAL,CAAagE,IAAb,CAAkB,UAAC7D,MAAD;AAAA,yBAAYA,MAAM,CAACpI,IAAP,KAAgBwL,KAAK,CAACI,KAAN,CAAY,CAAZ,CAA5B;AAAA,iBAAlB,CADJ;AAGH;AACJ,aATL;AAUH;;;iBAED,2BAAkB;AAAA;;AACd,gBAAI,CAAC,KAAK1B,IAAV,EAAgB;AAAE;AAAS;;AAE3B,iBAAKgC,IAAL,CAAUhE,OAAV,CACKqC,SADL,CACe,YAAM;AACb4B,wBAAU,CAAC;AAAA,uBAAM,MAAI,CAACC,oBAAL,EAAN;AAAA,eAAD,EAAoC,CAApC,CAAV;AACH,aAHL;AAKAD,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAACC,oBAAL,EAAN;AAAA,aAAD,EAAoC,CAApC,CAAV;AACH;;;iBAED,qBAAY;AACR,gBAAI,KAAKvG,SAAT,EAAoB;AAAE,mBAAKwG,gBAAL;AAA0B;AACnD;;;iBAED,qBAAYnE,OAAZ,EAAoC;AAChC;AACA;AACA,gBAAIA,OAAO,CAACoE,QAAZ,EAAsB;AAClB,mBAAK1C,YAAL,CAAkBC,IAAlB;AACH;AACJ;;;iBAED,uBAAc;AACV,iBAAKV,OAAL,CAAaU,IAAb;AACA,iBAAKV,OAAL,CAAaoD,QAAb;AACA,iBAAK3C,YAAL,CAAkB2C,QAAlB;AACA,iBAAKzD,iBAAL,CAAuB0D,WAAvB;AACH;;;iBAGD,kCAAyBjF,eAAzB,EAAkDX,WAAlD,EAAqE;AACjE,6BAAUW,eAAV,cAA6BX,WAA7B;AACH;;;iBAED,oBAAWpD,MAAX,EAAiB;AACbA,kBAAM,CAACiJ,eAAP;AAEA,iBAAK3C,cAAL,CAAoB4C,KAApB;AACA,iBAAKxC,IAAL,CAAU4B,UAAV,CAAqBE,aAArB,CAAmC,CAAC,CAApC;AAEA,iBAAKT,mBAAL,CAAyB,EAAzB;AAEA,iBAAKnC,QAAL,CAAc,KAAKsC,cAAnB;AACH;;;iBAQD,kBAAM;AACF,gBAAI,KAAKlB,SAAT,EAAoB;AAChB,mBAAKiB,KAAL;AACH,aAFD,MAEO;AACH,mBAAKkB,IAAL;AACH;AACJ;;;iBAED,gBAAI;AAAA;;AACA,gBAAI,KAAKL,QAAL,IAAiB,CAAC,KAAKrE,OAAvB,IAAkC,CAAC,KAAKA,OAAL,CAAa4D,MAAhD,IAA0D,KAAK7C,UAAnE,EAA+E;AAAE;AAAS;;AAE1F,iBAAK4D,WAAL,GAAmB,KAAKC,OAAL,CAAaC,aAAb,CAA2BC,qBAA3B,EAAnB,CAHA,CAIA;AACA;;AACA,iBAAKlG,eAAL,GAAuBmG,QAAQ,CAACC,gBAAgB,CAAC,KAAKJ,OAAL,CAAaC,aAAd,CAAhB,CAA6C,WAA7C,CAAD,CAA/B;AAEA,iBAAK9D,UAAL,GAAkB,IAAlB;AAEAmD,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAACe,sBAAL,EAAN;AAAA,aAAD,CAAV;AAEA,iBAAKlH,iBAAL,CAAuB4E,YAAvB,GAZA,CAaR;;AAEQ,iBAAK1E,MAAL,CAAYoC,QAAZ,CAAqBC,YAArB,GACKb,IADL,CACU,6DAAK,CAAL,CADV,EAEK6C,SAFL,CAEe,YAAM;AACb,kBAAI,MAAI,CAAC1D,eAAL,IAAwB,MAAI,CAAC6D,UAAL,CAAgByC,UAAxC,IAAsD,MAAI,CAACzC,UAAL,CAAgByC,UAAhB,CAA2BC,cAArF,EAAqG;AACjG,sBAAI,CAAC1C,UAAL,CAAgByC,UAAhB,CAA2BC,cAA3B,CAA0CC,KAA1C,CAAgDC,QAAhD,aAA8D,MAAI,CAACzG,eAAnE;AACH;AACJ,aANL;AAOH;AACL;;;;iBAEI,iBAAK;AAAA;;AACD,gBAAI,CAAC,KAAKmC,UAAV,EAAsB;AAAE;AAAS;;AAEjC,iBAAKA,UAAL,GAAkB,KAAlB;AAEA,iBAAKhD,iBAAL,CAAuB4E,YAAvB;AACA,iBAAKvB,SAAL;AAEA8C,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAACoB,KAAL,EAAN;AAAA,aAAD,EAAqB,CAArB,CAAV;AACH;AACL;AACO;AACmE;AACf;AACrD;AACmD;;;;iBAErD,oBAAWzN,KAAX,EAAqB;AACjB,gBAAI,KAAKoK,IAAT,EAAe;AACX,mBAAKqB,mBAAL,CAAyBzL,KAAzB;AACH,aAFD,MAEO;AACH,mBAAKwL,UAAL,GAAkBxL,KAAlB;AACH;AACJ;AACL;AACO;AAC+D;AACI;AACf;AACrD;AAC2D;;;;iBAE7D,0BAAiBkK,EAAjB,EAA2C;AACvC,iBAAKZ,QAAL,GAAgBY,EAAhB;AACH;AACL;AACO;AACkE;AACF;AACrB;AAC5C;AACwE;;;;iBAE1E,2BAAkBA,EAAlB,EAAgC;AAC5B,iBAAKX,SAAL,GAAiBW,EAAjB;AACH;AACL;AACO;AACwE;AAC7B;AAC5C;AAC0D;;;;iBAE5D,0BAAiBwD,UAAjB,EAAsC;AAClC,iBAAKlB,QAAL,GAAgBkB,UAAhB;AACA,iBAAKxH,iBAAL,CAAuB4E,YAAvB;AACA,iBAAKhB,YAAL,CAAkBC,IAAlB;AACH;;;eAED,eAAY;AACR,mBAAO,KAAKE,QAAL,GAAgB,KAAKD,cAAL,CAAoB9H,QAApC,GAA+C,KAAK8H,cAAL,CAAoB9H,QAApB,CAA6B,CAA7B,CAAtD;AACH;;;eAED,eAAkB;AAAA;;AACd,gBAAM0J,cAAc,GAAG,KAAK5B,cAAL,CAAoB9H,QAApB,CAA6BmG,GAA7B,CAAiC,UAACrI,KAAD;AAAA,qBAAW,MAAI,CAACoK,IAAL,CAAU7K,WAAV,CAAsBmD,QAAtB,CAA+B1C,KAA/B,CAAX;AAAA,aAAjC,CAAvB;AAEA,mBAAO,KAAKiK,QAAL,GAAgB2B,cAAhB,GAAiCA,cAAc,CAAC,CAAD,CAAtD;AACH;;;eAED,eAAgB;AACZ,gBAAI,KAAK+B,KAAT,EAAgB;AAAE,qBAAO,EAAP;AAAY;;AAE9B,mBAAO,KAAKvD,IAAL,CAAU7K,WAAV,CAAsBC,YAAtB,CAAmC,KAAK0C,QAAxC,CAAP;AACH;;;eAED,eAAiB;AAAA;;AACb,gBAAI,KAAKyL,KAAT,EAAgB;AAAE,qBAAO,EAAP;AAAY;;AAE9B,mBAAO,KAAK/B,cAAL,CACFvD,GADE,CACE,UAACrI,KAAD;AAAA,qBAAW,MAAI,CAACoK,IAAL,CAAUe,eAAV,CAA0BgB,IAA1B,CAA+B,UAAC7D,MAAD;AAAA,uBAAYA,MAAM,CAACtI,KAAP,KAAiBA,KAA7B;AAAA,eAA/B,CAAX;AAAA,aADF,EAEF4N,MAFE,CAEK,UAACtF,MAAD;AAAA,qBAAYA,MAAZ;AAAA,aAFL,CAAP;AAGH;;;eAED,eAAS;AACL,mBAAO,CAAC,KAAK0B,cAAN,IAAwB,KAAKA,cAAL,CAAoB6D,OAApB,EAA/B;AACH;;;iBAED,iBAAK;AACD,mBAAO,KAAKpH,GAAL,GAAW,KAAKA,GAAL,CAASzG,KAAT,KAAmB,KAA9B,GAAsC,KAA7C;AACH;;;iBAED,uBAAc0L,KAAd,EAAoC;AAChC,gBAAI,CAAC,KAAKc,QAAV,EAAoB;AAChB,kBAAI,KAAK9B,SAAT,EAAoB;AAChB,qBAAKoD,iBAAL,CAAuBpC,KAAvB;AACH,eAFD,MAEO;AACH,qBAAKqC,mBAAL,CAAyBrC,KAAzB;AACH;AACJ;AACJ;;;iBAED,mBAAU;AACN,gBAAI,CAAC,KAAKc,QAAV,EAAoB;AAChB,mBAAKzD,QAAL,GAAgB,IAAhB;AAEA,mBAAKe,YAAL,CAAkBC,IAAlB;AACH;AACJ;AACL;AACO;AACmF;AACvB;;;;iBAE/D,kBAAS;AACL,iBAAKhB,QAAL,GAAgB,KAAhB;;AAEA,gBAAI,CAAC,KAAKyD,QAAN,IAAkB,CAAC,KAAK9B,SAA5B,EAAuC;AACnC,mBAAKnB,SAAL;AACA,mBAAKrD,iBAAL,CAAuB4E,YAAvB;AACA,mBAAKhB,YAAL,CAAkBC,IAAlB;AACH;AACJ;AACL;;;;iBAEI,sBAAa;AAAA;;AACT,iBAAKa,UAAL,CAAgBoD,cAAhB,CACKpG,IADL,CACU,6DAAK,CAAL,CADV,EAEK6C,SAFL,CAEe,YAAM;AACb,oBAAI,CAACvE,iBAAL,CAAuB+H,aAAvB;;AACA,oBAAI,CAACC,uBAAL;;AACA,oBAAI,CAACC,KAAL,CAAWnB,aAAX,CAAyB7D,SAAzB,GAAqC,MAAI,CAACA,SAA1C;;AAEA,oBAAI,CAACiB,IAAL,CAAUgE,gBAAV;AACH,aARL;AAUA,iBAAKpF,iBAAL,GAAyB,KAAKqF,cAAL,GACpB5D,SADoB,CACV;AAAA,qBAAM,MAAI,CAACkB,KAAL,EAAN;AAAA,aADU,CAAzB;AAEH;AACL;;;;iBAEI,yBAAa;AACT,mBAAO,KAAKjF,eAAL,gBAA6B,KAAKA,eAAL,CAAqB4H,KAAlD,IAA4D,EAAnE;AACH;;;iBAED,iBAAQ;AACJ,iBAAK3I,UAAL,CAAgBqH,aAAhB,CAA8BS,KAA9B;AACH;AACL;AACO;AAC0C;AAC7B;;;;iBAEhB,4BAAmB;AACf,iBAAKA,KAAL;AACH;AACL;;;;iBAEI,gCAAuBc,cAAvB,EAA4C7K,MAA5C,EAAoD;AAAA;;AAChDA,kBAAM,CAACiJ,eAAP;AAEA,iBAAK3C,cAAL,CACKwE,QADL,CACc,KAAKtM,QAAL,CAAciK,IAAd,CAAmB,UAACnM,KAAD;AAAA,qBAAW,OAAI,CAACoK,IAAL,CAAU7K,WAAV,CAAsBmD,QAAtB,CAA+B1C,KAA/B,MAA0CuO,cAAc,CAACvO,KAApE;AAAA,aAAnB,CADd;AAGA,iBAAKsJ,QAAL,CAAc,KAAKsC,cAAnB;AACH;;;iBAED,gCAAuB;AAAA;;AACnB,gBAAI,KAAK6C,aAAL,IAAsB,KAAKd,KAA3B,IAAoC,CAAC,KAAK1D,QAA9C,EAAwD;AAAE;AAAS;;AAEnE,gBAAIyE,YAAY,GAAW,CAA3B;AACA,gBAAMC,eAAe,GAAG,KAAKC,2BAAL,EAAxB;AACA,gBAAIC,sBAAsB,GAAW,CAArC;AAEA,iBAAKzC,IAAL,CAAU0C,OAAV,CAAkB,UAACC,GAAD,EAAS;AACvB,kBAAIA,GAAG,CAAC/B,aAAJ,CAAkBgC,SAAlB,GAA8BD,GAAG,CAAC/B,aAAJ,CAAkBiC,YAApD,EAAkE;AAC9DJ,sCAAsB,IAAI,OAAI,CAACK,YAAL,CAAkBH,GAAG,CAAC/B,aAAtB,CAA1B;AACA0B,4BAAY;AACf;AACJ,aALD;AAOA,iBAAK5H,WAAL,GAAmB,KAAKkD,cAAL,CAAoB9H,QAApB,CAA6B6J,MAA7B,GAAsC2C,YAAzD;;AAEA,gBAAI,KAAK5H,WAAT,EAAsB;AAClB,kBAAMqI,YAAY,GAAG,KAAKpC,OAAL,CAAaC,aAAb,CAA2BoC,aAA3B,CAAyC,oCAAzC,CAArB;AACA,kBAAMC,WAAW,GAAG,KAAKtC,OAAL,CAAaC,aAAb,CAA2BoC,aAA3B,CAAyC,6BAAzC,CAApB;AAEA,kBAAME,kBAAkB,GAAGH,YAAY,CAACH,SAAb,GAAyBG,YAAY,CAACF,YAAjE,CAJkB,CAKlB;;AACA,kBAAMM,iBAAiB,GAAW,EAAlC;AAEA,kBAAMC,gBAAgB,GAAWH,WAAW,CAACpC,qBAAZ,GAAoCwC,KAArE;AACA,kBAAMC,YAAY,GAAWF,gBAAgB,GAAGD,iBAAhD;;AAEA,kBAAID,kBAAkB,IAAKX,eAAe,GAAGe,YAA7C,EAA4D;AAAE,qBAAK5I,WAAL,GAAmB,CAAnB;AAAuB;;AAErF,kBACI+H,sBAAsB,KAAKW,gBAA3B,IACCX,sBAAsB,GAAGU,iBAA1B,GAA+CC,gBAFnD,EAGE;AACE,qBAAKtJ,iBAAL,CAAuB4E,YAAvB;AAEA;AACH,eAPD,MAOO,IAAI,CAACwE,kBAAD,IAAwBX,eAAe,GAAGY,iBAAnB,GAAwCG,YAAnE,EAAiF;AACpF,qBAAK5I,WAAL;AACH;AACJ;;AAED,iBAAKZ,iBAAL,CAAuB4E,YAAvB;AACH;;;iBAEO,0BAAiB;AACrB,gBAAM6E,QAAQ,GAAG,KAAK/E,UAAL,CAAgByC,UAAhB,CAA4BuC,aAA5B,EAAjB;AACA,gBAAMC,oBAAoB,GAAG,KAAKjF,UAAL,CAAgByC,UAAhB,CAA4BwC,oBAA5B,EAA7B;AACA,gBAAMC,WAAW,GAAG,KAAKlF,UAAL,CAAgByC,UAAhB,CAA4ByC,WAA5B,EAApB;AAEA,mBAAO,oDAAMH,QAAN,EAAgBE,oBAAhB,EAAsCC,WAAtC,CAAP;AACH;;;iBAEO,uCAA2B;AAAA;;AAC/B,gBAAMC,YAAY,GAAG,KAAKhD,OAAL,CAAaC,aAAb,CAA2BgD,SAA3B,CAAqC,IAArC,CAArB;AACAD,wBAAY,CAACX,aAAb,CAA2B,oCAA3B,EAAiEa,MAAjE;AAEA,iBAAK5J,QAAL,CAAc6J,QAAd,CAAuBH,YAAvB,EAAqC,UAArC,EAAiD,UAAjD;AACA,iBAAK1J,QAAL,CAAc6J,QAAd,CAAuBH,YAAvB,EAAqC,YAArC,EAAmD,QAAnD;AACA,iBAAK1J,QAAL,CAAc6J,QAAd,CAAuBH,YAAvB,EAAqC,KAArC,EAA4C,OAA5C;AACA,iBAAK1J,QAAL,CAAc6J,QAAd,CAAuBH,YAAvB,EAAqC,MAArC,EAA6C,GAA7C;AAEA,iBAAK1J,QAAL,CAAc8J,WAAd,CAA0B,KAAKpD,OAAL,CAAaC,aAAvC,EAAsD+C,YAAtD;AAEA,gBAAIpB,eAAe,GAAW,CAA9B;AACAoB,wBAAY,CAACK,gBAAb,CAA8B,QAA9B,EAAwCtB,OAAxC,CAAgD,UAACuB,IAAD,EAAU;AACtD1B,6BAAe,IAAI,OAAI,CAACO,YAAL,CAAkBmB,IAAlB,CAAnB;AACH,aAFD;AAIAN,wBAAY,CAACE,MAAb;AAEA,mBAAOtB,eAAP;AACH;;;iBAEO,sBAAa2B,OAAb,EAAiC;AACrC,gBAAMC,aAAa,GAAGC,MAAM,CAACrD,gBAAP,CAAwBmD,OAAxB,CAAtB;AAEA,gBAAMb,KAAK,GAAWvC,QAAQ,CAACqD,aAAa,CAACd,KAAf,CAA9B;AACA,gBAAMgB,UAAU,GAAWvD,QAAQ,CAACqD,aAAa,CAACE,UAAf,CAAnC;AACA,gBAAMC,WAAW,GAAWxD,QAAQ,CAACqD,aAAa,CAACG,WAAf,CAApC;AAEA,mBAAOjB,KAAK,GAAGgB,UAAR,GAAqBC,WAA5B;AACH;;;iBAEO,6BAAoBhF,KAApB,EAA0C;AAC9C;AACA,gBAAMiF,OAAO,GAAGjF,KAAK,CAACiF,OAAtB;AACA,gBAAMC,UAAU,GAAGD,OAAO,KAAK,oEAAZ,IAA0BA,OAAO,KAAK,kEAAtC,IACfA,OAAO,KAAK,oEADG,IACWA,OAAO,KAAK,qEAD1C;AAEA,gBAAME,SAAS,GAAGF,OAAO,KAAK,+DAAZ,IAAqBA,OAAO,KAAK,+DAAnD,CAL8C,CAMtD;;AAEQ,gBAAIE,SAAS,IAAK,CAAC,KAAK5G,QAAL,IAAiByB,KAAK,CAACoF,MAAxB,KAAmCF,UAArD,EAAkE;AAC9D;AACAlF,mBAAK,CAACqF,cAAN;AAEA,mBAAKlE,IAAL;AACH,aALD,MAKO,IAAI,CAAC,KAAK5C,QAAN,IAAkB,KAAKG,IAAL,CAAU4B,UAA5B,IAA0C,KAAK5B,IAAL,CAAU4B,UAAV,CAAqBgF,SAAnE,EAA8E;AACjF,mBAAK5G,IAAL,CAAU4B,UAAV,CAAqBgF,SAArB,CAA+BtF,KAA/B;AACH;AACJ;;;iBAEO,2BAAkBA,KAAlB,EAAwC;AAC5C;AACA,gBAAMiF,OAAO,GAAGjF,KAAK,CAACiF,OAAtB;AACA,gBAAMC,UAAU,GAAGD,OAAO,KAAK,oEAAZ,IAA0BA,OAAO,KAAK,kEAAzD;;AAEA,gBAAIC,UAAU,IAAIlF,KAAK,CAACoF,MAAxB,EAAgC;AAC5B;AACApF,mBAAK,CAACqF,cAAN;AAEA,mBAAKpF,KAAL;AACH,aALD,MAKO,IAAIgF,OAAO,KAAK,oEAAZ,IAA0BA,OAAO,KAAK,qEAA1C,EAAuD;AAC1D,qBAAO,KAAKM,iBAAL,CAAuBC,IAAvB,CAA4B,KAAK9G,IAAjC,EAAuCsB,KAAvC,CAAP;AACH,aAFM,MAEA,IAAIiF,OAAO,KAAK,8DAAhB,EAAsB;AACzBjF,mBAAK,CAACqF,cAAN;AAEA,mBAAK3G,IAAL,CAAU4B,UAAV,CAAqBmF,kBAArB;AACH,aAJM,MAIA,IAAIR,OAAO,KAAK,6DAAhB,EAAqB;AACxBjF,mBAAK,CAACqF,cAAN;AAEA,mBAAK3G,IAAL,CAAU4B,UAAV,CAAqBoF,iBAArB;AACH,aAJM,MAIA,IAAIT,OAAO,KAAK,iEAAhB,EAAyB;AAC5BjF,mBAAK,CAACqF,cAAN;AAEA,mBAAK3G,IAAL,CAAU4B,UAAV,CAAqBqF,yBAArB;AACH,aAJM,MAIA,IAAIV,OAAO,KAAK,mEAAhB,EAA2B;AAC9BjF,mBAAK,CAACqF,cAAN;AAEA,mBAAK3G,IAAL,CAAU4B,UAAV,CAAqBsF,qBAArB;AACH,aAJM,MAIA,IAAI,CAACX,OAAO,KAAK,+DAAZ,IAAqBA,OAAO,KAAK,+DAAlC,KAA4C,KAAKvG,IAAL,CAAU4B,UAAV,CAAqBuF,UAArE,EAAiF;AACpF7F,mBAAK,CAACqF,cAAN;;AAEA,kBAAI,CAAC,KAAK3F,UAAV,EAAsB;AAClB,qBAAKpB,cAAL,CAAoBwH,MAApB,CAA2B,KAAKpH,IAAL,CAAU4B,UAAV,CAAqBuF,UAArB,CAAgCrR,IAA3D;AACH,eAFD,MAEO;AACH,qBAAKyL,KAAL;AACH;AACJ,aARM,MAQA,IAAI,KAAK1B,QAAL,IAAiB0G,OAAO,KAAK,2DAA7B,IAAkCjF,KAAK,CAAC+F,OAA5C,EAAqD;AACxD/F,mBAAK,CAACqF,cAAN;AAEA,kBAAMW,oBAAoB,GAAG,KAAKvJ,OAAL,CAAawJ,IAAb,CAAkB,UAACrJ,MAAD;AAAA,uBAAY,CAACA,MAAM,CAACpG,QAApB;AAAA,eAAlB,CAA7B;AAEA,mBAAKiG,OAAL,CAAa2G,OAAb,CAAqB,UAACxG,MAAD,EAAY;AAC7B,oBAAIoJ,oBAAoB,IAAI,CAACpJ,MAAM,CAACkE,QAApC,EAA8C;AAC1ClE,wBAAM,CAACsJ,MAAP;AACH,iBAFD,MAEO;AACHtJ,wBAAM,CAACkG,QAAP;AACH;AACJ,eAND;AAOH,aAZM,MAYA;AACH,kBAAMqD,sBAAsB,GAAG,KAAKzH,IAAL,CAAU4B,UAAV,CAAqB8F,eAApD;AAEA,mBAAK1H,IAAL,CAAU4B,UAAV,CAAqBC,cAArB,CAAoC,UAApC;AACA,mBAAK7B,IAAL,CAAU4B,UAAV,CAAqBgF,SAArB,CAA+BtF,KAA/B;;AAEA,kBACI,KAAKzB,QAAL,IAAiB2G,UAAjB,IAA+BlF,KAAK,CAACqG,QAArC,IAAiD,KAAK3H,IAAL,CAAU4B,UAAV,CAAqBuF,UAAtE,IACA,KAAKnH,IAAL,CAAU4B,UAAV,CAAqB8F,eAArB,KAAyCD,sBAF7C,EAGE;AACE,qBAAKzH,IAAL,CAAU4B,UAAV,CAAqBuF,UAArB,CAAgCS,oBAAhC,CAAqDtG,KAArD;AACH;;AAED,kBAAI,KAAKN,UAAL,IAAmB,KAAKhB,IAAL,CAAU4B,UAAV,CAAqBuF,UAA5C,EAAwD;AACpD,qBAAKnH,IAAL,CAAU6H,uBAAV,CACI,KAAK7H,IAAL,CAAU4B,UAAV,CAAqBuF,UADzB,EACqC,iFAAe7F,KAAf,EAAsB,UAAtB,CADrC,EACwE,iFAAeA,KAAf,EAAsB,SAAtB,CADxE;AAGH;AACJ;AACJ;;;iBAEO,+BAAsB;AAAA;;AAC1B;AACA;AACAwG,mBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AACzB,qBAAI,CAAC3G,mBAAL,CAAyB,OAAI,CAAC1F,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAe/F,KAAhC,GAAwC,OAAI,CAAC6I,MAAtE;AACH,aAFD;AAGH;AACL;AACO;AAC8D;AACC;;;;iBAE1D,6BAAoB7I,KAApB,EAAwC;AAC5C,gBAAI,KAAKiK,QAAL,IAAiBjK,KAArB,EAA4B;AACxB,kBAAI,CAACqS,KAAK,CAACC,OAAN,CAActS,KAAd,CAAL,EAA2B;AAAE,sBAAM,+FAAN;AAAwC;;AAErE,mBAAKoK,IAAL,CAAUmI,oBAAV,CAA+BvS,KAA/B;AAEA,mBAAKwS,UAAL;AACH,aAND,MAMO;AACH,mBAAKpI,IAAL,CAAUmI,oBAAV,CAA+B,CAACvS,KAAD,CAA/B;AACH;;AAED,iBAAKkG,iBAAL,CAAuB+H,aAAvB;AACH;;;iBAEO,0BAAiB;AAAA;;AACrB,iBAAKgD,iBAAL,GAAyB,KAAK7G,IAAL,CAAUqI,SAAnC;;AAEA,iBAAKrI,IAAL,CAAUqI,SAAV,GAAsB,YAAM,CAAE,CAA9B;;AAEA,iBAAKrI,IAAL,CAAU4B,UAAV,CAAqB0G,MAArB,CACK9K,IADL,CACU,kEAAU,KAAKyB,OAAf,CADV,EAEKoB,SAFL,CAEe,YAAM;AACjB;AAAuE;AAEnE,qBAAI,CAACgD,KAAL;;AACA,qBAAI,CAAC9B,KAAL;AACH,aAPL;AASA,iBAAKvB,IAAL,CAAU4B,UAAV,CAAqB2G,MAArB,CACK/K,IADL,CACU,kEAAU,KAAKyB,OAAf,CADV,EAEKoB,SAFL,CAEe,YAAM;AACb,kBAAI,OAAI,CAACvB,UAAL,IAAmB,OAAI,CAACiF,KAA5B,EAAmC;AAC/B,uBAAI,CAACyE,0BAAL;AACH,eAFD,MAEO,IAAI,CAAC,OAAI,CAAC1J,UAAN,IAAoB,CAAC,OAAI,CAACe,QAA1B,IAAsC,OAAI,CAACG,IAAL,CAAU4B,UAAV,CAAqBuF,UAA/D,EAA2E;AAC9E,uBAAI,CAACnH,IAAL,CAAU4B,UAAV,CAAqBuF,UAArB,CAAgCS,oBAAhC;AACH;AACJ,aARL;AASH;AACL;;;;iBAEY,sBAAa;AAAA;;AACjB,gBAAI,KAAK/H,QAAT,EAAmB;AACf,kBAAM9B,OAAO,GAAG,KAAKA,OAAL,CAAa0K,OAAb,EAAhB;AAEA,mBAAK7I,cAAL,CAAoB8I,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC/B,uBAAO,OAAI,CAACC,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBF,CAApB,EAAuBC,CAAvB,EAA0B7K,OAA1B,CAAtB,GACHA,OAAO,CAAC+K,OAAR,CAAgBH,CAAhB,IAAqB5K,OAAO,CAAC+K,OAAR,CAAgBF,CAAhB,CADzB;AAEH,eAHD;AAKA,mBAAKlJ,YAAL,CAAkBC,IAAlB;AACH;AACJ;AACL;AACO;AACyE;AAClD;;;;iBAElB,kCAAyB;AAC7B,gBAAI,KAAK4D,KAAL,IAAc,CAAC,KAAKvD,IAAL,CAAU4B,UAA7B,EAAyC;AAAE;AAAS;;AAEpD,gBAAMmH,kBAAkB,GAAG,KAAKlJ,QAAL,GAAgB,KAAK2B,cAAL,CAAoB,CAApB,CAAhB,GAAyC,KAAKA,cAAzE;AAEA,gBAAM2C,cAAc,GAAG,KAAKpG,OAAL,CAAagE,IAAb,CAAkB,UAAC7D,MAAD;AAAA,qBAAYA,MAAM,CAACtI,KAAP,KAAiBmT,kBAA7B;AAAA,aAAlB,CAAvB;;AAEA,gBAAI5E,cAAJ,EAAoB;AAChB,mBAAKnE,IAAL,CAAU4B,UAAV,CAAqBE,aAArB,CAAmCqC,cAAnC;AACH;AACJ;AACL;;;;iBAEY,sCAA6B;AACjC,gBAAM6E,iBAAiB,GAAG,KAAKhJ,IAAL,CAAU4B,UAAV,CAAqB8F,eAArB,IAAwC,CAAlE;AAEA,iBAAK3D,KAAL,CAAWnB,aAAX,CAAyB7D,SAAzB,GAAqC,wFACjCiK,iBADiC,EAEjC,KAAKhJ,IAAL,CAAUiJ,aAAV,EAFiC,EAGjC,KAAKlF,KAAL,CAAWnB,aAAX,CAAyB7D,SAHQ,EAIjC,+EAJiC,CAArC;AAMH;AACL;AACO;AACqF;AACH;AACG;AACH;AAChB;;;;iBAE7D,mCAA0B;AAC9B,gBAAMmK,WAAW,GAAG,KAAK1I,UAAL,CAAgByC,UAAhB,CAA2BC,cAA3B,CAA0CL,qBAA1C,EAApB;AACA,gBAAMsG,YAAY,GAAG,KAAKpN,aAAL,CAAmBqN,eAAnB,EAArB;AACA,gBAAMC,KAAK,GAAG,KAAKA,KAAL,EAAd;AACA;;AACA,gBAAMC,YAAY,GAAG,iFAAyB,CAA9C;AACA,gBAAI7I,OAAO,GAAW,8EAAtB,CAN8B,CAOtC;;AAEQ,gBAAI,CAAC4I,KAAL,EAAY;AAAE5I,qBAAO,IAAI,CAAC,CAAZ;AAAgB,aATA,CAUtC;;;AAEQ,gBAAM8I,YAAY,GAAG,KAAKL,WAAW,CAACM,IAAZ,GAAmB/I,OAAnB,IAA8B4I,KAAK,GAAGC,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA,gBAAMG,aAAa,GAAGP,WAAW,CAACQ,KAAZ,GAAoBjJ,OAApB,GAA8B0I,YAAY,CAAC9D,KAA3C,IACfgE,KAAK,GAAG,CAAH,GAAOC,YADG,CAAtB,CAb8B,CAetC;;AAEQ,gBAAIC,YAAY,GAAG,CAAnB,EAAsB;AAClB9I,qBAAO,IAAI8I,YAAY,GAAG,qFAA1B;AACH,aAFD,MAEO,IAAIE,aAAa,GAAG,CAApB,EAAuB;AAC1BhJ,qBAAO,IAAIgJ,aAAa,GAAG,qFAA3B;AACH,aArB6B,CAsBtC;AAC8F;AACG;;;AAEzF,iBAAKjJ,UAAL,CAAgBC,OAAhB,GAA0BkJ,IAAI,CAACC,KAAL,CAAWnJ,OAAX,CAA1B;AACA,iBAAKD,UAAL,CAAgByC,UAAhB,CAA2B4G,cAA3B;AACH;;;;QA95B6BjO,qB;;wDAhCvB,C,EAAD;AAAA,eAAC,wBACG,gEAAgB,wDAAhB,CADH,EAEG,gEAAc,+DAAd,CAFH,EAGP,mIAHO,EAGP,qHAHO,EAGP,wHAHO,EAGP,0IAHO,EAGP,kJAHO,EAGP,iIAHO,EAGP,yIAHO,EAGP,oIAHO,EAGP,0HAHO,EAGP,sIAHO,EAGP,8IAHO,EAGP,8HAHO,EAGP,4HAHO,EAGP,oIAHO,CAAD;AAGN,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAA+B;AAAA,wBAE/B,cAF+B;AAEtB,sBAAY,EAAU,QAFA;AAEC,sBAChC,UAH+B;AAGhB,2BAAiB,iBAHD;AAGM,qBACrC;AAJ+B,S;AAId,kC;AAA8B,mBAC/C,iEAAM,CACK;AAAA,mBAAgB,iFAAhB;AAAgB,qBACvB;AADO,SADL,EAE+B;AAAA;AACjC;AADiC,SAF/B,CAAN,CAD+C,EAIT,wEAJS,EAM1B,kEAN0B,C;AAO3C,0BAA6B,K;AAAA,iB;AAAA,YAC7B,I;AAAA,gBAAiB,EAAE,oBAAF,EAAoB,EAApB,EAAoB,CAApB,EAAoB,yBAApB,GAEN,WAAU,kBAAV,EACX,SADW,EACE,EADF,CAFM,EAGJ,+BAAuB,CAAvB,EAAuB,UAAvB,CAHI,EAIR,CAAE,OAAF,EAAE,6BAAF,EACT,CADS,EACC,cADD,CAJQ,EAKG,gBACpB,CADoB,EACpB,cADoB,CALH,EAME,gCAAwB,CAAxB,EAAwB,OAAxB,EACtB,CADsB,EACtB,MADsB,CANF,EAOpB,IACD,+BADC,CAPoB,EASjB,kCAAiC,CAAjC,EAAiC,uBAAjC,CATiB,EAUjB,0BAAgC,EAAhC,EAAgC,iCAAhC,EAEJ,EAFI,EAEO,CAFP,EAEO,gCAFP,EAGW,kCAHX,EAG4C,mCAH5C,EAIE,2BAJF,EAIiC,yBAJjC,EAI+C,8BAJ/C,EAKH,6BALG,EAKH,4BALG,EAKH,eALG,EAKH,QALG,EAKH,QALG,CAViB,EAepB,kCAfoB,EAepB,eAfoB,EAepB,iFAfoB,EAepB,mBAfoB,EAepB,qDAfoB,EAepB,4DAfoB,EAepB,gEAfoB,EAepB,mCAfoB,EAepB,uCAfoB,EAepB,iCAfoB,EAepB,gEAfoB,EAepB,wCAfoB,EAepB,0BAfoB,EAepB,6BAfoB,EAepB,mDAfoB,EAepB,wCAfoB,EAepB,qCAfoB,EAepB,yBAfoB,EAepB,aAfoB,EAepB,8BAfoB,EAepB,wBAfoB,C;AAepB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACJ,wB;AAAA;AAAA,sB,yFAAA,E,wFAAA;AAAA,S;;;AACK;;AAAmB;AAAA,gBAAsC;AAAA,gBAjJ3D;AAiJ2D,SAAtC,EAhJvB;AAAA,gBANE;AAMF,SAgJuB,EArJvB;AAAA,gBAPE;AAOF,SAqJuB,EA3JtB;AAAA,gBAcC;AAdD,SA2JsB,EA5IvB;AAAA,gBAME;AANF,SA4IuB,EArIvB;AAAA,gBAmCE;AAnCF,SAqIuB,EAjGvB;AAAA;AAAA;AAAA,kBAqXO,oDArXP;AAqXa,mBAAC,iFAAD;AArXb;AAAA,SAiGuB,EAoRyB;AAAA;AAAA;AAAA,kBACzC;AADyC,aACjC;AAAA,kBAAI,oDAAJ;AAAU,mBAAC,6DAAD;AAAV,WADiC;AAAA,SApRzB,EAqRyB;AAAA;AAAA;AAAA,kBACzC;AADyC,aACjC;AAAA,kBAAI,oDAAJ;AAAU,mBAAC,qEAAD;AAAV,WADiC;AAAA,SArRzB,EAsRyB;AAAA,gBAvbzC,gEAubyC;AAvb3B;AAAA,kBAwbd;AAxbc;AAub2B,SAtRzB,EAuRD;AAAA,gBAhZpB,sDAgZoB;AAhZd;AAAA,kBAiZD;AAjZC;AAgZc,SAvRC,EAwRD;AAAA,gBApZpB,kEAoZoB;AApZF;AAAA,kBAqZb;AArZa;AAoZE,SAxRC,EAyRD;AAAA,gBAnWJ,0EAmWI;AAnWS,oBAAF;AAAA,kBAoWtB;AApWsB;AAmWP,SAzRC,EA0RD;AAAA,gBApZpB,yDAoZoB;AApZX;AAAA,kBAqZJ;AArZI,aAqZI;AAAA,kBAAI;AAAJ,WArZJ;AAoZW,SA1RC,EA2RO;AAAA,gBAnZ5B,uDAmZ4B;AAnZrB;AAAA,kBAoZF;AApZE,aAoZM;AAAA,kBAAI;AAAJ,WApZN;AAmZqB,SA3RP,EA4RO;AAAA,gBAzZ5B,+DAyZ4B;AAzZb;AAAA,kBA0ZV;AA1ZU,aA0ZF;AAAA,kBAAI;AAAJ,WA1ZE;AAyZa,SA5RP;AAAA;;AA6RS;AAAgC;AAAA,gBApO7D,uDAoO6D;AApOpD,iBAAC,SAAD,EAAY;AAAE,sBAAQ;AAAV,WAAZ;AAoOoD,UAAhC;AApOgB;AAAA,gBAE7C,uDAF6C;AAEpC,iBAAC,OAAD,EAAU;AAAE,sBAAQ;AAAV,WAAV;AAFoC,UAoOhB;AAlOc;AAAA,gBAE3C,uDAF2C;AAElC,iBAAC,wEAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAFkC,UAkOd;AAhO0B;AAAA,gBAEvD,uDAFuD;AAE9C,iBAAC,oBAAD,EAAuB;AAAE,sBAAQ;AAAV,WAAvB;AAF8C,UAgO1B;AA9N2B;AAAA,gBAExD,0DAFwD;AAE5C,iBAAC,6DAAD;AAF4C,UA8N3B;AA5NJ;AAAA,gBAEzB,0DAFyB;AAEb,iBAAC,iBAAD,EAAoB;AAAE,sBAAQ;AAAV,WAApB;AAFa,UA4NI;AA1N0B;AAAA,gBAGvD,0DAHuD;AAG3C,iBAACP,mBAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAH2C,UA0N1B;AAvN6B;AAAA,gBAE1D,0DAF0D;AAE9C,iBAAC,uEAAD,EAAkB;AAAE,sBAAQ;AAAV,WAAlB;AAF8C,UAuN7B;AArNyB;AAAA,gBAEtD;AAFsD,UAqNzB;AAnNnB;AAAA,gBAGV;AAHU,UAmNmB;AAhNlB;AAAA,gBAGX,oDAHW;AAGL,iBAAC,QAAD;AAHK,UAgNkB;AA7MP;AAAA,gBAItB,oDAJsB;AAIhB,iBAAC,QAAD;AAJgB,UA6MO;AAzMP;AAAA,gBAItB;AAJsB,UAyMO;AArMlB;AAAA,gBAOX;AAPW,UAqMkB;AA9LlB;AAAA,gBAGX;AAHW,UA8LkB;AA3LnB;AAAA,gBAEV;AAFU,UA2LmB;AAzLnB;AAAA,gBAGV;AAHU,UAyLmB;AAtLnB;AAAA,gBAMV;AANU,UAsLmB;AAhLnB;AAAA,gBAgBV;AAhBU,UAgLmB;AA/JhC;AAAA,gBAYG;AAZH,UA+JgC;AAlJhC;AAAA,gBAYG;AAZH,UAkJgC;AArIhC;AAAA,gBAcG;AAdH,UAqIgC;AAtHhC;AAAA,gBAiBG;AAjBH,UAsHgC;AApGhC;AAAA,gBAwBG;AAxBH,UAoGgC;AA3EhC;AAAA,gBAWG;AAXH,UA2EgC;AA/DhC;AAAA,gBAyLG;AAzLH;AA+DgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtarByO,kB;;;;oEAdJ,C,EAAC;AAAA,yBACN,kBADM;AACG,O;;wBACO,K,GAAA,+DACC;AAAA;AAAA,OADD,C;wBAEC,K,GACb,+DAAY;AAAA,iBACZ,8FADY;AAEZ,eAAY,I,4DAAA,EACU,kEADV,EAEf,kEAFe,EAGN,oEAHM,EAG6B,oEAH7B,E,oEAAA,EAID,8EAJC,GAIiC,4DAJjC;AAFA,OAAZ,C;;mBAOQ;AAAA,6CAAmC,SAAnC,KACf;AAAA;AAAA;AAAA;AAAA;AAAA,kF,kEAAA,E,kEAAA,E,oEAAA,E,oEAAA,E,oEAAA,E,8EAAA;WAAA;;;;AAAA,UADe;;;;;;;;;;;;;;ACxBhB;AACA;AACA","file":"19-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlatTreeControl, CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport * as i1 from '@ptsecurity/mosaic/form-field';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport * as i5 from '@ptsecurity/mosaic/icon';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McInputModule } from '@ptsecurity/mosaic/input';\nimport * as i4 from '@ptsecurity/mosaic/tree';\nimport { McTreeFlattener, McTreeFlatDataSource, McTreeModule } from '@ptsecurity/mosaic/tree';\nimport * as i2 from '@ptsecurity/mosaic/tree-select';\nimport { McTreeSelectModule } from '@ptsecurity/mosaic/tree-select';\n\n/* tslint:disable:no-reserved-keywords */\nfunction TreeSelectMultipleOverviewExample_mc_tree_option_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.treeControl.getViewValue(node_r3), \" \");\n} }\nfunction TreeSelectMultipleOverviewExample_mc_tree_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"i\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"transform\", ctx_r1.treeControl.isExpanded(node_r4) ? \"\" : \"rotate(-90deg)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.treeControl.getViewValue(node_r4), \" \");\n} }\nclass FileNode$1 {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode$1 {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree$1(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode$1();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree$1(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT$1 = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic Select\n */\nclass TreeSelectMultipleOverviewExample {\n    constructor() {\n        this.selected = '';\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode$1();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            return `${node.name} view`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree$1(DATA_OBJECT$1, 0);\n    }\n    hasChild(_, nodeData) {\n        return nodeData.expandable;\n    }\n}\nTreeSelectMultipleOverviewExample.ɵfac = function TreeSelectMultipleOverviewExample_Factory(t) { return new (t || TreeSelectMultipleOverviewExample)(); };\nTreeSelectMultipleOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeSelectMultipleOverviewExample, selectors: [[\"tree-select-multiple-overview-example\"]], decls: 7, vars: 5, consts: [[3, \"multiple\", \"ngModel\", \"ngModelChange\"], [3, \"dataSource\", \"treeControl\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcSelectCleaner\", \"\"], [\"mcTreeNodePadding\", \"\"], [\"mc-icon\", \"mc-angle-down-S_16\", \"mcTreeNodeToggle\", \"\"]], template: function TreeSelectMultipleOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-form-field\");\n        i0.ɵɵelementStart(1, \"mc-tree-select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeSelectMultipleOverviewExample_Template_mc_tree_select_ngModelChange_1_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(2, \"mc-tree-selection\", 1);\n        i0.ɵɵtemplate(3, TreeSelectMultipleOverviewExample_mc_tree_option_3_Template, 2, 1, \"mc-tree-option\", 2);\n        i0.ɵɵtemplate(4, TreeSelectMultipleOverviewExample_mc_tree_option_4_Template, 3, 3, \"mc-tree-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"mc-cleaner\", null, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"multiple\", true)(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1.McFormField, i2.McTreeSelect, i3.NgControlStatus, i3.NgModel, i4.McTreeSelection, i4.McTreeNodeDef, i1.McCleaner, i4.McTreeOption, i4.McTreeNodePadding, i5.McIcon, i5.McIconCSSStyler, i4.McTreeNodeToggleDirective], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeSelectMultipleOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-select-multiple-overview-example',\n                templateUrl: 'tree-select-multiple-overview-example.html',\n                styleUrls: ['tree-select-multiple-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\n/* tslint:disable:no-reserved-keywords */\nfunction TreeSelectOverviewExample_mc_tree_option_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.treeControl.getViewValue(node_r3), \" \");\n} }\nfunction TreeSelectOverviewExample_mc_tree_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-tree-option\", 5);\n    i0.ɵɵelement(1, \"i\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"transform\", ctx_r1.treeControl.isExpanded(node_r4) ? \"\" : \"rotate(-90deg)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.treeControl.getViewValue(node_r4), \" \");\n} }\nclass FileNode {\n}\n/** Flat node with expandable and level information */\nclass FileFlatNode {\n}\n/**\n * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n * The return value is the list of `FileNode`.\n */\nfunction buildFileTree(value, level) {\n    const data = [];\n    for (const k of Object.keys(value)) {\n        const v = value[k];\n        const node = new FileNode();\n        node.name = `${k}`;\n        if (v === null || v === undefined) {\n            // no action\n        }\n        else if (typeof v === 'object') {\n            node.children = buildFileTree(v, level + 1);\n        }\n        else {\n            node.type = v;\n        }\n        data.push(node);\n    }\n    return data;\n}\nconst DATA_OBJECT = {\n    docs: 'app',\n    src: {\n        cdk: {\n            a11ly: {\n                'aria-describer': {\n                    'aria-describer': 'ts',\n                    'aria-describer.spec': 'ts',\n                    'aria-reference': 'ts',\n                    'aria-reference.spec': 'ts'\n                },\n                'focus-monitor': {\n                    'focus-monitor': 'ts',\n                    'focus-monitor.spec': 'ts'\n                }\n            }\n        },\n        documentation: {\n            source: '',\n            tools: ''\n        },\n        mosaic: {\n            autocomplete: '',\n            button: '',\n            'button-toggle': '',\n            index: 'ts',\n            package: 'json',\n            version: 'ts'\n        },\n        'mosaic-dev': {\n            alert: '',\n            badge: ''\n        },\n        'mosaic-examples': '',\n        'mosaic-moment-adapter': '',\n        README: 'md',\n        'tsconfig.build': 'json',\n        wallabyTest: 'ts'\n    },\n    scripts: {\n        deploy: {\n            'cleanup-preview': 'ts',\n            'publish-artifacts': 'sh',\n            'publish-docs': 'sh',\n            'publish-docs-preview': 'ts'\n        },\n        'tsconfig.deploy': 'json'\n    },\n    tests: ''\n};\n/**\n * @title Basic Select\n */\nclass TreeSelectOverviewExample {\n    constructor() {\n        this.selected = '';\n        this.transformer = (node, level, parent) => {\n            const flatNode = new FileFlatNode();\n            flatNode.name = node.name;\n            flatNode.parent = parent;\n            flatNode.type = node.type;\n            flatNode.level = level;\n            flatNode.expandable = !!node.children;\n            return flatNode;\n        };\n        this.getLevel = (node) => {\n            return node.level;\n        };\n        this.isExpandable = (node) => {\n            return node.expandable;\n        };\n        this.getChildren = (node) => {\n            return node.children;\n        };\n        this.getValue = (node) => {\n            return node.name;\n        };\n        this.getViewValue = (node) => {\n            return `${node.name} view`;\n        };\n        this.treeFlattener = new McTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable, this.getValue, this.getViewValue);\n        this.dataSource = new McTreeFlatDataSource(this.treeControl, this.treeFlattener);\n        this.dataSource.data = buildFileTree(DATA_OBJECT, 0);\n    }\n    hasChild(_, nodeData) {\n        return nodeData.expandable;\n    }\n}\nTreeSelectOverviewExample.ɵfac = function TreeSelectOverviewExample_Factory(t) { return new (t || TreeSelectOverviewExample)(); };\nTreeSelectOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeSelectOverviewExample, selectors: [[\"tree-select-overview-example\"]], decls: 7, vars: 4, consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"dataSource\", \"treeControl\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\"], [\"mcTreeNodePadding\", \"\", 4, \"mcTreeNodeDef\", \"mcTreeNodeDefWhen\"], [\"mcSelectCleaner\", \"\"], [\"mcTreeNodePadding\", \"\"], [\"mc-icon\", \"mc-angle-down-S_16\", \"mcTreeNodeToggle\", \"\"]], template: function TreeSelectOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-form-field\");\n        i0.ɵɵelementStart(1, \"mc-tree-select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TreeSelectOverviewExample_Template_mc_tree_select_ngModelChange_1_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(2, \"mc-tree-selection\", 1);\n        i0.ɵɵtemplate(3, TreeSelectOverviewExample_mc_tree_option_3_Template, 2, 1, \"mc-tree-option\", 2);\n        i0.ɵɵtemplate(4, TreeSelectOverviewExample_mc_tree_option_4_Template, 3, 3, \"mc-tree-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"mc-cleaner\", null, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcTreeNodeDefWhen\", ctx.hasChild);\n    } }, directives: [i1.McFormField, i2.McTreeSelect, i3.NgControlStatus, i3.NgModel, i4.McTreeSelection, i4.McTreeNodeDef, i1.McCleaner, i4.McTreeOption, i4.McTreeNodePadding, i5.McIcon, i5.McIconCSSStyler, i4.McTreeNodeToggleDirective], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeSelectOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'tree-select-overview-example',\n                templateUrl: 'tree-select-overview-example.html',\n                styleUrls: ['tree-select-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\nconst EXAMPLES = [\n    TreeSelectOverviewExample,\n    TreeSelectMultipleOverviewExample\n];\nclass TreeSelectExamplesModule {\n}\nTreeSelectExamplesModule.ɵfac = function TreeSelectExamplesModule_Factory(t) { return new (t || TreeSelectExamplesModule)(); };\nTreeSelectExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: TreeSelectExamplesModule });\nTreeSelectExamplesModule.ɵinj = i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            CdkTreeModule,\n            FormsModule,\n            ReactiveFormsModule,\n            McFormFieldModule,\n            McTreeModule,\n            McTreeSelectModule,\n            McInputModule,\n            McIconModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TreeSelectExamplesModule, { declarations: [TreeSelectOverviewExample,\n        TreeSelectMultipleOverviewExample], imports: [CommonModule,\n        CdkTreeModule,\n        FormsModule,\n        ReactiveFormsModule,\n        McFormFieldModule,\n        McTreeModule,\n        McTreeSelectModule,\n        McInputModule,\n        McIconModule], exports: [TreeSelectOverviewExample,\n        TreeSelectMultipleOverviewExample] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeSelectExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    CdkTreeModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    McFormFieldModule,\n                    McTreeModule,\n                    McTreeSelectModule,\n                    McInputModule,\n                    McIconModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TreeSelectExamplesModule, TreeSelectMultipleOverviewExample, TreeSelectOverviewExample };\n//# sourceMappingURL=ptsecurity-mosaic-examples-mosaic-tree-select.js.map\n","/* tslint:disable:no-empty */\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@angular/cdk/overlay';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControlName,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    NgModel,\n    Validator\n} from '@angular/forms';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A,\n    PAGE_UP,\n    PAGE_DOWN,\n    hasModifierKey\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n    MC_SELECT_SCROLL_STRATEGY,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MultipleMode,\n\n    MC_VALIDATION,\n    setMosaicValidation,\n    McValidationOptions\n} from '@ptsecurity/mosaic/core';\nimport { McCleaner, McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tags';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject, Subscription } from 'rxjs';\nimport {\n    filter,\n    map,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged,\n    startWith\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeSelect, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.scss'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-invalid]': 'errorState',\n\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(click)': 'toggle()',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<McTreeOption>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'select';\n\n    hiddenItems: number = 0;\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<any>;\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    options: QueryList<McTreeOption>;\n\n    @ViewChild('trigger', { static: false }) trigger: ElementRef;\n\n    @ViewChild('panel', { static: false }) panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay, { static: false }) overlayDir: CdkConnectedOverlay;\n\n    @ViewChild('hiddenItemsCounter', { static: false }) hiddenItemsCounter: ElementRef;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ContentChild('mcSelectCleaner', { static: true }) cleaner: McCleaner;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger, { static: false }) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection, { static: false }) tree: McTreeSelection<McTreeOption>;\n\n    @Input() hiddenItemsText: string = '...ещё';\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    @Input() backdropClass: string = 'cdk-overlay-transparent-backdrop';\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McTreeOption, b: McTreeOption, options: McTreeOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return this.options.changes.pipe(\n                startWith(this.options),\n                switchMap(() => merge(...this.options.map((option) => option.onSelectionChange)))\n            );\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    get value(): any {\n        return this.multiple ? this.tree.getSelectedValues() : this.tree.getSelectedValues()[0];\n    }\n\n    private _value: any = null;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    @Input()\n    get hasBackdrop(): boolean {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    private _hasBackdrop: boolean = false;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.cleaner && this.selectionModel.hasValue();\n    }\n\n    private closeSubscription = Subscription.EMPTY;\n\n    private _panelOpen = false;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private tempValues: string | string[] | null;\n\n    constructor(\n        elementRef: ElementRef,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly viewportRuler: ViewportRuler,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory,\n        @Optional() @Inject(NG_VALIDATORS) public rawValidators: Validator[],\n        @Optional() @Inject(MC_VALIDATION) private mcValidation: McValidationOptions,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Optional() @Self() ngControl: NgControl,\n        @Optional() @Self() public ngModel: NgModel,\n        @Optional() @Self() public formControlName: FormControlName\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        if (this.mcValidation.useValidation) {\n            setMosaicValidation(this);\n        }\n\n        this.tree.resetFocusedItemOnBlur = false;\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<any>(this.multiple);\n        this.tree.ngAfterContentInit();\n\n        this.initKeyManager();\n\n        this.options = this.tree.renderedOptions;\n        this.tree.autoSelect = this.autoSelect;\n\n        if (this.tree.multipleMode === null) {\n            this.tree.multipleMode = this.multiple ? MultipleMode.CHECKBOX : null;\n        }\n\n        if (this.multiple) {\n            this.tree.noUnselectLast = false;\n        }\n\n        if (this.tempValues) {\n            this.setSelectionByValue(this.tempValues);\n            this.tempValues = null;\n        }\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                if (!this.multiple && this.panelOpen && event.isUserInput) {\n                    this.close();\n                }\n            });\n\n        this.tree.selectionChange\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                this.onChange(this.selectedValues);\n\n                this.selectionChange.emit(new McTreeSelectChange(this, event.option));\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                if (event.added.length) {\n                    this.tree.keyManager.setFocusOrigin('program');\n                    this.tree.keyManager.setActiveItem(\n                        this.options.find((option) => option.data === event.added[0]) as any\n                    );\n                }\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        setTimeout(() => this.calculateHiddenItems(), 0);\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n        this.closeSubscription.unsubscribe();\n    }\n\n    @Input()\n    hiddenItemsTextFormatter(hiddenItemsText: string, hiddenItems: number): string {\n        return `${hiddenItemsText} ${hiddenItems}`;\n    }\n\n    clearValue($event): void {\n        $event.stopPropagation();\n\n        this.selectionModel.clear();\n        this.tree.keyManager.setActiveItem(-1);\n\n        this.setSelectionByValue([]);\n\n        this.onChange(this.selectedValues);\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n\n        setTimeout(() => this.highlightCorrectOption());\n\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (!this._panelOpen) { return; }\n\n        this._panelOpen = false;\n\n        this.changeDetectorRef.markForCheck();\n        this.onTouched();\n\n        setTimeout(() => this.focus(), 0);\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.tree) {\n            this.setSelectionByValue(value);\n        } else {\n            this.tempValues = value;\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): any {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get selectedValues(): any {\n        const selectedValues = this.selectionModel.selected.map((value) => this.tree.treeControl.getValue(value));\n\n        return this.multiple ? selectedValues : selectedValues[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return this.tree.treeControl.getViewValue(this.selected);\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        return this.selectedValues\n            .map((value) => this.tree.renderedOptions.find((option) => option.value === value))\n            .filter((option) => option);\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n\n                this.tree.updateScrollSize();\n            });\n\n        this.closeSubscription = this.closingActions()\n            .subscribe(() => this.close());\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: any, $event) {\n        $event.stopPropagation();\n\n        this.selectionModel\n            .deselect(this.selected.find((value) => this.tree.treeControl.getValue(value) === selectedOption.value));\n\n        this.onChange(this.selectedValues);\n    }\n\n    calculateHiddenItems() {\n        if (this.customTrigger || this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += this.getItemWidth(tag.nativeElement);\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private closingActions() {\n        const backdrop = this.overlayDir.overlayRef!.backdropClick();\n        const outsidePointerEvents = this.overlayDir.overlayRef!.outsidePointerEvents();\n        const detachments = this.overlayDir.overlayRef!.detachments();\n\n        return merge(backdrop, outsidePointerEvents, detachments);\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += this.getItemWidth(item);\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private getItemWidth(element: HTMLElement): number {\n        const computedStyle = window.getComputedStyle(element);\n\n        const width: number = parseInt(computedStyle.width as string);\n        const marginLeft: number = parseInt(computedStyle.marginLeft as string);\n        const marginRight: number = parseInt(computedStyle.marginRight as string);\n\n        return width + marginLeft + marginRight;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME) {\n            event.preventDefault();\n\n            this.tree.keyManager.setFirstItemActive();\n        } else if (keyCode === END) {\n            event.preventDefault();\n\n            this.tree.keyManager.setLastItemActive();\n        } else if (keyCode === PAGE_UP) {\n            event.preventDefault();\n\n            this.tree.keyManager.setPreviousPageItemActive();\n        } else if (keyCode === PAGE_DOWN) {\n            event.preventDefault();\n\n            this.tree.keyManager.setNextPageItemActive();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            if (!this.autoSelect) {\n                this.selectionModel.toggle(this.tree.keyManager.activeItem.data);\n            } else {\n                this.close();\n            }\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.setFocusOrigin('keyboard');\n            this.tree.keyManager.onKeydown(event);\n\n            if (\n                this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex\n            ) {\n                this.tree.keyManager.activeItem.selectViaInteraction(event);\n            }\n\n            if (this.autoSelect && this.tree.keyManager.activeItem) {\n                this.tree.setSelectedOptionsByKey(\n                    this.tree.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n                );\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.tree.setOptionsFromValues(value);\n\n            this.sortValues();\n        } else {\n            this.tree.setOptionsFromValues([value]);\n        }\n\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.empty || !this.tree.keyManager) { return; }\n\n        const firstSelectedValue = this.multiple ? this.selectedValues[0] : this.selectedValues;\n\n        const selectedOption = this.options.find((option) => option.value === firstSelectedValue);\n\n        if (selectedOption) {\n            this.tree.keyManager.setActiveItem(selectedOption);\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.tree.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagsModule } from '@ptsecurity/mosaic/tags';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagsModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}