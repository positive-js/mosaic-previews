{"version":3,"file":"node_modules_ptsecurity_mosaic-examples_fesm2020_ptsecurity-mosaic-examples-mosaic-datepicker_mjs.js","mappings":"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","sources":["./packages/mosaic/datepicker/calendar-body.component.ts","./packages/mosaic/datepicker/calendar-body.html","./packages/mosaic/datepicker/month-view.html","./packages/mosaic/datepicker/calendar.html","./packages/mosaic/datepicker/datepicker-toggle.html","./packages/mosaic/datepicker/datepicker-errors.ts","./packages/mosaic/datepicker/datepicker-intl.ts","./packages/mosaic/datepicker/month-view.component.ts","./packages/mosaic/datepicker/multi-year-view.component.ts","./packages/mosaic/datepicker/multi-year-view.html","./packages/mosaic/datepicker/year-view.component.ts","./packages/mosaic/datepicker/year-view.html","./packages/mosaic/datepicker/calendar.component.ts","./packages/mosaic/datepicker/calendar-header.html","./packages/mosaic/datepicker/datepicker-animations.ts","./packages/mosaic/datepicker/datepicker.component.ts","./packages/mosaic/datepicker/datepicker-content.html","./packages/mosaic/datepicker/datepicker-input.directive.ts","./packages/mosaic/datepicker/datepicker-toggle.component.ts","./packages/mosaic/datepicker/datepicker-module.ts","./packages/mosaic/datepicker/ptsecurity-mosaic-datepicker.ts","./node_modules/@angular/common/locales/de.mjs","./node_modules/@ptsecurity/mosaic-examples/fesm2020/ptsecurity-mosaic-examples-mosaic-datepicker.mjs"],"sourcesContent":["// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    exportAs: 'mcCalendarBody',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.scss'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private readonly elementRef: ElementRef<HTMLElement>, private readonly ngZone: NgZone) {}\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","<!--\n  If there's not enough space in the first row, create a separate label row. We mark this row as\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\n-->\n<tr *ngIf=\"firstRowOffset < labelMinRequiredCells\">\n    <td class=\"mc-calendar__body-label\" [attr.colspan]=\"numCols\">\n        {{ label }}\n    </td>\n</tr>\n\n<!-- Create the first row separately so we can include a special spacer cell. -->\n<tr *ngFor=\"let row of rows; let rowIndex = index\">\n    <!--\n      We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\n      The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\n      percentage of the width (a variant of the trick described here:\n      https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\n    -->\n    <td *ngIf=\"rowIndex === 0 && firstRowOffset\"\n        class=\"mc-calendar__body-label\"\n        [attr.colspan]=\"firstRowOffset\">\n        {{ firstRowOffset >= labelMinRequiredCells ? label : '' }}\n    </td>\n    <td *ngFor=\"let item of row; let colIndex = index\"\n        class=\"mc-calendar__body-cell\"\n        [ngClass]=\"item.cssClasses!\"\n        [tabindex]=\"isActiveCell(rowIndex, colIndex) ? 0 : -1\"\n        [class.mc-calendar__body_disabled]=\"!item.enabled\"\n        [class.mc-calendar__body_active]=\"isActiveCell(rowIndex, colIndex)\"\n        (click)=\"cellClicked(item)\"\n        [style.width]=\"cellWidth\"\n        [style.paddingTop]=\"cellPadding\"\n        [style.paddingBottom]=\"cellPadding\">\n        <div class=\"mc-calendar__body-cell-content\"\n             [class.mc-selected]=\"selectedValue === item.value\"\n             [class.mc-calendar__body-today]=\"todayValue === item.value\">\n            {{ item.displayValue }}\n        </div>\n    </td>\n</tr>\n","<table class=\"mc-calendar__table\">\n    <thead class=\"mc-calendar__table-header\">\n        <tr>\n            <th *ngFor=\"let day of weekdays\" [attr.aria-label]=\"day.long\">{{day.narrow}}</th>\n        </tr>\n        <tr>\n            <th class=\"mc-calendar__table-header-divider\" colspan=\"7\"></th>\n        </tr>\n    </thead>\n    <tbody mc-calendar-body\n           [label]=\"monthLabel\"\n           [rows]=\"weeks\"\n           [todayValue]=\"todayDate!\"\n           [selectedValue]=\"selectedDate!\"\n           [labelMinRequiredCells]=\"3\"\n           [activeCell]=\"dateAdapter.getDate(activeDate) - 1\"\n           (selectedValueChange)=\"dateSelected($event)\"\n           (keydown)=\"handleCalendarBodyKeydown($event)\">\n    </tbody>\n</table>\n","<ng-template [cdkPortalOutlet]=\"calendarHeaderPortal\"></ng-template>\n\n<div class=\"mc-calendar__content\" [ngSwitch]=\"currentView\">\n    <mc-month-view\n        *ngSwitchCase=\"'month'\"\n        [(activeDate)]=\"activeDate\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [maxDate]=\"maxDate\"\n        [minDate]=\"minDate\"\n        [dateClass]=\"dateClass\"\n        (selectedChange)=\"dateSelected($event!)\"\n        (userSelection)=\"userSelected()\">\n    </mc-month-view>\n\n    <mc-year-view\n        *ngSwitchCase=\"'year'\"\n        [(activeDate)]=\"activeDate\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [maxDate]=\"maxDate\"\n        [minDate]=\"minDate\"\n        (monthSelected)=\"monthSelectedInYearView($event)\"\n        (selectedChange)=\"goToDateInView($event, 'multi-year')\">\n    </mc-year-view>\n\n    <mc-multi-year-view\n        *ngSwitchCase=\"'multi-year'\"\n        [(activeDate)]=\"activeDate\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [maxDate]=\"maxDate\"\n        [minDate]=\"minDate\"\n        (yearSelected)=\"yearSelectedInMultiYearView($event)\"\n        (selectedChange)=\"goToDateInView($event, 'month')\">\n    </mc-multi-year-view>\n</div>\n","<!--todo need simplify this-->\n<button\n    #button\n    mc-button\n    type=\"button\"\n    class=\"mc-datepicker-toggle__button\"\n    aria-haspopup=\"true\"\n    [attr.aria-label]=\"intl.openCalendarLabel\"\n    [tabIndex]=\"tabIndex\"\n    [disabled]=\"disabled\"\n    (click)=\"open($event)\">\n\n    <i *ngIf=\"!customIcon\" mc-icon=\"mc-calendar_16\" class=\"mc-datepicker-toggle__default-icon\"></i>\n\n    <ng-content select=\"[mcDatepickerToggleIcon]\"></ng-content>\n</button>\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    exportAs: 'mcMonthView',\n    templateUrl: 'month-view.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody, {static: false}) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private readonly dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('short');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays\n            .slice(firstDayOfWeek)\n            .concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(\n                    this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate)\n                );\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(\n                    this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) - this.dateAdapter.getDate(this._activeDate))\n                );\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel = this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate)\n        );\n\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate),\n                i + 1\n            );\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    exportAs: 'mcMultiYearView',\n    templateUrl: 'multi-year-view.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody, {static: false}) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month));\n        this.selectedChange.emit(\n            this.dateAdapter.createDate(year, month, Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth))\n        );\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(\n                    this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage\n                );\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(\n                    this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1\n                );\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","<table class=\"mc-calendar__table\">\n    <thead class=\"mc-calendar__table-header\">\n    <tr>\n        <th class=\"mc-calendar__table-header-divider\" colspan=\"4\"></th>\n    </tr>\n    </thead>\n    <tbody mc-calendar-body\n           [rows]=\"years\"\n           [todayValue]=\"todayYear\"\n           [selectedValue]=\"selectedYear!\"\n           [numCols]=\"4\"\n           [cellAspectRatio]=\"4 / 7\"\n           [activeCell]=\"getActiveCell()\"\n           (selectedValueChange)=\"onYearSelected($event)\"\n           (keydown)=\"handleCalendarBodyKeydown($event)\">\n    </tbody>\n</table>\n","import { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    exportAs: 'mcYearView',\n    templateUrl: 'year-view.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody, {static: false}) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private readonly dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const year = this.dateAdapter.getYear(this.activeDate);\n\n        const normalizedDate = this.dateAdapter.createDate(year, month);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(\n            this.dateAdapter.createDate(\n                year,\n                month,\n                Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)\n            )\n        );\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(\n                    this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate)\n                );\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(\n                    this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate)\n                );\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]\n            .map((row) => row.map((month) => this.createCellForMonth(month, monthNames[month])));\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month),\n            this.dateFormats.monthYearA11yLabel\n        );\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","<table class=\"mc-calendar__table\">\n    <thead class=\"mc-calendar__table-header\">\n    <tr>\n        <th class=\"mc-calendar__table-header-divider\" colspan=\"4\"></th>\n    </tr>\n    </thead>\n    <tbody mc-calendar-body\n           [label]=\"yearLabel\"\n           [rows]=\"months\"\n           [todayValue]=\"todayMonth!\"\n           [selectedValue]=\"selectedMonth!\"\n           [labelMinRequiredCells]=\"2\"\n           [numCols]=\"4\"\n           [cellAspectRatio]=\"4 / 7\"\n           [activeCell]=\"dateAdapter.getMonth(activeDate)\"\n           (selectedValueChange)=\"onMonthSelected($event)\"\n           (keydown)=\"handleCalendarBodyKeydown($event)\">\n    </tbody>\n</table>\n","import { ComponentPortal, ComponentType, Portal } from '@angular/cdk/portal';\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view.component';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view.component';\nimport { McYearView } from './year-view.component';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport enum McCalendarView {\n    Month = 'month',\n    Year = 'year',\n    MultiYear = 'multi-year'\n}\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    host: {\n        class: 'mc-calendar-header'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(\n        private readonly intl: McDatepickerIntl,\n        @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n        @Optional() private readonly dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private readonly dateFormats: McDateFormats,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === McCalendarView.Month) {\n            const label = this.dateAdapter.format(this.calendar.activeDate, this.dateFormats.monthYearLabel);\n\n            return (label[0].toLocaleUpperCase() + label.substr(1)).replace('.', '');\n        }\n\n        if (this.calendar.currentView === McCalendarView.Year) {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24)\n        );\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24)\n        );\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === McCalendarView.Month ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            [McCalendarView.Month]: this.intl.prevMonthLabel,\n            [McCalendarView.Year]: this.intl.prevYearLabel,\n            [McCalendarView.MultiYear]: this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            [McCalendarView.Month]: this.intl.nextMonthLabel,\n            [McCalendarView.Year]: this.intl.nextYearLabel,\n            [McCalendarView.MultiYear]: this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        if (([McCalendarView.Month, McCalendarView.MultiYear] as McCalendarView[]).includes(this.calendar.currentView)) {\n            this.calendar.currentView = McCalendarView.Year;\n        } else if (this.calendar.currentView === McCalendarView.Year) {\n            this.calendar.currentView = McCalendarView.Month;\n        }\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        if (this.calendar.currentView === McCalendarView.Month) {\n            this.calendar.activeDate = this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1);\n        } else {\n            this.calendar.activeDate = this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === McCalendarView.Year ? -1 : -yearsPerPage\n            );\n        }\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        if (this.calendar.currentView === McCalendarView.Month) {\n            this.calendar.activeDate = this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1);\n        } else {\n            this.calendar.activeDate = this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === McCalendarView.Year ? 1 : yearsPerPage\n            );\n        }\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) { return true; }\n\n        return !this.calendar.minDate || !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate || !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(firstDate: D, secondDate: D): boolean {\n        const firstYear = this.dateAdapter.getYear(firstDate);\n        const secondYear = this.dateAdapter.getYear(secondDate);\n\n        const firstMonth = this.dateAdapter.getMonth(firstDate);\n        const secondMonth = this.dateAdapter.getMonth(secondDate);\n\n        if (this.calendar.currentView === McCalendarView.Month) {\n            return firstYear === secondYear && firstMonth === secondMonth;\n        }\n\n        if (this.calendar.currentView === McCalendarView.Year) { return firstYear === secondYear; }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(firstYear / yearsPerPage) === Math.floor(secondYear / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    exportAs: 'mcCalendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.scss'],\n    host: {\n        class: 'mc-calendar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: ComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = McCalendarView.Month;\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView, {static: false}) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView, {static: false}) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView, {static: false}) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private readonly intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private readonly dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private readonly dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === McCalendarView.Month ? this.monthView :\n            (this.currentView === McCalendarView.Year ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: McCalendarView | string): void {\n        this.activeDate = date;\n        this.currentView = view as McCalendarView;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","<button mc-button\n        [tabindex]=\"'-1'\"\n        class=\"mc-button_transparent mc-calendar__period-button\"\n        (click)=\"currentPeriodClicked()\">\n    {{ periodButtonText }}\n\n    <i class=\"mc mc-icon\"\n       [class.mc-angle-up-M_16]=\"calendar.currentView !== 'month'\"\n       [class.mc-angle-down-M_16]=\"calendar.currentView === 'month'\">\n    </i>\n</button>\n\n<div class=\"mc-calendar-spacer\"></div>\n\n<button mc-button\n        [tabindex]=\"'-1'\"\n        class=\"mc-button_transparent mc-calendar__previous-button\"\n        [disabled]=\"!previousEnabled()\"\n        (click)=\"previousClicked()\">\n\n    <i mc-icon=\"mc-angle-left-L_16\"></i>\n</button>\n\n<button mc-button\n        [tabindex]=\"'-1'\"\n        class=\"mc-button_transparent mc-calendar__next-button\"\n        [disabled]=\"!nextEnabled()\"\n        (click)=\"nextClicked()\">\n\n    <i mc-icon=\"mc-angle-right-L_16\"></i>\n</button>\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    PositionStrategy,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { McCalendarCellCssClasses } from './calendar-body.component';\nimport { McCalendar, McCalendarView } from './calendar.component';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input.directive';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    exportAs: 'mcDatepickerContent',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.scss'],\n    host: {\n        class: 'mc-datepicker__content',\n\n        '[@transformPanel]': 'animationState',\n        '(@transformPanel.done)': 'animationDone.next()'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerContent<D> implements OnDestroy {\n    /** Emits when an animation has finished. */\n    readonly animationDone = new Subject<void>();\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Current state of the animation. */\n    animationState: 'enter' | 'void';\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    private subscriptions = new Subscription();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef) {}\n\n    ngAfterViewInit() {\n        this.subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this.changeDetectorRef.markForCheck();\n        }));\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n        this.animationDone.complete();\n    }\n\n    startExitAnimation() {\n        this.animationState = 'void';\n        this.changeDetectorRef.markForCheck();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy {\n    @Input()\n    get hasBackdrop(): boolean {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    private _hasBackdrop: boolean = false;\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    private _startAt: D | null;\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ? this.datepickerInput.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    private _disabled: boolean;\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n\n    private _opened = false;\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: ComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: McCalendarView = McCalendarView.Month;\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    @Input() backdropClass: string = 'cdk-overlay-transparent-backdrop';\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef | null;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => ScrollStrategy;\n    private validSelected: D | null = null;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    private closeSubscription = Subscription.EMPTY;\n\n    constructor(\n        private overlay: Overlay,\n        private ngZone: NgZone,\n        private viewContainerRef: ViewContainerRef,\n        @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n        @Optional() private readonly dateAdapter: DateAdapter<D>,\n        @Optional() private dir: Directionality,\n        @Optional() @Inject(DOCUMENT) private document: any\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.closeSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        this.destroyOverlay();\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n\n        this.datepickerInput = input;\n        this.inputSubscription = this.datepickerInput.valueChange\n            .subscribe((value: D | null) => {\n                this.selected = value;\n\n                if (this.popupComponentRef) {\n                    this.popupComponentRef.instance.calendar.monthView?.init();\n                    this.popupComponentRef.instance.calendar.activeDate = value as D;\n                }\n            });\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) { return; }\n\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(restoreFocus: boolean = true): void {\n        if (!this._opened) { return; }\n\n        if (this.popupComponentRef) {\n            const instance = this.popupComponentRef.instance;\n            instance.startExitAnimation();\n            instance.animationDone\n                .pipe(take(1))\n                .subscribe(() => this.destroyOverlay());\n        }\n\n        if (restoreFocus) {\n            this.focusedElementBeforeOpen!.focus();\n        }\n\n        this._opened = false;\n        this.closedStream.emit();\n        this.focusedElementBeforeOpen = null;\n    }\n\n    toggle(): void {\n        if (this.datepickerInput.isReadOnly) { return; }\n\n        this._opened ? this.close() : this.open();\n    }\n\n    /** Destroys the current overlay. */\n    private destroyOverlay() {\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupRef = this.popupComponentRef = null;\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(\n                McDatepickerContent, this.viewContainerRef\n            );\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef!.hasAttached()) {\n            this.popupComponentRef = this.popupRef!.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this.popupRef!.updatePosition());\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: this.hasBackdrop,\n            backdropClass: this.backdropClass,\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n\n        this.closeSubscription = this.closingActions()\n            .subscribe(() => this.close(this.restoreFocus()));\n    }\n\n    private restoreFocus(): boolean {\n        return this.document.activeElement === this.document.body;\n    }\n\n    private closingActions() {\n        return merge(\n            this.popupRef!.backdropClick(),\n            this.popupRef!.outsidePointerEvents(),\n            this.popupRef!.detachments()\n        );\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): PositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","<mc-calendar [id]=\"datepicker.id\"\n             [ngClass]=\"datepicker.panelClass\"\n             [startAt]=\"datepicker.startAt\"\n             [startView]=\"datepicker.startView\"\n             [minDate]=\"datepicker.minDate\"\n             [maxDate]=\"datepicker.maxDate\"\n             [dateFilter]=\"datepicker.dateFilter\"\n             [headerComponent]=\"datepicker.calendarHeaderComponent\"\n             [selected]=\"datepicker.selected\"\n             [dateClass]=\"datepicker.dateClass\"\n             [@fadeInCalendar]=\"'enter'\"\n             (selectedChange)=\"datepicker.select($event)\"\n             (yearSelected)=\"datepicker.selectYear($event)\"\n             (monthSelected)=\"datepicker.selectMonth($event)\"\n             (userSelection)=\"datepicker.close()\">\n</mc-calendar>\n","// @ts-nocheck\n\n// tslint:disable:no-empty\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    BACKSPACE,\n    DELETE,\n    UP_ARROW,\n    RIGHT_ARROW,\n    DOWN_ARROW,\n    LEFT_ARROW,\n    END,\n    PAGE_DOWN,\n    HOME,\n    PAGE_UP,\n    SPACE,\n    TAB,\n    ESCAPE,\n    hasModifierKey,\n    isHorizontalMovement,\n    isLetterKey,\n    isVerticalMovement\n} from '@ptsecurity/cdk/keycodes';\nimport { validationTooltipHideDelay, validationTooltipShowDelay } from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McWarningTooltipTrigger } from '@ptsecurity/mosaic/tooltip';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepicker } from './datepicker.component';\n\n\n// tslint:disable:naming-convention\nenum DateParts {\n    year = 'y',\n    month = 'm',\n    day = 'd'\n}\n\nexport const MAX_YEAR = 9999;\nconst YEAR_LENGTH = 4;\n\nclass DateDigit {\n    maxDays = 31;\n    maxMonth = 12;\n\n    parse: (value: string) => number;\n\n    constructor(public value: DateParts, public start: number, public length: number) {\n        if (value === DateParts.day) {\n            this.parse = this.parseDay;\n        } else if (value === DateParts.month) {\n            this.parse = this.parseMonth;\n        } else if (value === DateParts.year) {\n            this.parse = this.parseYear;\n        }\n    }\n\n    get end(): number {\n        return this.start + this.length;\n    }\n\n    get isDay(): boolean {\n        return this.value === DateParts.day;\n    }\n\n    get isMonth(): boolean {\n        return this.value === DateParts.month;\n    }\n\n    get isYear(): boolean {\n        return this.value === DateParts.year;\n    }\n\n    get fullName(): string {\n        if (this.isDay) { return 'date'; }\n\n        if (this.isMonth) { return 'month'; }\n\n        if (this.isYear) { return 'year'; }\n    }\n\n    private parseDay(value: string): number {\n        const parsedValue: number = parseInt(value);\n\n        if (parsedValue === 0) { return 1; }\n\n        if (parsedValue > this.maxDays) { return this.maxDays; }\n\n        return parsedValue;\n    }\n\n    private parseMonth(value: string): number {\n        const parsedValue: number = parseInt(value);\n\n        if (parsedValue === 0) { return 1; }\n\n        if (parsedValue > this.maxMonth) { return this.maxMonth; }\n\n        return parsedValue;\n    }\n\n    private parseYear(value: string): number {\n        const parsedValue: number = parseInt(value);\n\n        if (parsedValue === 0) { return 1; }\n\n        if (parsedValue > MAX_YEAR) { return parseInt(value.substring(0, YEAR_LENGTH)); }\n\n        return parsedValue;\n    }\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement\n    ) {\n        this.value = this.target.value;\n    }\n}\n\nlet uniqueComponentIdSuffix = 0;\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    exportAs: 'mcDatepickerInput',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: McFormFieldControl, useExisting: McDatepickerInput }\n    ],\n    host: {\n        class: 'mc-input mc-datepicker',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.required]': 'required',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.min]': 'min ? toISO8601(min) : null',\n        '[attr.max]': 'max ? toISO8601(max) : null',\n        '[attr.autocomplete]': '\"off\"',\n\n        '(paste)': 'onPaste($event)',\n        '(change)': 'onChange()',\n\n        '(focus)': 'focusChanged(true)',\n        '(blur)': 'onBlur()',\n\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McDatepickerInput<D> implements McFormFieldControl<D>, ControlValueAccessor, Validator, OnDestroy {\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    readonly errorState: boolean;\n\n    controlType: string = 'datepicker';\n\n    focused: boolean = false;\n\n    datepicker: McDatepicker<D>;\n\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n\n    @Input() placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    private _required: boolean;\n\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) { return; }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged\n            .subscribe((selected: D) => {\n                this.value = selected;\n                this.cvaOnChange(selected);\n                this.onTouched();\n                this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        let newValue = this.dateAdapter.deserialize(value);\n\n        this.lastValueValid = !newValue || this.dateAdapter.isValid(newValue);\n\n        newValue = this.getValidDateOrNull(newValue);\n\n        const oldDate = this.value;\n        this._value = newValue;\n        this.formatValue(newValue);\n\n        if (!this.dateAdapter.sameDate(oldDate, newValue)) {\n            this.valueChange.emit(newValue);\n        }\n    }\n\n    private _value: D | null;\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    private _min: D | null;\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    private _max: D | null;\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    private _id: string;\n\n    @Input()\n    set mcValidationTooltip(tooltip: McWarningTooltipTrigger) {\n        if (!tooltip) { return; }\n\n        tooltip.enterDelay = validationTooltipShowDelay;\n        tooltip.trigger = 'manual';\n\n        tooltip.initListeners();\n\n        this.incorrectInput.subscribe(() => {\n            if (tooltip.isOpen) { return; }\n\n            tooltip.show();\n\n            setTimeout(() => tooltip.hide(), validationTooltipHideDelay);\n        });\n    }\n\n    @Output() incorrectInput = new EventEmitter<void>();\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange = new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput = new EventEmitter<McDatepickerInputEvent<D>>();\n\n    get empty(): boolean {\n        return !this.viewValue && !this.isBadInput();\n    }\n\n    get viewValue(): string {\n        return this.elementRef.nativeElement.value;\n    }\n\n    get ngControl(): any {\n        return this.control;\n    }\n\n    get isReadOnly(): boolean {\n        return this.elementRef.nativeElement.readOnly;\n    }\n\n    private get selectionStart(): number | null {\n        return this.elementRef.nativeElement.selectionStart;\n    }\n\n    private set selectionStart(value: number | null) {\n        this.elementRef.nativeElement.selectionStart = value;\n    }\n\n    private get selectionEnd(): number | null {\n        return this.elementRef.nativeElement.selectionEnd;\n    }\n\n    private set selectionEnd(value: number | null) {\n        this.elementRef.nativeElement.selectionEnd = value;\n    }\n\n    private control: AbstractControl;\n    private readonly uid = `mc-datepicker-${uniqueComponentIdSuffix++}`;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    /** The combined form control validator for this input. */\n    private readonly validator: ValidatorFn | null;\n\n    private separator: string;\n\n    private firstDigit: DateDigit;\n    private secondDigit: DateDigit;\n    private thirdDigit: DateDigit;\n\n    private separatorPositions: number[];\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        private readonly renderer: Renderer2,\n        @Optional() private readonly dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private readonly dateFormats: McDateFormats\n    ) {\n        this.validator = Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.setFormat(dateFormats.dateInput);\n\n        this.localeSubscription = dateAdapter.localeChanges\n            .subscribe(this.updateLocaleParams);\n    }\n\n    onContainerClick() {\n        this.focus();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onTouched = () => {};\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(control: AbstractControl): ValidationErrors | null {\n        this.setControl(control);\n\n        return this.validator ? this.validator(control) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        if (this.isReadOnly) { return; }\n\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        if (this.isLetterKey(event)) {\n            event.preventDefault();\n\n            this.incorrectInput.emit();\n        } else if (this.isKeyForOpen(event)) {\n            event.preventDefault();\n\n            this.datepicker?.open();\n        } else if (this.isKeyForClose(event)) {\n            event.preventDefault();\n\n            this.datepicker.close();\n        } else if (keyCode === TAB) {\n            this.datepicker.close(false);\n        } else if (this.isKeyForByPass(event)) {\n            return;\n        } else if (keyCode === SPACE) {\n            this.spaceKeyHandler(event);\n        } else if ([UP_ARROW, DOWN_ARROW].includes(keyCode)) {\n            event.preventDefault();\n\n            this.verticalArrowKeyHandler(keyCode);\n        } else if ([LEFT_ARROW, RIGHT_ARROW, HOME, PAGE_UP, END, PAGE_DOWN].includes(keyCode)) {\n            event.preventDefault();\n\n            this.changeCaretPosition(keyCode);\n        } else if (/^\\D$/.test(event.key)) {\n            event.preventDefault();\n\n            const newValue = this.getNewValue(event.key, this.selectionStart as number);\n            const formattedValue = this.replaceSymbols(newValue);\n\n            if (newValue !== formattedValue) {\n                this.setViewValue(formattedValue, true);\n\n                setTimeout(this.onInput);\n            } else {\n                this.incorrectInput.emit();\n            }\n        } else {\n            setTimeout(this.onInput);\n        }\n    }\n\n    onInput = () => {\n        this.correctCursorPosition();\n        const formattedValue = this.replaceSymbols(this.viewValue);\n\n        const newTimeObj = this.getDateFromString(formattedValue);\n        this.lastValueValid = !!newTimeObj;\n\n        if (!newTimeObj) {\n            if (!this.viewValue) {\n                this._value = null;\n                this.cvaOnChange(null);\n            }\n            this.control.updateValueAndValidity({ emitEvent: false });\n\n            return;\n        }\n\n        this.setViewValue(this.getTimeStringFromDate(newTimeObj, this.dateFormats.dateInput), true);\n\n        this.selectNextDigitByCursor((this.selectionStart as number));\n\n        this.updateValue(newTimeObj);\n    }\n\n    parseOnBlur = () => {\n        if (!this.viewValue) { return null; }\n\n        const date = this.getDefaultValue();\n\n        const viewDigits: string[] = this.viewValue\n            .split(this.separator)\n            .map((value: string) => value)\n            .filter((value) => value);\n\n        const [firsViewDigit, secondViewDigit, thirdViewDigit] = viewDigits;\n\n        // tslint:disable-next-line:no-magic-numbers\n        if (viewDigits.length !== 3) {\n            this.lastValueValid = false;\n            this._value = null;\n\n            return setTimeout(() => this.control.updateValueAndValidity());\n        }\n\n        date[this.firstDigit.fullName] = this.firstDigit.parse(firsViewDigit);\n        date[this.secondDigit.fullName] = this.secondDigit.parse(secondViewDigit);\n        date[this.thirdDigit.fullName] = this.thirdDigit.parse(thirdViewDigit);\n\n        const [digitWithYear, viewDigitWithYear] = [this.firstDigit, this.secondDigit, this.thirdDigit]\n            .reduce((acc, digit, index) => digit.value === DateParts.year ? [digit, viewDigits[index]] : acc, []);\n\n        // tslint:disable-next-line:no-magic-numbers\n        if (viewDigitWithYear.length < 3) {\n            // tslint:disable-next-line:no-magic-numbers\n            date.year += date.year < 30 ? 2000 : 1900;\n        } else if (viewDigitWithYear.length < digitWithYear.length) {\n            this.lastValueValid = false;\n            this._value = null;\n\n            return setTimeout(() => this.control.updateValueAndValidity());\n        }\n\n        if (Object.values(date).some(isNaN)) {\n            return;\n        }\n\n        const newTimeObj = this.getValidDateOrNull(this.dateAdapter.createDateTime(\n            date.year, date.month - 1, date.date, date.hours, date.minutes, date.seconds, date.milliseconds\n        ));\n\n        if (!newTimeObj) {\n            this.lastValueValid = false;\n            this._value = null;\n            this.cvaOnChange(null);\n\n            return setTimeout(() => this.control.updateValueAndValidity());\n        }\n\n        this.lastValueValid = !!newTimeObj;\n\n        this.setViewValue(this.getTimeStringFromDate(newTimeObj, this.dateFormats.dateInput), true);\n\n        this.updateValue(newTimeObj);\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        this.parseOnBlur();\n\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n\n        let rawValue = $event.clipboardData.getData('text');\n\n        if (rawValue.match(/^\\d\\D/)) {\n            rawValue = `0${rawValue}`;\n        }\n        rawValue.replace(/[^A-Za-z0-9]+/g, this.separator);\n\n        if (/[a-z]/gi.test(rawValue)) {\n            this.incorrectInput.emit();\n        }\n\n        const match: RegExpMatchArray | null = rawValue.match(/^(?<first>\\d+)\\W(?<second>\\d+)\\W(?<third>\\d+)$/);\n\n        if (!match?.groups?.first || !match?.groups?.second || !match?.groups?.third) {\n            this.setViewValue(rawValue);\n\n            return rawValue;\n        }\n\n        const value = [match.groups.first, match.groups.second, match.groups.third].join(this.separator);\n\n        const newTimeObj = this.getDateFromString(value);\n\n        if (!newTimeObj) {\n            this.setViewValue(value);\n\n            return value;\n        }\n\n        this.setViewValue(this.getTimeStringFromDate(newTimeObj, this.dateFormats.dateInput));\n\n        this.updateValue(newTimeObj);\n    }\n\n    toISO8601(value: D): string {\n        return this.dateAdapter.toIso8601(value);\n    }\n\n    private updateLocaleParams = () => {\n        this.setFormat(this.dateFormats.dateInput);\n\n        this.value = this.value;\n    }\n\n    private setFormat(format: string): void {\n        this.separator = format.match(/[aA-zZ]+(?<separator>\\W|\\D)[aA-zZ]+/)!.groups.separator;\n        this.separatorPositions = format\n            .split('')\n            .reduce((acc, item, index: number) => this.separator === item ? [...acc, index + 1] : acc, []);\n\n        this.getDigitPositions(format);\n    }\n\n    private updateValue(newValue: D) {\n        if (!this.dateAdapter.sameDate(newValue, this.value)) {\n            this._value = newValue;\n            this.cvaOnChange(newValue);\n            this.valueChange.emit(newValue);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n\n    private isKeyForClose(event: KeyboardEvent): boolean {\n        // tslint:disable-next-line: deprecation\n        return (event.altKey && event.keyCode === UP_ARROW) || event.keyCode === ESCAPE;\n    }\n\n    private isKeyForOpen(event: KeyboardEvent): boolean {\n        // tslint:disable-next-line: deprecation\n        return event.altKey && event.keyCode === DOWN_ARROW;\n    }\n\n    private isLetterKey(event: KeyboardEvent): boolean {\n        return isLetterKey(event) && !event.ctrlKey && !event.metaKey;\n    }\n\n    private isKeyForByPass(event: KeyboardEvent): boolean {\n        // tslint:disable-next-line: deprecation\n        return (hasModifierKey(event) && (isVerticalMovement(event.keyCode) || isHorizontalMovement(event.keyCode))) ||\n            event.ctrlKey ||\n            event.metaKey;\n    }\n\n    private spaceKeyHandler(event: KeyboardEvent) {\n        event.preventDefault();\n\n        if (this.selectionStart === this.selectionEnd) {\n            const value = this.getNewValue(event.key, this.selectionStart as number);\n            this.setViewValue(value);\n\n            setTimeout(this.onInput);\n        } else if (this.selectionStart !== this.selectionEnd) {\n            this.selectNextDigit(this.selectionStart as number, true);\n        }\n    }\n\n    private getNewValue(key: string, position: number) {\n        return [this.viewValue.slice(0, position), key, this.viewValue.slice(position)].join('');\n    }\n\n    private setViewValue(value: string, savePosition: boolean = false) {\n        if (savePosition) {\n            const selectionStart = this.selectionStart;\n            const selectionEnd = this.selectionEnd;\n\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', value);\n\n            this.selectionStart = selectionStart;\n            this.selectionEnd = selectionEnd;\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', value);\n        }\n    }\n\n    private replaceSymbols(value: string): string {\n        return value\n            .split(this.separator)\n            .map((part: string) => part.replace(/^([0-9]+)\\W$/, '0$1'))\n            .join(this.separator);\n    }\n\n    private getDateFromString(timeString: string): D | null {\n        if (!timeString || timeString.length < this.firstDigit.length) { return null; }\n\n        const date = this.getDefaultValue();\n\n        const viewDigits: string[] = timeString\n            .split(this.separator)\n            .map((value: string) => value);\n\n        const [firsViewDigit, secondViewDigit, thirdViewDigit] = viewDigits;\n\n        if (viewDigits.length === 1) {\n            if (firsViewDigit.length < this.firstDigit.length) { return null; }\n\n\n            date[this.firstDigit.fullName] = this.firstDigit.parse(firsViewDigit);\n            date.month = 1;\n        // tslint:disable-next-line:no-magic-numbers\n        } else if (viewDigits.length === 2) {\n            if (firsViewDigit.length < this.firstDigit.length || secondViewDigit.length < this.secondDigit.length) {\n                return null;\n            }\n\n            date[this.firstDigit.fullName] = this.firstDigit.parse(firsViewDigit);\n            date[this.secondDigit.fullName] = this.secondDigit.parse(secondViewDigit);\n        // tslint:disable-next-line:no-magic-numbers\n        } else if (viewDigits.length === 3) {\n            if (\n                firsViewDigit.length < this.firstDigit.length ||\n                secondViewDigit.length < this.secondDigit.length ||\n                thirdViewDigit.length < this.thirdDigit.length\n            ) { return null; }\n\n            date[this.firstDigit.fullName] = this.firstDigit.parse(firsViewDigit);\n            date[this.secondDigit.fullName] = this.secondDigit.parse(secondViewDigit);\n            date[this.thirdDigit.fullName] = this.thirdDigit.parse(thirdViewDigit);\n        } else {\n            return null;\n        }\n\n        return this.getValidDateOrNull(this.dateAdapter.createDateTime(\n            date.year, date.month - 1, date.date, date.hours, date.minutes, date.seconds, date.milliseconds\n        ));\n    }\n\n    private getDefaultValue() {\n        const defaultValue = this.value || this.dateAdapter.today();\n\n        return {\n            year: this.dateAdapter.getYear(defaultValue),\n            month: this.dateAdapter.getMonth(defaultValue),\n            date: this.dateAdapter.getDate(defaultValue),\n            hours: this.dateAdapter.getHours(defaultValue),\n            minutes: this.dateAdapter.getMinutes(defaultValue),\n            seconds: this.dateAdapter.getSeconds(defaultValue),\n            milliseconds: this.dateAdapter.getMilliseconds(defaultValue)\n        };\n    }\n\n    private getTimeStringFromDate(value: D | null, timeFormat: string): string {\n        if (!value || !this.dateAdapter.isValid(value)) { return ''; }\n\n        return this.dateAdapter.format(value, timeFormat);\n    }\n\n    private getDateEditMetrics(cursorPosition: number): [\n        modifiedTimePart: DateParts,\n        cursorStartPosition: number,\n        cursorEndPosition: number\n    ] {\n        for (const digit of [this.firstDigit, this.secondDigit, this.thirdDigit]) {\n            if (cursorPosition >= digit.start && cursorPosition <= digit.end) {\n                return [digit.value, digit.start, digit.end];\n            }\n        }\n\n        return [this.thirdDigit.value, this.thirdDigit.start, this.thirdDigit.end];\n    }\n\n    private incrementDate(dateVal: D, whatToIncrement: DateParts): D {\n        let year = this.dateAdapter.getYear(dateVal);\n        let month = this.dateAdapter.getMonth(dateVal);\n        let day = this.dateAdapter.getDate(dateVal);\n\n        switch (whatToIncrement) {\n            case DateParts.day:\n                day++;\n\n                if (day > this.dateAdapter.getNumDaysInMonth(dateVal)) {\n                    day = 1;\n                }\n\n                break;\n            case DateParts.month:\n                month++;\n\n                // tslint:disable-next-line:no-magic-numbers\n                if (month > 11) {\n                    month = 0;\n                }\n\n                const lastDay = this.getLastDayFor(year, month);\n\n                if (day > lastDay) {\n                    day = lastDay;\n                }\n\n                break;\n            case DateParts.year:\n                year++;\n\n                if (year > MAX_YEAR) {\n                    year = 1;\n                }\n\n                break;\n            default:\n        }\n\n        return this.createDate(year, month, day);\n    }\n\n    private getLastDayFor(year: number, month: number): number {\n        return this.dateAdapter.getNumDaysInMonth(this.createDate(year, month, 1));\n    }\n\n    private decrementDate(dateVal: D, whatToDecrement: DateParts): D {\n        let year = this.dateAdapter.getYear(dateVal);\n        let month = this.dateAdapter.getMonth(dateVal);\n        let day = this.dateAdapter.getDate(dateVal);\n\n        switch (whatToDecrement) {\n            case DateParts.day:\n                day--;\n\n                if (day < 1) {\n                    day = this.dateAdapter.getNumDaysInMonth(dateVal);\n                }\n\n                break;\n            case DateParts.month:\n                month--;\n\n                if (month < 0) {\n                    // tslint:disable-next-line:no-magic-numbers\n                    month = 11;\n                }\n\n                const lastDay = this.getLastDayFor(year, month);\n\n                if (day > lastDay) {\n                    day = lastDay;\n                }\n\n                break;\n            case DateParts.year:\n                year--;\n\n                if (year < 1) {\n                    year = MAX_YEAR;\n                }\n\n                break;\n            default:\n        }\n\n        return this.createDate(year, month, day);\n    }\n\n    private verticalArrowKeyHandler(keyCode: number): void {\n        if (!this.value) { return; }\n\n        let changedTime;\n\n        const [modifiedTimePart, selectionStart, selectionEnd] = this.getDateEditMetrics(this.selectionStart as number);\n\n        if (keyCode === UP_ARROW) {\n            changedTime = this.incrementDate(this.value, modifiedTimePart);\n        }\n\n        if (keyCode === DOWN_ARROW) {\n            changedTime = this.decrementDate(this.value, modifiedTimePart);\n        }\n\n        this.value = changedTime;\n\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n\n        this.cvaOnChange(changedTime);\n\n        this.onChange();\n        this.stateChanges.next();\n    }\n\n    private changeCaretPosition(keyCode: number): void {\n        if (!this.value) { return; }\n\n        let cursorPos = this.selectionStart as number;\n\n        if ([HOME, PAGE_UP].includes(keyCode)) {\n            cursorPos = 0;\n        } else if ([END, PAGE_DOWN].includes(keyCode)) {\n            cursorPos = this.viewValue.length;\n        } else if (keyCode === LEFT_ARROW) {\n            cursorPos = cursorPos === 0 ? this.viewValue.length : cursorPos - 1;\n        } else if (keyCode === RIGHT_ARROW) {\n            const nextSeparatorPos: number = this.viewValue.indexOf(this.separator, cursorPos);\n\n            cursorPos = nextSeparatorPos ? nextSeparatorPos + 1 : 0;\n        }\n\n        this.selectDigitByCursor(cursorPos);\n    }\n\n    private selectDigitByCursor(cursorPos: number): void {\n        setTimeout(() => {\n            const [, selectionStart, selectionEnd] = this.getDateEditMetrics(cursorPos);\n\n            this.selectionStart = selectionStart;\n            this.selectionEnd = selectionEnd;\n        });\n    }\n\n    private selectNextDigitByCursor(cursorPos: number): void {\n        setTimeout(() => {\n            const [, , endPositionOfCurrentDigit] = this.getDateEditMetrics(cursorPos);\n            const [, selectionStart, selectionEnd] = this.getDateEditMetrics(endPositionOfCurrentDigit + 1);\n\n            this.selectionStart = selectionStart;\n            this.selectionEnd = selectionEnd;\n        });\n    }\n\n    private selectNextDigit(cursorPos: number, cycle: boolean = false): void {\n        setTimeout(() => {\n            const lastValue = cycle ? 0 : cursorPos;\n            const nextSeparatorPos: number = this.viewValue.indexOf(this.separator, cursorPos);\n\n            const newCursorPos = nextSeparatorPos > 0 ? nextSeparatorPos + 1 : lastValue;\n\n            const [, selectionStart, selectionEnd] = this.getDateEditMetrics(newCursorPos);\n\n            this.selectionStart = selectionStart;\n            this.selectionEnd = selectionEnd;\n        });\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private cvaOnChange: (value: any) => void = () => {};\n\n    private validatorOnChange = () => {};\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.focused ||\n            this.empty ||\n            this.lastValueValid ? null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        const formattedValue = value ? this.dateAdapter.format(value, this.dateFormats.dateInput) : '';\n\n        this.setViewValue(formattedValue);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    private setControl(control: AbstractControl) {\n        if (!this.control) {\n            this.control = control;\n        }\n    }\n\n    private getDigitPositions(format: string) {\n        const formatInLowerCase = format.toLowerCase();\n\n        formatInLowerCase\n            .split('')\n            .reduce(\n                ({ prev, length, start }, value: string, index: number, arr) => {\n                    if (value === this.separator || (arr.length - 1) === index) {\n                        if (!this.firstDigit) {\n                            this.firstDigit = new DateDigit(prev, start, length);\n                        } else if (!this.secondDigit) {\n                            this.secondDigit = new DateDigit(prev, start, length);\n                        } else if (!this.thirdDigit) {\n                            this.thirdDigit = new DateDigit(prev, start, arr.length - start);\n                        }\n\n                        // tslint:disable:no-parameter-reassignment\n                        length = 0;\n                        start = index + 1;\n                    } else {\n                        length++;\n                    }\n\n                    return { prev: value, length, start };\n                },\n                { length: 0, start: 0 }\n            );\n\n        if (!this.firstDigit || !this.secondDigit || !this.thirdDigit) {\n            Error(`Can' t use this format: ${format}`);\n        }\n    }\n\n    private createDate(year: number, month: number, day: number): D {\n        return this.dateAdapter.createDateTime(\n            year,\n            month,\n            day,\n            this.dateAdapter.getHours(this.value as D),\n            this.dateAdapter.getMinutes(this.value as D),\n            this.dateAdapter.getSeconds(this.value as D),\n            this.dateAdapter.getMilliseconds(this.value as D)\n        );\n    }\n\n    private correctCursorPosition() {\n        if (this.selectionStart && this.separatorPositions.includes(this.selectionStart)) {\n            this.selectionStart = this.selectionStart - 1;\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepicker } from './datepicker.component';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.scss'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        '[class.mc-active]': 'datepicker && datepicker.opened'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon, { static: false }) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button', { static: false }) button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(public intl: McDatepickerIntl, private changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendarBody } from './calendar-body.component';\nimport { McCalendar, McCalendarHeader } from './calendar.component';\nimport { McDatepickerInput } from './datepicker-input.directive';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle.component';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker.component';\nimport { McMonthView } from './month-view.component';\nimport { McMultiYearView } from './multi-year-view.component';\nimport { McYearView } from './year-view.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader,\n        McButtonModule\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY.\nconst u = undefined;\nfunction plural(val) {\n    const n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nexport default [\"de\", [[\"AM\", \"PM\"], u, u], u, [[\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"], [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"], [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"], [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"]], [[\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"], [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"], [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"], [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"]], [[\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"], [\"Jan.\", \"Feb.\", \"März\", \"Apr.\", \"Mai\", \"Juni\", \"Juli\", \"Aug.\", \"Sept.\", \"Okt.\", \"Nov.\", \"Dez.\"], [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"]], [[\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"], [\"Jan\", \"Feb\", \"Mär\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"], [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"]], [[\"v. Chr.\", \"n. Chr.\"], u, u], 1, [6, 0], [\"dd.MM.yy\", \"dd.MM.y\", \"d. MMMM y\", \"EEEE, d. MMMM y\"], [\"HH:mm\", \"HH:mm:ss\", \"HH:mm:ss z\", \"HH:mm:ss zzzz\"], [\"{1}, {0}\", u, \"{1} 'um' {0}\", u], [\",\", \".\", \";\", \"%\", \"+\", \"-\", \"E\", \"·\", \"‰\", \"∞\", \"NaN\", \":\"], [\"#,##0.###\", \"#,##0 %\", \"#,##0.00 ¤\", \"#E0\"], \"EUR\", \"€\", \"Euro\", { \"ATS\": [\"öS\"], \"AUD\": [\"AU$\", \"$\"], \"BGM\": [\"BGK\"], \"BGO\": [\"BGJ\"], \"CUC\": [u, \"Cub$\"], \"DEM\": [\"DM\"], \"FKP\": [u, \"Fl£\"], \"GHS\": [u, \"₵\"], \"GNF\": [u, \"F.G.\"], \"KMF\": [u, \"FC\"], \"PHP\": [u, \"₱\"], \"RON\": [u, \"L\"], \"RWF\": [u, \"F.Rw\"], \"SYP\": [], \"THB\": [\"฿\"], \"TWD\": [\"NT$\"], \"XXX\": [], \"ZMW\": [u, \"K\"] }, \"ltr\", plural];\n","import * as i3 from '@angular/common';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, Inject, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MC_LUXON_DATE_FORMATS, LuxonDateAdapter, McLuxonDateModule } from '@ptsecurity/mosaic-luxon-adapter/adapter';\nimport * as i7 from '@ptsecurity/mosaic/datepicker';\nimport { McDatepickerModule } from '@ptsecurity/mosaic/datepicker';\nimport * as i4 from '@ptsecurity/mosaic/form-field';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport * as i8 from '@ptsecurity/mosaic/icon';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McInputModule } from '@ptsecurity/mosaic/input';\nimport * as i2 from '@ptsecurity/mosaic/radio';\nimport { McRadioModule } from '@ptsecurity/mosaic/radio';\nimport * as i5 from '@ptsecurity/mosaic/tooltip';\nimport { McToolTipModule } from '@ptsecurity/mosaic/tooltip';\nimport de from '@angular/common/locales/de';\nimport * as i1 from '@ptsecurity/cdk/datetime';\nimport { MC_DATE_FORMATS, MC_DATE_LOCALE, DateAdapter } from '@ptsecurity/cdk/datetime';\n\n/* tslint:disable:no-magic-numbers */\nfunction DatepickerLanguageExample_mc_radio_button_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-radio-button\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const language_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", language_r3)(\"checked\", language_r3.name === ctx_r0.selectedLanguage.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", language_r3.name, \" \");\n} }\nfunction mcDateFormatsFactory() {\n    const dateFormats = { ...MC_LUXON_DATE_FORMATS };\n    dateFormats.dateInput = 'dd.MM.yyyy';\n    return dateFormats;\n}\nregisterLocaleData(de);\n/**\n * @title Multy language datepicker\n */\nclass DatepickerLanguageExample {\n    constructor(adapter, dateFormats) {\n        this.adapter = adapter;\n        this.dateFormats = dateFormats;\n        this.languageList = [\n            { name: 'en', format: 'dd/MM/yyyy', placeholder: 'дд/мм/гггг' },\n            { name: 'de', format: 'dd-MM-yyyy', placeholder: 'дд-мм-гггг' },\n            { name: 'ru', format: 'dd.MM.yyyy', placeholder: 'дд.мм.гггг' }\n        ];\n        this.selectedLanguage = this.languageList[0];\n        this.selectedDate = new FormControl(null);\n    }\n    ngOnInit() {\n        this.adapter.setLocale(this.languageList[0].name);\n    }\n    setFormat($event) {\n        this.dateFormats.dateInput = $event.value.format;\n        this.selectedLanguage = this.languageList.find(({ name }) => name === $event.value.name);\n        this.selectedDate.setValue(this.selectedDate.value);\n        this.adapter.setLocale($event.value.name);\n    }\n}\nDatepickerLanguageExample.ɵfac = function DatepickerLanguageExample_Factory(t) { return new (t || DatepickerLanguageExample)(i0.ɵɵdirectiveInject(i1.DateAdapter), i0.ɵɵdirectiveInject(MC_DATE_FORMATS)); };\nDatepickerLanguageExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DatepickerLanguageExample, selectors: [[\"datepicker-language-example\"]], features: [i0.ɵɵProvidersFeature([{\n                provide: MC_DATE_FORMATS,\n                useFactory: mcDateFormatsFactory\n            }])], decls: 14, vars: 7, consts: [[1, \"example-radio-group\", 3, \"change\"], [\"class\", \"example-radio-button\", 3, \"value\", \"checked\", 4, \"ngFor\", \"ngForOf\"], [3, \"mcWarningTooltip\", \"click\"], [\"tooltip\", \"mcWarningTooltip\"], [3, \"formControl\", \"placeholder\", \"mcDatepicker\", \"mcValidationTooltip\"], [\"mc-icon\", \"mc-calendar_16\", \"mcSuffix\", \"\"], [\"picker\", \"\"], [1, \"example-radio-button\", 3, \"value\", \"checked\"]], template: function DatepickerLanguageExample_Template(rf, ctx) { if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mc-radio-group\", 0);\n        i0.ɵɵlistener(\"change\", function DatepickerLanguageExample_Template_mc_radio_group_change_0_listener($event) { return ctx.setFormat($event); });\n        i0.ɵɵtemplate(1, DatepickerLanguageExample_mc_radio_button_1_Template, 2, 3, \"mc-radio-button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"mc-form-field\", 2, 3);\n        i0.ɵɵlistener(\"click\", function DatepickerLanguageExample_Template_mc_form_field_click_3_listener() { i0.ɵɵrestoreView(_r4); const _r2 = i0.ɵɵreference(8); return _r2.toggle(); });\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelement(6, \"i\", 5);\n        i0.ɵɵelement(7, \"mc-datepicker\", null, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\");\n        i0.ɵɵelementStart(10, \"h3\");\n        i0.ɵɵtext(11, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r1 = i0.ɵɵreference(4);\n        const _r2 = i0.ɵɵreference(8);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.languageList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mcWarningTooltip\", \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.selectedDate)(\"placeholder\", ctx.selectedLanguage.placeholder)(\"mcDatepicker\", _r2)(\"mcValidationTooltip\", _r1);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.selectedDate.value);\n    } }, directives: [i2.McRadioGroup, i3.NgForOf, i4.McFormField, i5.McWarningTooltipTrigger, i6.DefaultValueAccessor, i7.McDatepickerInput, i6.NgControlStatus, i6.FormControlDirective, i8.McIcon, i8.McIconCSSStyler, i4.McSuffix, i7.McDatepicker, i2.McRadioButton], styles: [\".example-radio-group[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column}.example-radio-button[_ngcontent-%COMP%]{margin-bottom:10px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatepickerLanguageExample, [{\n        type: Component,\n        args: [{ selector: 'datepicker-language-example', providers: [{\n                        provide: MC_DATE_FORMATS,\n                        useFactory: mcDateFormatsFactory\n                    }], template: \"<mc-radio-group\\n    class=\\\"example-radio-group\\\"\\n    (change)=\\\"setFormat($event)\\\">\\n    <mc-radio-button *ngFor=\\\"let language of languageList\\\"\\n                     [value]=\\\"language\\\"\\n                     [checked]=\\\"language.name === selectedLanguage.name\\\"\\n                     class=\\\"example-radio-button\\\">\\n        {{ language.name }}\\n    </mc-radio-button>\\n</mc-radio-group>\\n\\n<br>\\n\\n<mc-form-field\\n    (click)=\\\"picker.toggle()\\\"\\n    [mcWarningTooltip]=\\\"'\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B'\\\"\\n    #tooltip=\\\"mcWarningTooltip\\\">\\n\\n    <input\\n        [formControl]=\\\"selectedDate\\\"\\n        [placeholder]=\\\"selectedLanguage.placeholder\\\"\\n        [mcDatepicker]=\\\"picker\\\"\\n        [mcValidationTooltip]=\\\"tooltip\\\"/>\\n    <i mc-icon=\\\"mc-calendar_16\\\" mcSuffix></i>\\n    <mc-datepicker #picker></mc-datepicker>\\n</mc-form-field>\\n\\n<div>\\n    <h3>Date</h3>\\n    <p>{{ selectedDate.value }}</p>\\n</div>\\n\", styles: [\".example-radio-group{display:inline-flex;flex-direction:column}.example-radio-button{margin-bottom:10px}\\n\"] }]\n    }], function () { return [{ type: i1.DateAdapter }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MC_DATE_FORMATS]\n            }] }]; }, null); })();\n\n/**\n * @title Datepicker\n */\nclass DatepickerNotEmptyExample {\n    constructor(adapter) {\n        this.date = adapter.today();\n    }\n}\nDatepickerNotEmptyExample.ɵfac = function DatepickerNotEmptyExample_Factory(t) { return new (t || DatepickerNotEmptyExample)(i0.ɵɵdirectiveInject(i1.DateAdapter)); };\nDatepickerNotEmptyExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DatepickerNotEmptyExample, selectors: [[\"datepicker-not-empty-example\"]], features: [i0.ɵɵProvidersFeature([\n            { provide: MC_DATE_LOCALE, useValue: 'ru' },\n            {\n                provide: DateAdapter,\n                useFactory: (locale) => new LuxonDateAdapter(locale),\n                deps: [MC_DATE_LOCALE]\n            }\n        ])], decls: 6, vars: 5, consts: [[3, \"mcWarningTooltip\", \"click\"], [\"tooltip\", \"mcWarningTooltip\"], [3, \"ngModel\", \"placeholder\", \"mcDatepicker\", \"mcValidationTooltip\", \"ngModelChange\"], [\"mc-icon\", \"mc-calendar_16\", \"mcSuffix\", \"\"], [\"myDatepicker\", \"\"]], template: function DatepickerNotEmptyExample_Template(rf, ctx) { if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mc-form-field\", 0, 1);\n        i0.ɵɵlistener(\"click\", function DatepickerNotEmptyExample_Template_mc_form_field_click_0_listener() { i0.ɵɵrestoreView(_r2); const _r1 = i0.ɵɵreference(5); return _r1.toggle(); });\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerNotEmptyExample_Template_input_ngModelChange_2_listener($event) { return ctx.date = $event; });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelement(4, \"mc-datepicker\", null, 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        const _r1 = i0.ɵɵreference(5);\n        i0.ɵɵproperty(\"mcWarningTooltip\", \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.date)(\"placeholder\", \"\\u0434\\u0434.\\u043C\\u043C.\\u0433\\u0433\\u0433\\u0433\")(\"mcDatepicker\", _r1)(\"mcValidationTooltip\", _r0);\n    } }, directives: [i4.McFormField, i5.McWarningTooltipTrigger, i6.DefaultValueAccessor, i7.McDatepickerInput, i6.NgControlStatus, i6.NgModel, i8.McIcon, i8.McIconCSSStyler, i4.McSuffix, i7.McDatepicker], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatepickerNotEmptyExample, [{\n        type: Component,\n        args: [{ selector: 'datepicker-not-empty-example', providers: [\n                    { provide: MC_DATE_LOCALE, useValue: 'ru' },\n                    {\n                        provide: DateAdapter,\n                        useFactory: (locale) => new LuxonDateAdapter(locale),\n                        deps: [MC_DATE_LOCALE]\n                    }\n                ], template: \"<mc-form-field\\n    (click)=\\\"myDatepicker.toggle()\\\"\\n    [mcWarningTooltip]=\\\"'\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B'\\\"\\n    #tooltip=\\\"mcWarningTooltip\\\">\\n\\n    <input\\n        [(ngModel)]=\\\"date\\\"\\n        [placeholder]=\\\"'\\u0434\\u0434.\\u043C\\u043C.\\u0433\\u0433\\u0433\\u0433'\\\"\\n        [mcDatepicker]=\\\"myDatepicker\\\"\\n        [mcValidationTooltip]=\\\"tooltip\\\"/>\\n    <i mc-icon=\\\"mc-calendar_16\\\" mcSuffix></i>\\n    <mc-datepicker #myDatepicker></mc-datepicker>\\n</mc-form-field>\\n\", styles: [\"\"] }]\n    }], function () { return [{ type: i1.DateAdapter }]; }, null); })();\n\n/**\n * @title Datepicker\n */\nclass DatepickerOverviewExample {\n}\nDatepickerOverviewExample.ɵfac = function DatepickerOverviewExample_Factory(t) { return new (t || DatepickerOverviewExample)(); };\nDatepickerOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DatepickerOverviewExample, selectors: [[\"datepicker-overview-example\"]], features: [i0.ɵɵProvidersFeature([\n            { provide: MC_DATE_LOCALE, useValue: 'ru' },\n            {\n                provide: DateAdapter,\n                useFactory: (locale) => new LuxonDateAdapter(locale),\n                deps: [MC_DATE_LOCALE]\n            }\n        ])], decls: 6, vars: 5, consts: [[3, \"mcWarningTooltip\", \"click\"], [\"tooltip\", \"mcWarningTooltip\"], [3, \"ngModel\", \"placeholder\", \"mcDatepicker\", \"mcValidationTooltip\", \"ngModelChange\"], [\"mc-icon\", \"mc-calendar_16\", \"mcSuffix\", \"\"], [\"myDatepicker\", \"\"]], template: function DatepickerOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mc-form-field\", 0, 1);\n        i0.ɵɵlistener(\"click\", function DatepickerOverviewExample_Template_mc_form_field_click_0_listener() { i0.ɵɵrestoreView(_r2); const _r1 = i0.ɵɵreference(5); return _r1.toggle(); });\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerOverviewExample_Template_input_ngModelChange_2_listener($event) { return ctx.date = $event; });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelement(4, \"mc-datepicker\", null, 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        const _r1 = i0.ɵɵreference(5);\n        i0.ɵɵproperty(\"mcWarningTooltip\", \"\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.date)(\"placeholder\", \"\\u0434\\u0434.\\u043C\\u043C.\\u0433\\u0433\\u0433\\u0433\")(\"mcDatepicker\", _r1)(\"mcValidationTooltip\", _r0);\n    } }, directives: [i4.McFormField, i5.McWarningTooltipTrigger, i6.DefaultValueAccessor, i7.McDatepickerInput, i6.NgControlStatus, i6.NgModel, i8.McIcon, i8.McIconCSSStyler, i4.McSuffix, i7.McDatepicker], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatepickerOverviewExample, [{\n        type: Component,\n        args: [{ selector: 'datepicker-overview-example', providers: [\n                    { provide: MC_DATE_LOCALE, useValue: 'ru' },\n                    {\n                        provide: DateAdapter,\n                        useFactory: (locale) => new LuxonDateAdapter(locale),\n                        deps: [MC_DATE_LOCALE]\n                    }\n                ], template: \"<mc-form-field\\n    (click)=\\\"myDatepicker.toggle()\\\"\\n    [mcWarningTooltip]=\\\"'\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B'\\\"\\n    #tooltip=\\\"mcWarningTooltip\\\">\\n\\n    <input\\n        [(ngModel)]=\\\"date\\\"\\n        [placeholder]=\\\"'\\u0434\\u0434.\\u043C\\u043C.\\u0433\\u0433\\u0433\\u0433'\\\"\\n        [mcDatepicker]=\\\"myDatepicker\\\"\\n        [mcValidationTooltip]=\\\"tooltip\\\"/>\\n    <i mc-icon=\\\"mc-calendar_16\\\" mcSuffix></i>\\n    <mc-datepicker #myDatepicker></mc-datepicker>\\n</mc-form-field>\\n\", styles: [\"\"] }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    DatepickerLanguageExample,\n    DatepickerOverviewExample,\n    DatepickerNotEmptyExample\n];\nclass DatepickerExamplesModule {\n}\nDatepickerExamplesModule.ɵfac = function DatepickerExamplesModule_Factory(t) { return new (t || DatepickerExamplesModule)(); };\nDatepickerExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DatepickerExamplesModule });\nDatepickerExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            McLuxonDateModule,\n            McDatepickerModule,\n            McInputModule,\n            McFormFieldModule,\n            McIconModule,\n            McRadioModule,\n            McToolTipModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatepickerExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    McLuxonDateModule,\n                    McDatepickerModule,\n                    McInputModule,\n                    McFormFieldModule,\n                    McIconModule,\n                    McRadioModule,\n                    McToolTipModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DatepickerExamplesModule, { declarations: [DatepickerLanguageExample,\n        DatepickerOverviewExample,\n        DatepickerNotEmptyExample], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        McLuxonDateModule,\n        McDatepickerModule,\n        McInputModule,\n        McFormFieldModule,\n        McIconModule,\n        McRadioModule,\n        McToolTipModule], exports: [DatepickerLanguageExample,\n        DatepickerOverviewExample,\n        DatepickerNotEmptyExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DatepickerExamplesModule, DatepickerLanguageExample, DatepickerNotEmptyExample, DatepickerOverviewExample };\n"],"names":["McCalendarCell","constructor","value","displayValue","ariaLabel","enabled","cssClasses","McCalendarBody","elementRef","ngZone","EventEmitter","cellClicked","cell","selectedValueChange","emit","ngOnChanges","changes","columnChanges","numCols","rows","firstRowOffset","length","cellAspectRatio","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","activeCell","focusActiveCell","runOutsideAngular","onStable","asObservable","pipe","take","subscribe","nativeElement","querySelector","focus","i0","i1","Component","exportAs","host","class","role","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","template","styles","label","Input","todayValue","selectedValue","labelMinRequiredCells","Output","createMissingDateImplError","provider","Error","McDatepickerIntl","Subject","Injectable","providedIn","DAYS_PER_WEEK","McMonthView","changeDetectorRef","dateFormats","dateAdapter","dir","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","long","i","narrow","slice","concat","_activeDate","today","activeDate","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","minDate","maxDate","hasSameMonthAndYear","init","selected","_selected","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","ngAfterContentInit","dateSelected","date","selectedYear","getYear","selectedMonth","getMonth","createDate","selectedChange","userSelection","handleCalendarBodyKeydown","event","isRtl","keyCode","LEFT_ARROW","addCalendarDays","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","getDate","END","getNumDaysInMonth","PAGE_UP","altKey","addCalendarYears","addCalendarMonths","PAGE_DOWN","ENTER","SPACE","dateFilter","preventDefault","compareDate","activeDateChange","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","markForCheck","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","push","shouldEnableDate","format","dateA11yLabel","cellClasses","dateClass","undefined","d1","d2","obj","isDateInstance","isValid","MC_DATE_FORMATS","i1$1","Optional","Inject","ViewChild","static","yearsPerPage","yearsPerRow","McMultiYearView","Math","floor","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","yearSelected","month","min","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","McYearView","getMonthInCurrentYear","onMonthSelected","normalizedDate","monthSelected","VERTICAL_SHIFT","PAGE_SHIFT","MAX_MONTH_INDEX","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","McCalendarView","McCalendarHeader","intl","calendar","stateChanges","periodButtonText","currentView","Month","monthYearLabel","replace","Year","firstYearInView","lastYearInView","periodButtonLabel","switchToMultiYearViewLabel","switchToMonthViewLabel","prevButtonLabel","prevMonthLabel","prevYearLabel","MultiYear","prevMultiYearLabel","nextButtonLabel","nextMonthLabel","nextYearLabel","nextMultiYearLabel","currentPeriodClicked","includes","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","firstDate","secondDate","firstYear","secondYear","firstMonth","secondMonth","forwardRef","McCalendar","i3","decorators","intlChanges","next","startAt","_startAt","clampedActiveDate","_currentView","moveFocusOnNextTick","calendarHeaderPortal","ComponentPortal","headerComponent","startView","ngAfterViewChecked","ngOnDestroy","unsubscribe","complete","change","firstChange","view","getCurrentViewComponent","detectChanges","updateTodaysDate","monthView","yearView","multiYearView","sameDate","yearSelectedInMultiYearView","normalizedYear","monthSelectedInYearView","normalizedMonth","userSelected","goToDateInView","i8","mcDatepickerAnimations","transformPanel","trigger","state","style","opacity","transform","transition","animate","fadeInCalendar","Element","prototype","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","InjectionToken","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","McDatepickerContent","Subscription","ngAfterViewInit","subscriptions","add","datepicker","animationDone","startExitAnimation","animationState","animations","McDatepicker","viewContainerRef","scrollStrategy","document","EMPTY","hasBackdrop","_hasBackdrop","coerceBooleanProperty","datepickerInput","disabled","_disabled","newValue","disabledChange","opened","_opened","open","close","validSelected","max","inputSubscription","closeSubscription","destroyOverlay","select","oldValue","selectedChanged","selectYear","selectMonth","registerInput","input","valueChange","popupComponentRef","instance","focusedElementBeforeOpen","activeElement","openAsPopup","openedStream","restoreFocus","closedStream","toggle","isReadOnly","popupRef","dispose","calendarPortal","createPopup","hasAttached","attach","updatePosition","overlayConfig","OverlayConfig","positionStrategy","createPopupPositionStrategy","backdropClass","direction","panelClass","create","closingActions","body","merge","backdropClick","outsidePointerEvents","detachments","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","i3$1","DOCUMENT","McFormFieldControl","useExisting","selector","providers","calendarHeaderComponent","DateParts","MAX_YEAR","YEAR_LENGTH","DateDigit","start","day","parse","parseDay","parseMonth","parseYear","end","isDay","isMonth","isYear","fullName","parsedValue","parseInt","maxDays","substring","MC_DATEPICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","McDatepickerInput","multi","MC_DATEPICKER_VALIDATORS","NG_VALIDATORS","McDatepickerInputEvent","target","targetElement","uniqueComponentIdSuffix","renderer","correctCursorPosition","formattedValue","replaceSymbols","viewValue","newTimeObj","getDateFromString","lastValueValid","_value","cvaOnChange","control","updateValueAndValidity","emitEvent","setViewValue","getTimeStringFromDate","dateInput","selectNextDigitByCursor","selectionStart","updateValue","getDefaultValue","viewDigits","split","separator","filter","firsViewDigit","secondViewDigit","thirdViewDigit","setTimeout","firstDigit","secondDigit","thirdDigit","digitWithYear","viewDigitWithYear","reduce","acc","digit","index","Object","values","some","isNaN","createDateTime","hours","minutes","seconds","milliseconds","setFormat","focused","empty","mcDatepickerParse","text","controlValue","mcDatepickerMin","actual","mcDatepickerMax","mcDatepickerFilter","validator","Validators","compose","parseValidator","minValidator","maxValidator","filterValidator","localeSubscription","localeChanges","updateLocaleParams","required","_required","mcDatepicker","datepickerSubscription","onTouched","dateChange","validatorOnChange","oldDate","formatValue","_min","_max","element","blur","id","_id","uid","mcValidationTooltip","tooltip","enterDelay","validationTooltipShowDelay","initListeners","incorrectInput","isOpen","show","hide","validationTooltipHideDelay","isBadInput","ngControl","readOnly","selectionEnd","onContainerClick","focusChanged","isFocused","registerOnValidatorChange","fn","validate","setControl","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","onKeyDown","isLetterKey","isKeyForOpen","isKeyForClose","TAB","isKeyForByPass","spaceKeyHandler","verticalArrowKeyHandler","changeCaretPosition","test","key","getNewValue","onInput","onChange","onBlur","parseOnBlur","onPaste","$event","rawValue","clipboardData","getData","match","groups","first","second","third","join","toISO8601","toIso8601","separatorPositions","item","getDigitPositions","ESCAPE","ctrlKey","metaKey","hasModifierKey","isVerticalMovement","isHorizontalMovement","selectNextDigit","savePosition","setProperty","part","timeString","defaultValue","getHours","getMinutes","getSeconds","getMilliseconds","timeFormat","getDateEditMetrics","cursorPosition","incrementDate","dateVal","whatToIncrement","lastDay","getLastDayFor","decrementDate","whatToDecrement","changedTime","modifiedTimePart","cursorPos","nextSeparatorPos","indexOf","selectDigitByCursor","endPositionOfCurrentDigit","cycle","lastValue","newCursorPos","validity","badInput","formatInLowerCase","toLowerCase","prev","arr","Directive","placeholder","McDatepickerToggleIcon","McDatepickerToggle","watchStateChanges","stopPropagation","datepickerDisabled","observableOf","inputDisabled","datepickerToggled","tabIndex","customIcon","ContentChild","button","McDatepickerModule","CommonModule","McButtonModule","OverlayModule","A11yModule","PortalModule","McIconModule","NgModule","imports","exports","declarations","entryComponents"],"sourceRoot":"webpack:///"}