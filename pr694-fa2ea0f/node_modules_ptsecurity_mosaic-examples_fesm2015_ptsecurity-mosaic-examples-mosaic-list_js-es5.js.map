{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA2DA;;;;;;;;;;;kEC3DA;;;;;;mEAAA;;;;;;;;;UDqFaA;AAkFT,+BACYC,UADZ,EAEYC,cAFZ,EAGYC,MAHZ,EAIsDC,aAJtD,EAKyBC,KALzB,EAK0C;AAAA;;AAJ9B;AACA;AACA;AAC0C;AAC7B;AAtFzB,0BAAoB,KAApB;AAES,yBAAU,IAAIC,yCAAJ,EAAV;AAEA,wBAAS,IAAIA,yCAAJ,EAAT;;;;;;AAaD,mCAAoB,KAApB;AA8BA,2BAAY,KAAZ;AA4BA,2BAAY,KAAZ;AAYJ;;;;eAnEK;AAAU,mBAAO,KAAKC,MAAZ;AAAqB;eAC/B,aAACC,QAAD,EAAc;AACnB,gBAAI,KAAKC,QAAL,IAAiBD,QAAQ,KAAK,KAAKE,KAAnC,IAA4C,KAAKC,iBAArD,EAAwE;AACpE,mBAAKF,QAAL,GAAgB,KAAhB;AACH;;AAED,iBAAKF,MAAL,GAAcC,QAAd;AACH;;;eAIW;AACR,gBAAMI,qBAAqB,GAAG,KAAKR,aAAL,IAAsB,KAAKA,aAAL,CAAmBS,QAAvE;AACA,gBAAMC,aAAa,GAAG,KAAKT,KAAL,IAAc,KAAKA,KAAL,CAAWQ,QAA/C;AAEA,mBAAOD,qBAAqB,IAAIE,aAAzB,IAA0C,KAAKC,SAAtD;AACH;eAEW,aAACL,KAAD,EAAW;AACnB,gBAAMF,QAAQ,GAAG,oEAAUE,KAAV,CAAjB;;AAEA,gBAAIF,QAAQ,KAAK,KAAKO,SAAtB,EAAiC;AAC7B,mBAAKA,SAAL,GAAiBP,QAAjB;AACA,mBAAKN,cAAL,CAAoBc,YAApB;AACH;AACJ;;;eAKe;AACZ,mBAAO,KAAKC,aAAL,KAAuBC,SAAvB,GAAmC,KAAKD,aAAxC,GAAwD,KAAKb,aAAL,CAAmBe,YAAlF;AACH;eAEe,aAACT,KAAD,EAAW;AACvB,iBAAKO,aAAL,GAAqB,8EAAsBP,KAAtB,CAArB;AACH;;;eAKW;AACR,mBAAO,KAAKN,aAAL,CAAmBgB,cAAnB,IAAqC,KAAKhB,aAAL,CAAmBgB,cAAnB,CAAkCC,UAAlC,CAA6C,IAA7C,CAArC,IAA2F,KAAlG;AACH;eAEW,aAACX,KAAD,EAAe;AACvB,gBAAMW,UAAU,GAAG,oEAAUX,KAAV,CAAnB;;AAEA,gBAAIW,UAAU,KAAK,KAAKC,SAAxB,EAAmC;AAC/B,mBAAKC,WAAL,CAAiBF,UAAjB;AAEA,mBAAKjB,aAAL,CAAmBoB,iBAAnB;AACH;AACJ;;;eAIW;AACR,mBAAO,KAAKX,QAAL,GAAgB,IAAhB,GAAuB,CAAC,CAA/B;AACH;;;iBAUD,oBAAQ;AAAA;;AACJ,gBAAMY,IAAI,GAAG,KAAKrB,aAAlB;;AAEA,gBAAIqB,IAAI,CAAClB,MAAL,IAAekB,IAAI,CAAClB,MAAL,CAAYmB,IAAZ,CAAkB,eAAD;AAAA,qBAAWD,IAAI,CAACE,WAAL,CAAiBjB,KAAjB,EAAwB,MAAKH,MAA7B,CAAX;AAAA,aAAjB,CAAnB,EAAsF;AAClF,mBAAKgB,WAAL,CAAiB,IAAjB;AACH;;AAED,gBAAMK,WAAW,GAAG,KAAKN,SAAzB,CAPI;;;;;;AAcJO,mBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB;AACnB,kBAAI,MAAKT,SAAL,IAAkBM,WAAtB,EAAmC;AAC/B,sBAAKnB,QAAL,GAAgB,IAAhB;;AACA,sBAAKP,cAAL,CAAoBc,YAApB;AACH;AAJL;AAOA,iBAAKL,iBAAL,GAAyB,IAAzB;AACH;;;iBAED,uBAAW;AAAA;;AACP,gBAAI,KAAKF,QAAT,EAAmB;;;AAGfoB,qBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB;AAAA,uBAAM,OAAKtB,QAAL,GAAgB,KAAtB;AAAA,eAAvB;AACH;;AAED,iBAAKL,aAAL,CAAmB4B,oBAAnB,CAAwC,IAAxC;AACH;;;iBAED,kBAAM;AACF,iBAAKvB,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACH;;;iBAED,oBAAQ;AACJ,mBAAO,KAAKwB,IAAL,GAAY,KAAKA,IAAL,CAAUC,aAAV,CAAwBC,WAApC,GAAkD,EAAzD;AACH;;;iBAED,qBAAY1B,QAAZ,EAA6B;AACzB,gBAAI,KAAKa,SAAL,KAAmBb,QAAnB,IAA+B,CAAC,KAAKL,aAAL,CAAmBgB,cAAvD,EAAuE;AAAE;AAAS;;AAElF,iBAAKE,SAAL,GAAiBb,QAAjB;;AAEA,gBAAIA,QAAJ,EAAc;AACV,mBAAKL,aAAL,CAAmBgB,cAAnB,CAAkCgB,MAAlC,CAAyC,IAAzC;AADJ,mBAEO;AACH,mBAAKhC,aAAL,CAAmBgB,cAAnB,CAAkCiB,QAAlC,CAA2C,IAA3C;AACH;;AAED,iBAAKnC,cAAL,CAAoBc,YAApB;AACH;;;iBAED,qBAAS;AACL,mBAAO,KAAKf,UAAL,CAAgBiC,aAAhB,CAA8BI,cAA9B,GAA+C,CAA/C,EAAkDC,MAAzD;AACH;;;iBAED,qBAAYC,MAAZ,EAAkB;AACd,gBAAI,KAAK3B,QAAT,EAAmB;AAAE;AAAS;;AAE9B,iBAAKT,aAAL,CAAmBqC,yBAAnB,CACI,IADJ,EACU,0EAAeD,MAAf,EAAuB,UAAvB,CADV,EAC8C,0EAAeA,MAAf,EAAuB,SAAvB,CAD9C;AAGH;;;iBAED,iBAAK;AAAA;;AACD,gBAAI,CAAC,KAAKE,QAAV,EAAoB;AAChB,mBAAKzC,UAAL,CAAgBiC,aAAhB,CAA8BS,KAA9B;AAEA,mBAAKC,OAAL,CAAaC,IAAb,CAAkB;AAAEC,sBAAM,EAAE;AAAV,eAAlB;AAEAjB,qBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB;AACnB,uBAAKW,QAAL,GAAgB,IAAhB;;AAEA,uBAAKxC,cAAL,CAAoBc,YAApB;AAHJ;AAKH;AACJ;;;iBAED,gBAAI;AAAA;;;;;;AAKA,iBAAKb,MAAL,CAAY4C,QAAZ,CACKC,YADL,GAEKC,IAFL,CAEU,sDAAK,CAAL,CAFV,EAGKC,SAHL,CAGe;AACP,qBAAK/C,MAAL,CAAYgD,GAAZ,CAAgB;AACZ,uBAAKT,QAAL,GAAgB,KAAhB;;AAEA,uBAAKU,MAAL,CAAYP,IAAZ,CAAiB;AAAEC,wBAAM,EAAE;AAAV,iBAAjB;AAHJ;AAJR;AAUH;;;iBAED,0BAAc;AACV,mBAAO,KAAK7C,UAAL,CAAgBiC,aAAvB;AACH;;;;;;;;;yBA/LQlC,+EAAYqD,qDAAZ,GAAYA,mTAsFT,2DAAW;AAAA,iBAAMC,gBAAN;AAAA,SAAX,CAtFS,GAsFCD,gEAAuBE,+DAAvB,EAAuB,CAAvB;;;;;;cAtFbvD;;;;mFAOQuD;;;;;;;;;;;;;;;;;;;;;;;;;qBAPRC;;qBAAAA;;qBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;yECrFb;;qEAAA;;yEAAA;;uEAAA;;;;;;;;oEAAA;;qEAAA;;;qBAWAC;;;;;;2HD0EazD,eAAY;gBArBxBqD,oDAqBwB;iBArBd;AACPK,oBAAQ,EAAE,cADH;AAEPC,oBAAQ,EAAE,gBAFH;AAGPC,gBAAI,EAAE;AACF,uBAAO,6BADL;AAEF,qCAAuB,UAFrB;AAGF,oCAAsB,UAHpB;AAIF,qCAAuB,UAJrB;AAMF,iCAAmB,UANjB;AAOF,iCAAmB,kBAPjB;AASF,yBAAW,SATT;AAUF,wBAAU,QAVR;AAWF,yBAAW;AAXT,aAHC;AAgBPC,uBAAW,EAAE,kBAhBN;AAiBPC,yBAAa,EAAET,iEAjBR;AAkBPU,+BAAmB,EAAE,KAlBd;AAmBPC,2BAAe,EAAEX;AAnBV;AAqBc;;;;;;;;kBAsFgDC;AAAeW;oBAA/EZ,iDAA+E;qBAAxE,2DAAW;AAAA,uBAAMC,gBAAN;AAAA,eAAX;AAAwE;;;;oBAC/ED;;;;AAhFoBa,eAAK;kBAA7Bb,0DAA6B;mBAAbE;AAAa;AAEQtB,cAAI;kBAAzCoB,oDAAyC;mBAA/B,QAAQ;AAAE,wBAAQ;AAAV;AAAuB;AAGjCc,0BAAgB;kBAAxBd;AAAwB;AASrB3C,eAAK;kBADR2C;AACQ;AAWLxC,kBAAQ;kBADXwC;AACW;AAmBRlC,sBAAY;kBADfkC;AACe;AAWZ5C,kBAAQ;kBADX4C;AACW;;;;UAqIHe,iCAAgC,GAAQ;AACjDC,eAAO,EAAEC,6DADwC;AAEjDC,mBAAW,EAAE,2DAAW;AAAA,iBAAMjB,gBAAN;AAAA,SAAX,CAFoC;AAGjDkB,aAAK,EAAE;AAH0C;;UAMxCC,yBACT,gCAAmBC,MAAnB,EAAmD5B,MAAnD,EAAuE;AAAA;;AAApD;AAAgC;AAAwB;;UAIlE6B,uBACT,8BAAmB1E,UAAnB,EAAyC;AAAA;;AAAtB;AAA0B,SAGjD;;;UACa2E,yBAAwB,GAC/B,wEAAc,wEAAcD,oBAAd,CAAd;;UAwBOrB;;;;;AA8ET,kCACIrD,UADJ,EAEY4E,iBAFZ,EAG2BC,QAH3B,EAGiD;AAAA;;AAAA;;AAE7C,qCAAM7E,UAAN;AAHQ;AAhEJ,+BAAuB,IAAvB;AAWA,mCAA2B,IAA3B;AAQC,8BAAsB,KAAtB;AAYD,6BAAY,CAAZ;AAER,gCAA8B,IAA9B,CAgCiD;;AAzB9B,mCAAuD,IAAIoD,uDAAJ,EAAvD;;;AAgBF,6BAAY,IAAI/C,yCAAJ,EAAZ;;;;;;;AAgCR,+BAA6C,UAACyE,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,KAAKC,EAAnB;AAAA,WAA7C,CAvBwC;;;;AA8NjD,6BAAwB,aAAxB,EA9NiD;;;AAuXzC,4BAAkC,WAAD,EAAO,CAAxC;;AAnXJ,cAAIF,QAAQ,KAAKvB,0EAAb,IAAsCuB,QAAQ,KAAKvB,0EAAvD,EAA8E;AAC1E,mBAAK0B,YAAL,GAAoBH,QAApB;AADJ,iBAEO,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;AAC1B,mBAAKG,YAAL,GAAoB1B,0EAApB;AACH;;AAED,cAAI,OAAK0B,YAAL,KAAsB1B,0EAA1B,EAAiD;AAC7C,mBAAK2B,UAAL,GAAkB,KAAlB;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACH;;AAED,iBAAK/D,cAAL,GAAsB,IAAIgE,oEAAJ,CAAiC,OAAKN,QAAtC,CAAtB;AAf6C;AAgBhD;;;;eAzFa;AACV,mBAAO,KAAKO,WAAZ;AACH;eAEa,aAAC3E,KAAD,EAAe;AACzB,iBAAK2E,WAAL,GAAmB,8EAAsB3E,KAAtB,CAAnB;AACH;;;eAKiB;AACd,mBAAO,KAAK4E,eAAZ;AACH;eAEiB,aAAC5E,KAAD,EAAe;AAC7B,iBAAK4E,eAAL,GAAuB,8EAAsB5E,KAAtB,CAAvB;AACH;;;eAMW;AACR,mBAAO,CAAC,CAAC,KAAKuE,YAAd;AACH;;;eAKW;AACR,mBAAO,KAAKpE,QAAL,GAAgB,CAAC,CAAjB,GAAqB,KAAK0E,SAAjC;AACH;eAEW,aAAC7E,KAAD,EAAW;AACnB,iBAAK8E,YAAL,GAAoB9E,KAApB;AACA,iBAAK6E,SAAL,GAAiB7E,KAAjB;AACH;;;eAMe;AACZ,mBAAO,KAAKuE,YAAL,KAAsB1B,0EAA7B;AACH;;;eAOqB;AAClB,mBAAO,8EAAS,KAAKkC,OAAL,CAAaC,GAAb,CAAkB,gBAAD;AAAA,qBAAY5C,MAAM,CAACF,OAAnB;AAAA,aAAjB,CAAT,EAAP;AACH;;;eAEoB;AACjB,mBAAO,8EAAS,KAAK6C,OAAL,CAAaC,GAAb,CAAkB,gBAAD;AAAA,qBAAY5C,MAAM,CAACM,MAAnB;AAAA,aAAjB,CAAT,EAAP;AACH;;;iBAwCD,8BAAkB;AAAA;;AACd,iBAAKuC,UAAL,GAAkB,oEAAU,KAAKA,UAAf,CAAlB;AAEA,iBAAKC,UAAL,GAAkB,IAAIC,kEAAJ,CAAkC,KAAKJ,OAAvC,EACbK,aADa,GAEbC,uBAFa,CAEW,CAAC,KAAKJ,UAFjB,EAGbK,yBAHa,CAGa,KAAKL,UAAL,GAAkB,KAAlB,GAA0B,IAHvC,CAAlB;AAKA,iBAAKC,UAAL,CAAgBK,MAAhB,CACKhD,IADL,CACU,4DAAU,KAAKiD,SAAf,CADV,EAEKhD,SAFL,CAEe;AACP,qBAAKqC,SAAL,GAAiB,CAAC,CAAlB;AAEAY,wBAAU,CAAC;AACP,uBAAKZ,SAAL,GAAiB,OAAKC,YAAL,IAAqB,CAAtC;;AACA,uBAAKX,iBAAL,CAAuB7D,YAAvB;AAFM,gBAAV;AALR;;AAWA,gBAAI,KAAKT,MAAT,EAAiB;AACb,mBAAK6F,oBAAL,CAA0B,KAAK7F,MAA/B;AACH;;AAED,iBAAKa,cAAL,CAAoBiF,OAApB,CACKpD,IADL,CACU,4DAAU,KAAKiD,SAAf,CADV,EAEKhD,SAFL,CAEgB,eAAD,EAAM;AAAA,yDACMoD,KAAK,CAACC,KADZ;AAAA;;AAAA;AACb,oEAAgC;AAAA,sBAArBC,IAAqB;AAAEA,sBAAI,CAAC/F,QAAL,GAAgB,IAAhB;AAAuB;AAD5C;AAAA;AAAA;AAAA;AAAA;;AAAA,0DAGM6F,KAAK,CAACG,OAHZ;AAAA;;AAAA;AAGb,uEAAkC;AAAA,sBAAvBD,KAAuB;AAAEA,uBAAI,CAAC/F,QAAL,GAAgB,KAAhB;AAAwB;AAH/C;AAAA;AAAA;AAAA;AAAA;AAFrB;AAQA,iBAAKgF,OAAL,CAAaiB,OAAb,CACKzD,IADL,CACU,4DAAU,IAAV,CADV,EAC2B,4DAAU,KAAKiD,SAAf,CAD3B,EAEKhD,SAFL,CAEe;AACP,qBAAKyD,YAAL,GADO;;;AAIP,qBAAKC,cAAL;AANR;AASA,iBAAKC,gBAAL;AACH;;;iBAED,uBAAW;AACP,iBAAKX,SAAL,CAAerD,IAAf;AAEA,iBAAKqD,SAAL,CAAeY,QAAf;AACH;;;iBAED,iBAAK;AACD,gBAAI,KAAKrB,OAAL,CAAasB,MAAb,KAAwB,CAA5B,EAA+B;AAAE;AAAS;;AAE1C,iBAAKnB,UAAL,CAAgBoB,kBAAhB;AACH;;;iBAED,gBAAI;AACA,gBAAI,CAAC,KAAKC,gBAAL,EAAL,EAA8B;AAC1B,mBAAKrB,UAAL,CAAgBsB,aAAhB,CAA8B,CAAC,CAA/B;AACH;;AAED,iBAAKC,SAAL;AACA,iBAAKtC,iBAAL,CAAuB7D,YAAvB;AACH;;;iBAED,qBAAS;AACL,iBAAKyE,OAAL,CAAa2B,OAAb,CAAsB,gBAAD;AAAA,qBAAYtE,MAAM,CAACvB,WAAP,CAAmB,IAAnB,CAAZ;AAAA,aAArB;AAEA,iBAAKC,iBAAL;AACH;;;iBAED,uBAAW;AACP,iBAAKiE,OAAL,CAAa2B,OAAb,CAAsB,gBAAD;AAAA,qBAAYtE,MAAM,CAACvB,WAAP,CAAmB,KAAnB,CAAZ;AAAA,aAArB;AAEA,iBAAKC,iBAAL;AACH;;;iBAED,4BAAgB;AACZ,gBAAI,KAAKmE,UAAL,IAAmB,CAAC,KAAKF,OAAL,CAAa4B,KAArC,EAA4C;AAAE;AAAS;;AAEvD,iBAAKzB,UAAL,CAAgB0B,cAAhB,CAA+BC,IAAI,CAACC,KAAL,CAAW,KAAKC,SAAL,KAAmB,KAAKhC,OAAL,CAAa4B,KAAb,CAAmBI,SAAnB,EAA9B,CAA/B;AACH;;;iBAED,mCAA0B3E,MAA1B,EAAgD4E,QAAhD,EAAmEC,OAAnE,EAAmF;AAC/E,gBAAID,QAAQ,IAAI,KAAK5C,QAArB,EAA+B;AAC3B,mBAAK8C,kBAAL,CAAwB9E,MAAxB;AADJ,mBAEO,IAAI6E,OAAJ,EAAa;AAChB,kBAAI,CAAC,KAAKE,eAAL,CAAqB/E,MAArB,CAAL,EAAmC;AAAE;AAAS;;AAE9C,mBAAK1B,cAAL,CAAoB0G,MAApB,CAA2BhF,MAA3B;AAHG,mBAIA,IAAI,KAAKoC,UAAT,EAAqB;AACxB,mBAAK9D,cAAL,CAAoB2G,KAApB;AACA,mBAAK3G,cAAL,CAAoB0G,MAApB,CAA2BhF,MAA3B;AAFG,mBAGA;AACH,mBAAK1B,cAAL,CAAoB0G,MAApB,CAA2BhF,MAA3B;AACH;;AAED,iBAAKkF,eAAL,CAAqBlF,MAArB;AACA,iBAAKtB,iBAAL;AACH;;;iBAED,iCAAwBsB,MAAxB,EAA8C4E,QAA9C,EAAiEC,OAAjE,EAAiF;AAC7E,gBAAID,QAAQ,IAAI,KAAK5C,QAArB,EAA+B;AAC3B,mBAAK8C,kBAAL,CAAwB9E,MAAxB;AADJ,mBAEO,IAAI6E,OAAJ,EAAa;AAChB,kBAAI,CAAC,KAAKE,eAAL,CAAqB/E,MAArB,CAAL,EAAmC;AAAE;AAAS;AAD3C,mBAEA;AACH,kBAAI,KAAKmC,YAAL,KAAsB1B,0EAAtB,IAA+C,CAAC,KAAKuB,QAAzD,EAAmE;AAC/D,qBAAKW,OAAL,CAAa2B,OAAb,CAAsB,cAAD;AAAA,yBAAUZ,IAAI,CAACjF,WAAL,CAAiB,KAAjB,CAAV;AAAA,iBAArB;AACAuB,sBAAM,CAACvB,WAAP,CAAmB,IAAnB;AACH;AACJ;;AAED,iBAAKyG,eAAL,CAAqBlF,MAArB;AACA,iBAAKtB,iBAAL;AACH;;;iBAED,4BAAmBsB,MAAnB,EAAuC;AAAA;;AACnC,gBAAMmF,mBAAmB,GAAGnF,MAAM,CAACrC,QAAnC;AAEA,gBAAIyH,SAAS,GAAG,KAAKtC,UAAL,CAAgBuC,uBAAhC;AACA,gBAAIC,OAAO,GAAG,KAAKxC,UAAL,CAAgBuC,uBAAhB,GAA0C,KAAKvC,UAAL,CAAgByC,eAAxE;;AAEA,gBAAID,OAAO,KAAKF,SAAhB,EAA2B;AAAE;AAAS;;AAEtC,gBAAIA,SAAS,GAAGE,OAAhB,EAAyB;AAAA,yBACE,CAACA,OAAD,EAAUF,SAAV,CADF;AACpBA,uBADoB;AACTE,qBADS;AAExB;;AAED,iBAAK3C,OAAL,CACK6C,OADL,GAEKC,KAFL,CAEWL,SAFX,EAEsBE,OAAO,GAAG,CAFhC,EAGKI,MAHL,CAGa,cAAD;AAAA,qBAAU,CAAChC,IAAI,CAAC3F,QAAhB;AAAA,aAHZ,EAIKuG,OAJL,CAIc,wBAAD,EAAe;AACpB,kBAAMqB,oBAAoB,GAAGC,cAAc,KAAK,OAAK9C,UAAL,CAAgB+C,UAAhE;;AAEA,kBAAIF,oBAAoB,IAAIC,cAAc,CAACjI,QAAvC,IAAmD,OAAK0E,cAA5D,EAA4E;AAAE;AAAS;;AAEvFuD,4BAAc,CAACnH,WAAf,CAA2B,CAAC0G,mBAA5B;AATR;AA1OqD;;;;iBAwPzD,oBAAWW,MAAX,EAA2B;AACvB,iBAAKrI,MAAL,GAAcqI,MAAd;;AAEA,gBAAI,KAAKnD,OAAT,EAAkB;AACd,mBAAKW,oBAAL,CAA0BwC,MAAM,IAAI,EAApC;AACH;AA7PoD;;;;iBAiQzD,0BAAiBC,EAAjB,EAAyC;AACrC,iBAAKC,QAAL,GAAgBD,EAAhB;AAlQqD;;;;iBAsQzD,2BAAkBA,EAAlB,EAAgC;AAC5B,iBAAK1B,SAAL,GAAiB0B,EAAjB;AAvQqD;;;;iBA2QzD,0BAAiBE,UAAjB,EAAoC;AAChC,gBAAI,KAAKtD,OAAT,EAAkB;AACd,mBAAKA,OAAL,CAAa2B,OAAb,CAAsB,gBAAD;AAAA,uBAAYtE,MAAM,CAACjC,QAAP,GAAkBkI,UAA9B;AAAA,eAArB;AACH;AACJ;;;iBAED,mCAAuB;AACnB,mBAAO,KAAKtD,OAAL,CAAa+C,MAAb,CAAqB,gBAAD;AAAA,qBAAY1F,MAAM,CAACrC,QAAnB;AAAA,aAApB,EAAiDiF,GAAjD,CAAsD,gBAAD;AAAA,qBAAY5C,MAAM,CAACpC,KAAnB;AAAA,aAArD,CAAP;AAlRqD;;;;iBAsRzD,+BAAmB;AACf,gBAAMsI,YAAY,GAAG,KAAKpD,UAAL,CAAgByC,eAArC;;AAEA,gBAAIW,YAAY,IAAI,IAAhB,IAAwB,KAAKC,YAAL,CAAkBD,YAAlB,CAA5B,EAA6D;AACzD,kBAAME,aAAa,GAAiB,KAAKzD,OAAL,CAAa6C,OAAb,GAAuBU,YAAvB,CAApC;;AAEA,kBAAIE,aAAa,IAAI,KAAKrB,eAAL,CAAqBqB,aAArB,CAArB,EAA0D;AACtDA,6BAAa,CAACpB,MAAd,GADsD;;AAItD,qBAAKE,eAAL,CAAqBkB,aAArB;AACH;AACJ;AACJ;;;iBAED,yBAAgBC,UAAhB,EAAwC;AACpC,mBAAO,EAAE,KAAKhE,cAAL,IAAuB,KAAK/D,cAAL,CAAoBX,QAApB,CAA6BsG,MAA7B,KAAwC,CAA/D,IAAoEoC,UAAU,CAAC1I,QAAjF,CAAP;AACH;;;iBAED,qBAAS;AACL,mBAAO,KAAKR,UAAL,CAAgBiC,aAAhB,CAA8BI,cAA9B,GAA+C,CAA/C,EAAkDC,MAAzD;AA1SqD;;;;iBAkTzD,8BAAqBO,MAArB,EAAyC;AACrC,gBAAIA,MAAM,CAACJ,QAAX,EAAqB;AACjB,kBAAM0G,WAAW,GAAG,KAAKC,cAAL,CAAoBvG,MAApB,CAApB,CADiB;;AAIjB,kBAAIsG,WAAW,GAAG,CAAlB,EAAqB;AACjB,qBAAKxD,UAAL,CAAgB0D,qBAAhB;AADJ,qBAEO,IAAIF,WAAW,KAAK,CAAhB,IAAqB,KAAK3D,OAAL,CAAasB,MAAb,GAAsB,CAA/C,EAAkD;AACrD,qBAAKnB,UAAL,CAAgB2D,iBAAhB;AACH;AACJ;AACJ;;;iBAED,mBAAUjD,KAAV,EAA8B;;AAE1B,gBAAMkD,OAAO,GAAGlD,KAAK,CAACkD,OAAtB;;AAEA,oBAAQA,OAAR;AACI,mBAAKC,2DAAL;AACA,mBAAKA,2DAAL;AACI,qBAAKC,mBAAL;AAEA;;AAEJ,mBAAKD,yDAAL;AACI,qBAAK7D,UAAL,CAAgBK,MAAhB,CAAuBpD,IAAvB;AAEA;;AAEJ,mBAAK4G,gEAAL;AACI,qBAAK7D,UAAL,CAAgB2D,iBAAhB;AAEA;;AACJ,mBAAKE,8DAAL;AACI,qBAAK7D,UAAL,CAAgB0D,qBAAhB;AAEA;;AACJ,mBAAKG,0DAAL;AACI,qBAAK7D,UAAL,CAAgBoB,kBAAhB;AAEA;;AACJ,mBAAKyC,yDAAL;AACI,qBAAK7D,UAAL,CAAgB+D,iBAAhB;AAEA;;AACJ,mBAAKF,6DAAL;AACI,qBAAK7D,UAAL,CAAgBgE,yBAAhB;AAEA;;AACJ,mBAAKH,+DAAL;AACI,qBAAK7D,UAAL,CAAgBiE,qBAAhB;AAEA;;AACJ;AACI;AArCR;;AAwCAvD,iBAAK,CAACwD,cAAN;AAEA,iBAAKC,uBAAL,CACI,KAAKnE,UAAL,CAAgB+C,UADpB,EAEI,0EAAerC,KAAf,EAAsB,UAAtB,CAFJ,EAGI,0EAAeA,KAAf,EAAsB,SAAtB,CAHJ;AA7WqD;;;;iBAqXzD,6BAAiB;AACb,gBAAI,KAAKb,OAAT,EAAkB;AACd,kBAAM/E,KAAK,GAAG,KAAKsJ,uBAAL,EAAd;AACA,mBAAKlB,QAAL,CAAcpI,KAAd;AACA,mBAAKH,MAAL,GAAcG,KAAd;AACH;AA1XoD;;;;iBA8XzD,yBAAgBoC,MAAhB,EAAoC;AAChC,iBAAKmH,eAAL,CAAqBC,IAArB,CAA0B,IAAIzF,sBAAJ,CAA0B,IAA1B,EAAgC3B,MAAhC,CAA1B;AACH;;;iBAES,0BAAc;AACpB,iBAAKyC,SAAL,GAAiB,KAAKC,YAAL,KAAsB,KAAKC,OAAL,CAAasB,MAAb,KAAwB,CAAxB,GAA4B,CAAC,CAA7B,GAAiC,CAAvD,CAAjB;AACH;;;iBAEO,wBAAY;AAChB,iBAAKoD,iBAAL;AACA,iBAAKC,oBAAL;AACH;;;iBAEO,6BAAiB;AACrB,gBAAI,KAAKC,uBAAT,EAAkC;AAC9B,mBAAKA,uBAAL,CAA6BC,WAA7B;AACA,mBAAKD,uBAAL,GAA+B,IAA/B;AACH;;AAED,gBAAI,KAAKE,sBAAT,EAAiC;AAC7B,mBAAKA,sBAAL,CAA4BD,WAA5B;AACA,mBAAKC,sBAAL,GAA8B,IAA9B;AACH;AACJ;;;iBAEO,gCAAoB;AAAA;;AACxB,iBAAKF,uBAAL,GAA+B,KAAKG,kBAAL,CAC1BtH,SAD0B,CACf,eAAD,EAAM;AACb,kBAAMuH,KAAK,GAAW,OAAKhF,OAAL,CAAa6C,OAAb,GAAuBoC,OAAvB,CAA+BpE,KAAK,CAACxD,MAArC,CAAtB;;AAEA,kBAAI,OAAKmG,YAAL,CAAkBwB,KAAlB,CAAJ,EAA8B;AAC1B,uBAAK7E,UAAL,CAAgB+E,gBAAhB,CAAiCF,KAAjC;AACH;AANsB,cAA/B;AASA,iBAAKF,sBAAL,GAA8B,KAAKK,iBAAL,CACzB1H,SADyB,CACf;AAAA,qBAAM,OAAK2H,IAAL,EAAN;AAAA,aADe,CAA9B;AAEH;;;;;iBAGO,4BAAgB;AACpB,mBAAO,KAAKpF,OAAL,CAAa/D,IAAb,CAAmB,gBAAD;AAAA,qBAAYoB,MAAM,CAACJ,QAAnB;AAAA,aAAlB,CAAP;AAvaqD;;;;iBA2ajD,0BAAiBhC,KAAjB,EAA8B;AAClC,mBAAO,KAAK+E,OAAL,CAAaqF,IAAb,CAAmB,gBAAD;AAAA,qBAAYhI,MAAM,CAACpC,KAAP,KAAiBA,KAA7B;AAAA,aAAlB,CAAP;AA5aqD;;;;iBAgbjD,8BAAqBkI,MAArB,EAAqC;AAAA;;AACzC,iBAAKnD,OAAL,CAAa2B,OAAb,CAAsB,gBAAD;AAAA,qBAAYtE,MAAM,CAACvB,WAAP,CAAmB,KAAnB,CAAZ;AAAA,aAArB;AAEAqH,kBAAM,CACDlD,GADL,CACU,eAAD;AAAA,qBAAW,OAAKqF,gBAAL,CAAsBrK,KAAtB,CAAX;AAAA,aADT,EAEK8H,MAFL,CAEYwC,OAFZ,EAGK5D,OAHL,CAGc,gBAAD;AAAA,qBAAYtE,MAAO,CAACvB,WAAR,CAAoB,IAApB,CAAZ;AAAA,aAHb;AAIH;;;;;;;;;iBAOO,sBAAakJ,KAAb,EAA0B;AAC9B,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKhF,OAAL,CAAasB,MAA1C;AA/bqD;;;;iBAmcjD,wBAAejE,MAAf,EAAmC;AACvC,mBAAO,KAAK2C,OAAL,CAAa6C,OAAb,GAAuBoC,OAAvB,CAA+B5H,MAA/B,CAAP;AACH;;;;QArcgC8B;;;;;yBAAxBtB,kFAAeD,qDAAf,GAAeA,+LAiFT,UAjFS;;;;;;cAAfC;;;;mFAnBCtD;;;;;;;;;;;;;;qBAmBDwD;;qBAAAA;;qBAAAA;;qBAAAA;;;;;;;;;;;;;;;;;;;;oFAHE,CAACY,iCAAD;;;;;;;;uEAhBD;;;;;;;;;2HAmBDd,kBAAe;gBAtB3BD,oDAsB2B;iBAtBjB;AACPK,oBAAQ,EAAE,iBADH;AAEPC,oBAAQ,EAAE,mBAFH;AAGPsH,oBAAQ,EAAE,2BAHH;AAIPC,qBAAS,EAAE,CAAC,aAAD,CAJJ;AAKPlH,2BAAe,EAAEX,yEALV;AAMPS,yBAAa,EAAET,iEANR;AAOP8H,kBAAM,EAAE,CAAC,UAAD,CAPD;AAQPvH,gBAAI,EAAE;AACF,uBAAO,mBADL;AAGF,iCAAmB,UAHjB;AAIF,iCAAmB,kBAJjB;AAMF,yBAAW,SANT;AAOF,wBAAU,QAPR;AAQF,2BAAa,mBARX;AASF,iCAAmB;AATjB,aARC;AAmBPwH,qBAAS,EAAE,CAAChH,iCAAD,CAnBJ;AAoBPL,+BAAmB,EAAE;AApBd;AAsBiB;;;;;;;;oBAiFnBV;qBAAU;;;;AA5EuCoC,iBAAO;kBAA5DpC,0DAA4D;mBAA5CrD,eAAc;AAAEqL,yBAAW,EAAE;AAAf;AAA8B;AAGzDnG,oBAAU;kBADb7B;AACa;AAWV8B,wBAAc;kBADjB9B;AACiB;AAgBTsC,oBAAU;kBAAlBtC;AAAkB;AAGfiI,kBAAQ;kBADXjI;AACW;AAkBO4G,yBAAe;kBAAjC5G;AAAiC;AAgDzB1B,qBAAW;kBAAnB0B;AAAmB;;YEzaxB;;;UAgBakI;;;;;;;yBAAAA;;;;;;cALCA;;;;;;;;;;uEAAA;;;;;;;;;2HAKDA,SAAM;gBARlBlI,oDAQkB;iBARR;AACPM,oBAAQ,EAAE,SADH;AAEPC,gBAAI,EAAE;AAAE,uBAAO;AAAT,aAFC;AAGPqH,oBAAQ,EAAE,2BAHH;AAIPC,qBAAS,EAAE,CAAC,aAAD,CAJJ;AAKPlH,2BAAe,EAAEX,yEALV;AAMPS,yBAAa,EAAET;AANR;AAQQ;;;UAeNmI;AAGT,6BAAoBvL,UAApB,EAA0C;AAAA;;AAAtB;AAA0B;;;;iBAE9C,8BAAkB;;AAEd,gBAAIsD,iEAAJ,CAAiB,KAAKW,KAAtB,EAA6B,KAAKjE,UAAlC;AACH;;;iBAED,uBAAW;AACP,iBAAKA,UAAL,CAAgBiC,aAAhB,CAA8BuJ,SAA9B,CAAwCC,GAAxC,CAA4C,YAA5C;AACH;;;iBAED,sBAAU;AACN,iBAAKzL,UAAL,CAAgBiC,aAAhB,CAA8BuJ,SAA9B,CAAwCE,MAAxC,CAA+C,YAA/C;AACH;;;iBAED,0BAAc;AACV,mBAAO,KAAK1L,UAAL,CAAgBiC,aAAvB;AACH;;;;;;;;;yBApBQsJ,6EAAUnI,qDAAV;;;;;;cAAAmI;;;;mFACQjI;;;;;;;;;;;;;qBADRC;;qBAAAA;;;;;;;;;;;;yEC/Bb;;uEAAA;;yEAAA;;uEAAA;;;;uEAAA;;;;;;;;;;2HD+BagI,aAAU;gBAZtBnI,oDAYsB;iBAZZ;AACPM,oBAAQ,EAAE,+BADH;AAEPC,gBAAI,EAAE;AACF,uBAAO,cADL;AAEF,yBAAW,eAFT;AAGF,wBAAU;AAHR,aAFC;AAOPC,uBAAW,EAAE,kBAPN;AAQPC,yBAAa,EAAET,iEARR;AASPU,+BAAmB,EAAE,KATd;AAUPC,2BAAe,EAAEX;AAVV;AAYY;;;;;AACMa,eAAK;kBAA7Bb,0DAA6B;mBAAbE;AAAa;;;;UEDrBqI;;;;;;;yBAAAA;;;;;;cAAAA;uBANLL,SACAjI,kBACAkI,aACAxL;kBAjBAyD,2DACAoI,4DACAtI,6EACAA,mEACAA;kBAGAgI,SACAjI,kBACAkI,aACAxL,eACAuD;;;;oBASKuI;kBArBA,CACLrI,yDADK,EAELoI,0DAFK,EAGLtI,2EAHK,EAILA,iEAJK,EAKLA,mEALK,GAYLA;AASK;;;2HAAAqI,eAAY;gBAtBxBvI,mDAsBwB;iBAtBf;AACN0I,mBAAO,EAAE,CACLtI,yDADK,EAELoI,0DAFK,EAGLtI,2EAHK,EAILA,iEAJK,EAKLA,mEALK,CADH;AAQNyI,mBAAO,EAAE,CACLT,OADK,EAELjI,gBAFK,EAGLkI,WAHK,EAILxL,aAJK,EAKLuD,mEALK,CARH;AAeN0I,wBAAY,EAAE,CACVV,OADU,EAEVjI,gBAFU,EAGVkI,WAHU,EAIVxL,aAJU;AAfR;AAsBe;;AC/BzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUA;AAA8E;AAC1EqD,uEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,+DAAS,CAAT;;AACAA;AACJ;;AAAE;AACF;;AACIA,mEAAa,OAAb,EAAa6I,gBAAb;;AACA7I,kEAAY,CAAZ;;AACAA,2EAAqB,GAArB,EAAqB6I,oBAArB,EAAqB,GAArB;AACJ;AAAA;;AACA;AAA6D;AACzD7I,uEAAiB,CAAjB,EAAiB,aAAjB,EAAiB,CAAjB;;AACAA,mEAAa,CAAb,EAAa8I,yDAAb,EAAa,CAAb,EAAa,CAAb,EAAa,gBAAb,EAAa,CAAb;;AACA9I;AACJ;;AAAE;AACF;;AACIA,mEAAa,OAAb,EAAa+I,aAAb,EAAa,UAAb,EAAaA,iBAAb;;AACA/I,kEAAY,CAAZ;;AACAA,mEAAa,SAAb,EAAa+I,gBAAb;AACJ;AAAA;AACA;AACA;AACA;;;UACAC,qBACA;AAAA;;AACA,6BACA;AACAC,uBADA;AAEAC,oBACA;AAAsB7L,gCAAtB;AAAsB8L;AAAtB,WADA,EAEA;AAAsB9L,6BAAtB;AAAsB8L;AAAtB,WAFA,EAGA;AAAsB9L,iCAAtB;AAAsB8L;AAAtB,WAHA;AAFA,SADA,EASA;AACAF,uBADA;AAEAzL,wBAFA;AAGA0L,oBACA;AAAsB7L,+BAAtB;AAAsB8L;AAAtB,WADA,EAEA;AAAsB9L,8BAAtB;AAAsB8L;AAAtB,WAFA,EAGA;AAAsB9L,6BAAtB;AAAsB8L;AAAtB,WAHA;AAHA,SATA,EAkBA;AACAF,sBADA;AAEAC,oBACA;AAAsB7L,iCAAtB;AAAsB8L;AAAtB,WADA,EAEA;AAAsB9L,6BAAtB;AAAsB8L;AAAtB,WAFA,EAGA;AAAsB9L,8BAAtB;AAAsB8L;AAAtB,WAHA;AAFA,SAlBA,EA0BA;AACAF,yBADA;AAEAC,oBACA;AAAsB7L,0BAAtB;AAAsB8L;AAAtB,WADA,EAEA;AAAsB9L,8BAAtB;AAAsB8L;AAAtB,WAFA;AAFA,SA1BA;AAkCA;;AAEAH;AAAiE;AAAA,OAAjE;;AACAA,6CAAuChJ,gEAAoB;AAAGoJ,gCAAH;AAAGC,4CAAH;AAAGC,gBAAH;AAAGC,eAAH;AAAGC,oKAAH;AAAG5B;AAAyS;AAC/V5H,yEAAiB,CAAjB,EAAiB,mBAAjB;;AACAA,qEAAa,CAAb,EAAayJ,wCAAb,EAAa,CAAb,EAAa,CAAb,EAAa,aAAb,EAAa,CAAb;;AACAzJ,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,UAAT;;AACAA;;AACAA;AACR;;AAAM;AACEA,oEAAY,CAAZ;;AACAA,qEAAa,SAAb,EAAaG,gBAAb;AACR;AAAO,SAVoD;AAUpDuJ,qBAAeC,oEAAf,EAAmCC,oDAAnC,EAA+CD,iEAA/C,EAAgEE,+DAAhE,CAVoD;AAUyBC;AAVzB,OAApB,CAAvC;;AAWA;AAAe,2DAAmD9J,gEAAoBgJ,kBAApB,EAAoB;AACtFI,gBAAcpJ,oDADwE;AAEtF+J;AACAzJ,2CADA;AAEAE,mDAFA;AAGAqH;AAHA;AAFsF,UAApB,EAO7D,IAP6D,EAO7D,IAP6D,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;;;UACAmC,+BACA;AAAA;;AACA;AACA;;AAEAA;AAAqF;AAAA,OAArF;;AACAA,uDAAiDhK,gEAAoB;AAAGoJ,0CAAH;AAAGC,uDAAH;AAAGC,iBAAH;AAAGC,eAAH;AAAGC,4SAAH;AAAG5B;AAAid;AACjhB5H,yEAAiB,CAAjB,EAAiB,mBAAjB,EAAiB,CAAjB;;AACAA,qEAAa,eAAb,EAAa;AAAqH;AAA+B,aAAjK;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,EAAjB;;AACAA,iEAAS,EAAT,EAAS,SAAT;;AACAA;;AACAA;;AACAA,oEAAY,EAAZ,EAAY,IAAZ;;AACAA,yEAAiB,EAAjB,EAAiB,KAAjB;;AACAA,iEAAS,EAAT;;AACAA;AACR;;AAAM;AACEA,qEAAa,SAAb,EAAaG,YAAb;;AACAH,oEAAY,EAAZ;;AACAA,6EAAqB,YAArB,EAAqBG,YAArB,EAAqB,EAArB;AACR;AAAO,SA1C8D;AA0C9DuJ,qBAAeC,oEAAf,EAAmCM,2DAAnC,EAAyDA,mDAAzD,EAAuEN,iEAAvE,CA1C8D;AA0CwBG;AA1CxB,OAApB,CAAjD;;AA2CA;AAAe,2DAAmD9J,gEAAoBgK,4BAApB,EAAoB;AACtFZ,gBAAcpJ,oDADwE;AAEtF+J;AACAzJ,sDADA;AAEAE,8DAFA;AAGAqH;AAHA;AAFsF,UAApB,EAO7D,IAP6D,EAO7D,IAP6D,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;;;UACAqC,+BACA;AAAA;;AACA;AACA;;AAEAA;AAAqF;AAAA,OAArF;;AACAA,uDAAiDlK,gEAAoB;AAAGoJ,0CAAH;AAAGC,uDAAH;AAAGC,iBAAH;AAAGC,eAAH;AAAGC,4SAAH;AAAG5B;AAAid;AACjhB5H,yEAAiB,CAAjB,EAAiB,mBAAjB,EAAiB,CAAjB;;AACAA,qEAAa,eAAb,EAAa;AAAqH;AAA+B,aAAjK;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,EAAjB;;AACAA,iEAAS,EAAT,EAAS,SAAT;;AACAA;;AACAA;;AACAA,oEAAY,EAAZ,EAAY,IAAZ;;AACAA,yEAAiB,EAAjB,EAAiB,KAAjB;;AACAA,iEAAS,EAAT;;AACAA;AACR;;AAAM;AACEA,qEAAa,SAAb,EAAaG,YAAb;;AACAH,oEAAY,EAAZ;;AACAA,6EAAqB,YAArB,EAAqBG,YAArB,EAAqB,EAArB;AACR;AAAO,SA1C8D;AA0C9DuJ,qBAAeC,oEAAf,EAAmCM,2DAAnC,EAAyDA,mDAAzD,EAAuEN,iEAAvE,CA1C8D;AA0CwBG;AA1CxB,OAApB,CAAjD;;AA2CA;AAAe,2DAAmD9J,gEAAoBkK,4BAApB,EAAoB;AACtFd,gBAAcpJ,oDADwE;AAEtF+J;AACAzJ,sDADA;AAEAE,8DAFA;AAGAqH;AAHA;AAFsF,UAApB,EAO7D,IAP6D,EAO7D,IAP6D,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;;;UACAsC,uBACA;AAAA;;AACA;AACA;;AAEAA;AAAqE;AAAA,OAArE;;AACAA,+CAAyCnK,gEAAoB;AAAGoJ,kCAAH;AAAGC,8CAAH;AAAGC,iBAAH;AAAGC,eAAH;AAAGC,oRAAH;AAAG5B;AAAga;AACxd5H,yEAAiB,CAAjB,EAAiB,mBAAjB,EAAiB,CAAjB;;AACAA,qEAAa,eAAb,EAAa;AAA6G;AAA+B,aAAzJ;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,CAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,CAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,CAAjB;;AACAA,iEAAS,EAAT,EAAS,QAAT;;AACAA;;AACAA,yEAAiB,EAAjB,EAAiB,gBAAjB,EAAiB,EAAjB;;AACAA,iEAAS,EAAT,EAAS,SAAT;;AACAA;;AACAA;;AACAA,oEAAY,EAAZ,EAAY,IAAZ;;AACAA,yEAAiB,EAAjB,EAAiB,KAAjB;;AACAA,iEAAS,EAAT;;AACAA;AACR;;AAAM;AACEA,qEAAa,SAAb,EAAaG,YAAb;;AACAH,oEAAY,EAAZ;;AACAA,6EAAqB,YAArB,EAAqBG,YAArB,EAAqB,EAArB;AACR;AAAO,SA1CsD;AA0CtDuJ,qBAAeC,oEAAf,EAAmCM,2DAAnC,EAAyDA,mDAAzD,EAAuEN,iEAAvE,CA1CsD;AA0CgCG;AA1ChC,OAApB,CAAzC;;AA2CA;AAAe,2DAAmD9J,gEAAoBmK,oBAApB,EAAoB;AACtFf,gBAAcpJ,oDADwE;AAEtF+J;AACAzJ,6CADA;AAEAE,qDAFA;AAGAqH;AAHA;AAFsF,UAApB,EAO7D,IAP6D,EAO7D,IAP6D,CAAnD;AAOO,OAPtB;;AASA,sBACAsC,oBADA,EAEAH,4BAFA,EAGAE,4BAHA,EAIAlB,kBAJA;;UAMAoB;;;;AAEAA;AAAmE;AAAA,OAAnE;;AACAA,8CAAwCpK,+DAAmB;AAAGoJ;AAAH,OAAnB,CAAxC;AACAgB,8CAAwCpK,+DAAmB;AAAG0I,mBAClDkB,yDADkD,EAElDK,uDAFkD,EAGlDN,iEAHkD;AAAH,OAAnB,CAAxC;;AAKA;AAAe,2DAAmD3J,gEAAoBoK,mBAApB,EAAoB;AACtFhB,gBAAcpJ,mDADwE;AAEtF+J;AACArB,sBACoBkB,yDADpB,EAEoBK,uDAFpB,EAGoBN,iEAHpB,CADA;AAMAf,kCANA;AAOAD;AAPA;AAFsF,UAApB,EAW7D,IAX6D,EAW7D,IAX6D,CAAnD;AAWO,OAXtB;;AAYA;AAAe,2DAAmD3I,iEAAqBoK,mBAArB,EAAqB;AAAuBxB,+CAC9GoB,4BAD8G,EAE9GE,4BAF8G,EAG9GlB,kBAH8G,CAAvB;AAGvFN,oBAAsCkB,yDAAtC,EACQK,uDADR,EAEQN,iEAFR,CAHuF;AAKnEhB,0CACpBqB,4BADoB,EAEpBE,4BAFoB,EAGpBlB,kBAHoB;AALmE,SAArB,CAAnD;AAQiB,OARhC;AAUA;AACA;AACA;;;;;","names":["McListOption","elementRef","changeDetector","ngZone","listSelection","group","rxjs__WEBPACK_IMPORTED_MODULE_1__","_value","newValue","selected","value","inputsInitialized","listSelectionDisabled","disabled","groupDisabled","_disabled","markForCheck","_showCheckbox","undefined","showCheckbox","selectionModel","isSelected","_selected","setSelected","reportValueChange","list","some","compareWith","wasSelected","Promise","resolve","then","removeOptionFromList","text","nativeElement","textContent","select","deselect","getClientRects","height","$event","setSelectedOptionsByClick","hasFocus","focus","onFocus","next","option","onStable","asObservable","pipe","subscribe","run","onBlur","_angular_core__WEBPACK_IMPORTED_MODULE_0__","McListSelection","_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__","ctx","_angular_common__WEBPACK_IMPORTED_MODULE_6__","exportAs","selector","host","templateUrl","encapsulation","preserveWhitespaces","changeDetection","decorators","lines","checkboxPosition","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","useExisting","multi","McListSelectionChange","source","McListSelectionBase","McListSelectionMixinBase","changeDetectorRef","multiple","a1","a2","multipleMode","autoSelect","noUnselectLast","_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_8__","_autoSelect","_noUnselectLast","_tabIndex","userTabIndex","options","map","horizontal","keyManager","_ptsecurity_cdk_a11y__WEBPACK_IMPORTED_MODULE_10__","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","destroyed","setTimeout","setOptionsFromValues","changed","event","added","item","removed","changes","resetOptions","updateTabIndex","updateScrollSize","complete","length","setFirstItemActive","hasFocusedOption","setActiveItem","onTouched","forEach","first","withScrollSize","Math","floor","getHeight","shiftKey","ctrlKey","setSelectedOptions","canDeselectLast","toggle","clear","emitChangeEvent","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","toArray","slice","filter","isLastRenderedOption","renderedOption","activeItem","values","fn","onChange","isDisabled","focusedIndex","isValidIndex","focusedOption","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","keyCode","_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__","toggleFocusedOption","setLastItemActive","setPreviousPageItemActive","setNextPageItemActive","preventDefault","setSelectedOptionsByKey","getSelectedOptionValues","selectionChange","emit","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","index","indexOf","updateActiveItem","optionBlurChanges","blur","find","getOptionByValue","Boolean","template","styleUrls","inputs","providers","descendants","tabIndex","McList","McListItem","classList","add","remove","McListModule","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__","ɵinj","imports","exports","declarations","pokemon_r3","ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template","group_r1","ListGroupsExample","name","pokemon","viewValue","type","selectors","decls","vars","consts","ListGroupsExample_mc_optgroup_1_Template","directives","_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_3__","styles","args","ListMultipleCheckboxExample","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","ListMultipleKeyboardExample","ListOverviewExample","ListExamplesModule"],"sources":["webpack:///packages/mosaic/list/list-selection.component.ts","webpack:///packages/mosaic/list/list-option.html","webpack:///packages/mosaic/list/list.component.ts","webpack:///packages/mosaic/list/list-item.html","webpack:///packages/mosaic/list/list.module.ts","webpack:///packages/mosaic/list/ptsecurity-mosaic-list.ts","webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-list.js"],"sourcesContent":["/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    PAGE_DOWN,\n    PAGE_UP,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    McLine,\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex,\n    MultipleMode,\n    McOptgroup\n} from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        class: 'mc-list-option mc-no-select',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n        '[class.mc-disabled]': 'disabled',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    @ViewChild('text', { static: false }) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after';\n\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     */\n    private inputsInitialized = false;\n\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this.selected && newValue !== this.value && this.inputsInitialized) {\n            this.selected = false;\n        }\n\n        this._value = newValue;\n    }\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        const listSelectionDisabled = this.listSelection && this.listSelection.disabled;\n        const groupDisabled = this.group && this.group.disabled;\n\n        return listSelectionDisabled || groupDisabled || this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngOnInit() {\n        const list = this.listSelection;\n\n        if (list._value && list._value.some((value) => list.compareWith(value, this._value))) {\n            this.setSelected(true);\n        }\n\n        const wasSelected = this._selected;\n\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this.changeDetector.markForCheck();\n            }\n        });\n\n        this.inputsInitialized = true;\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setSelectedOptionsByClick(\n            this, hasModifierKey($event, 'shiftKey'), hasModifierKey($event, 'ctrlKey')\n        );\n    }\n\n    focus() {\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n\n            this.onFocus.next({ option: this });\n\n            Promise.resolve().then(() => {\n                this.hasFocus = true;\n\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\n\nexport class McListSelectionBase {\n    constructor(public elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-list-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    @ContentChildren(McListOption, { descendants: true }) options: QueryList<McListOption>;\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    multipleMode: MultipleMode | null;\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    userTabIndex: number | null = null;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // tslint:disable-next-line:orthodox-getter-and-setter naming-convention\n    _value: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode\n    ) {\n        super(elementRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    @Input() compareWith: (o1: any, o2: any) => boolean = (a1, a2) => a1 === a2;\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this._value) {\n            this.setOptionsFromValues(this._value);\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOptionsByClick(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option);\n        } else {\n            this.selectionModel.toggle(option);\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptionsByKey(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else {\n            if (this.multipleMode === MultipleMode.KEYBOARD || !this.multiple) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptions(option: McListOption): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.options\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        this._value = values;\n\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n\n                break;\n\n            case TAB:\n                this.keyManager.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n\n                break;\n            default:\n                return;\n        }\n\n        event.preventDefault();\n\n        this.setSelectedOptionsByKey(\n            this.keyManager.activeItem as McListOption,\n            hasModifierKey(event, 'shiftKey'),\n            hasModifierKey(event, 'ctrlKey')\n        );\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            const value = this.getSelectedOptionValues();\n            this.onChange(value);\n            this._value = value;\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.userTabIndex || (this.options.length === 0 ? -1 : 0);\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n}\n","<div class=\"mc-list-item-content\">\n    <mc-pseudo-checkbox\n        *ngIf=\"showCheckbox\"\n        [state]=\"selected ? 'checked' : 'unchecked'\"\n        [disabled]=\"disabled\">\n    </mc-pseudo-checkbox>\n\n    <div class=\"mc-list-text\" #text>\n        <ng-content></ng-content>\n    </div>\n</div>\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList {}\n\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterContentInit() {\n        // tslint:disable-next-line:no-unused-expression\n        new McLineSetter(this.lines, this.elementRef);\n    }\n\n    handleFocus() {\n        this.elementRef.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this.elementRef.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n","<div class=\"mc-list-item-content\">\n    <ng-content select=\"[mc-list-icon], [mcListIcon]\"></ng-content>\n\n    <div class=\"mc-list-text\">\n        <ng-content select=\"[mc-line], [mcLine]\"></ng-content>\n    </div>\n\n    <ng-content></ng-content>\n</div>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McLineModule, McOptionModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule,\n        McOptionModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McOptionModule\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption\n    ]\n})\nexport class McListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from '@ptsecurity/mosaic/list';\nimport { McListModule } from '@ptsecurity/mosaic/list';\nimport * as i3 from '@ptsecurity/mosaic/core';\n\nfunction ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pokemon_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pokemon_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r3.viewValue, \" \");\n} }\nfunction ListGroupsExample_mc_optgroup_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-optgroup\", 2);\n    i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template, 2, 2, \"mc-list-option\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r1.name)(\"disabled\", group_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r1.pokemon);\n} }\n/**\n * @title Basic list\n */\nclass ListGroupsExample {\n    constructor() {\n        this.pokemonTypes = [\n            {\n                name: 'Grass',\n                pokemon: [\n                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n                    { value: 'oddish-1', viewValue: 'Oddish' },\n                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n                ]\n            },\n            {\n                name: 'Water',\n                disabled: true,\n                pokemon: [\n                    { value: 'squirtle-3', viewValue: 'Squirtle' },\n                    { value: 'psyduck-4', viewValue: 'Psyduck' },\n                    { value: 'horsea-5', viewValue: 'Horsea' }\n                ]\n            },\n            {\n                name: 'Fire',\n                pokemon: [\n                    { value: 'charmander-6', viewValue: 'Charmander' },\n                    { value: 'vulpix-7', viewValue: 'Vulpix' },\n                    { value: 'flareon-8', viewValue: 'Flareon' }\n                ]\n            },\n            {\n                name: 'Psychic',\n                pokemon: [\n                    { value: 'mew-9', viewValue: 'Mew' },\n                    { value: 'mewtwo-10', viewValue: 'Mewtwo' }\n                ]\n            }\n        ];\n    }\n}\nListGroupsExample.ɵfac = function ListGroupsExample_Factory(t) { return new (t || ListGroupsExample)(); };\nListGroupsExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListGroupsExample, selectors: [[\"list-groups-example\"]], decls: 4, vars: 1, consts: [[3, \"label\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"mime-11\"], [3, \"label\", \"disabled\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function ListGroupsExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\");\n        i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_Template, 2, 3, \"mc-optgroup\", 0);\n        i0.ɵɵelementStart(2, \"mc-list-option\", 1);\n        i0.ɵɵtext(3, \"Mr. Mime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemonTypes);\n    } }, directives: [i1.McListSelection, i2.NgForOf, i1.McListOption, i3.McOptgroup], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListGroupsExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-groups-example',\n                templateUrl: 'list-groups-example.html',\n                styleUrls: ['list-groups-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleCheckboxExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleCheckboxExample.ɵfac = function ListMultipleCheckboxExample_Factory(t) { return new (t || ListMultipleCheckboxExample)(); };\nListMultipleCheckboxExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleCheckboxExample, selectors: [[\"list-multiple-checkbox-example\"]], decls: 24, vars: 2, consts: [[\"multiple\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2$1.NgControlStatus, i2$1.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleCheckboxExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-checkbox-example',\n                templateUrl: 'list-multiple-checkbox-example.html',\n                styleUrls: ['list-multiple-checkbox-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleKeyboardExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleKeyboardExample.ɵfac = function ListMultipleKeyboardExample_Factory(t) { return new (t || ListMultipleKeyboardExample)(); };\nListMultipleKeyboardExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleKeyboardExample, selectors: [[\"list-multiple-keyboard-example\"]], decls: 24, vars: 2, consts: [[\"multiple\", \"keyboard\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2$1.NgControlStatus, i2$1.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleKeyboardExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-keyboard-example',\n                templateUrl: 'list-multiple-keyboard-example.html',\n                styleUrls: ['list-multiple-keyboard-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListOverviewExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListOverviewExample.ɵfac = function ListOverviewExample_Factory(t) { return new (t || ListOverviewExample)(); };\nListOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListOverviewExample, selectors: [[\"list-overview-example\"]], decls: 24, vars: 2, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2$1.NgControlStatus, i2$1.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-overview-example',\n                templateUrl: 'list-overview-example.html',\n                styleUrls: ['list-overview-example.css']\n            }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    ListOverviewExample,\n    ListMultipleCheckboxExample,\n    ListMultipleKeyboardExample,\n    ListGroupsExample\n];\nclass ListExamplesModule {\n}\nListExamplesModule.ɵfac = function ListExamplesModule_Factory(t) { return new (t || ListExamplesModule)(); };\nListExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ListExamplesModule });\nListExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McListModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McListModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ListExamplesModule, { declarations: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample], imports: [CommonModule,\n        FormsModule,\n        McListModule], exports: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ListExamplesModule, ListGroupsExample, ListMultipleCheckboxExample, ListMultipleKeyboardExample, ListOverviewExample };\n"]}