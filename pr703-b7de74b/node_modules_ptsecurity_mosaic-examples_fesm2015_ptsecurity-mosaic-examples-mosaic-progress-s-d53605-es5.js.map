{"version":3,"mappings":"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","names":["idIterator","MIN_PERCENT","MAX_PERCENT","McProgressSpinnerBase","_elementRef","McProgressSpinnerMixinBase","_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_0__","MAX_DASH_ARRAY","McProgressSpinner","elementRef","Math","max","min","value","percentage","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","selector","templateUrl","styleUrls","changeDetection","encapsulation","inputs","host","id","mode","McProgressSpinnerModule","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_3__","ɵinj","imports","exports","declarations","ProgressSpinnerIndeterminateExample","_angular_core__WEBPACK_IMPORTED_MODULE_0__","type","selectors","decls","vars","consts","template","directives","_ptsecurity_mosaic_progress_spinner__WEBPACK_IMPORTED_MODULE_1__","styles","args","ProgressSpinnerOverviewExample","setInterval","clearInterval","ctx","ProgressSpinnerExamplesModule","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_ptsecurity_mosaic_form_field__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///packages/mosaic/progress-spinner/progress-spinner.component.ts","webpack:///packages/mosaic/progress-spinner/progress-spinner.component.html","webpack:///packages/mosaic/progress-spinner/progress-spinner.module.ts","webpack:///packages/mosaic/progress-spinner/ptsecurity-mosaic-progress-spinner.ts","webpack:///node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-progress-spinner.js"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McProgressSpinnerMixinBase:\n    CanColorCtor & typeof McProgressSpinnerBase = mixinColor(McProgressSpinnerBase, ThemePalette.Primary);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","<div class=\"mc-progress-spinner__inner\"\n     [ngClass]=\"{'mc-progress-spinner__inner--indeterminate': mode === 'indeterminate'}\">\n    <svg focusable=\"false\"\n         preserveAspectRatio=\"xMidYMid meet\"\n         viewBox=\"0 0 100 100\"\n         class=\"mc-progress-spinner__svg\">\n        <circle cx=\"50%\"\n                cy=\"50%\"\n                r=\"42.5%\"\n                class=\"mc-progress-spinner__circle\"\n                [ngStyle]=\"{'stroke-dashoffset': mode === 'determinate' ? dashOffsetPercent : null}\">\n        </circle>\n    </svg>\n</div>\n\n","import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport * as i1 from '@ptsecurity/mosaic/progress-spinner';\nimport { McProgressSpinnerModule } from '@ptsecurity/mosaic/progress-spinner';\n\n/**\n * @title Indeterminate progress spinner\n */\nclass ProgressSpinnerIndeterminateExample {\n}\nProgressSpinnerIndeterminateExample.ɵfac = function ProgressSpinnerIndeterminateExample_Factory(t) { return new (t || ProgressSpinnerIndeterminateExample)(); };\nProgressSpinnerIndeterminateExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProgressSpinnerIndeterminateExample, selectors: [[\"progress-spinner-indeterminate-example\"]], decls: 4, vars: 3, consts: [[1, \"example-progress-spinner-group\"], [\"mode\", \"indeterminate\", 1, \"example-progress-spinner-element\", 3, \"color\"]], template: function ProgressSpinnerIndeterminateExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"mc-progress-spinner\", 1);\n        i0.ɵɵelement(2, \"mc-progress-spinner\", 1);\n        i0.ɵɵelement(3, \"mc-progress-spinner\", 1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"second\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"error\");\n    } }, directives: [i1.McProgressSpinner], styles: [\".example-progress-spinner-group[_ngcontent-%COMP%]{display:flex}.example-progress-spinner-element[_ngcontent-%COMP%]{margin-right:8px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerIndeterminateExample, [{\n        type: Component,\n        args: [{\n                selector: 'progress-spinner-indeterminate-example',\n                templateUrl: 'progress-spinner-indeterminate-example.html',\n                styleUrls: ['progress-spinner-indeterminate-example.css']\n            }]\n    }], null, null); })();\n\nconst INTERVAL = 300;\nconst STEP = 4;\nconst MAX_PERCENT = 100;\n/**\n * @title Basic progress spinner\n */\nclass ProgressSpinnerOverviewExample {\n    constructor() {\n        this.percent = 0;\n        setInterval(() => this.percent = (this.percent + STEP) % (MAX_PERCENT + STEP), INTERVAL);\n    }\n    ngOnDestroy() {\n        clearInterval(this.intervalId);\n    }\n}\nProgressSpinnerOverviewExample.ɵfac = function ProgressSpinnerOverviewExample_Factory(t) { return new (t || ProgressSpinnerOverviewExample)(); };\nProgressSpinnerOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProgressSpinnerOverviewExample, selectors: [[\"progress-spinner-overview-example\"]], decls: 6, vars: 7, consts: [[1, \"example-progress-spinner-group\"], [1, \"example-progress-spinner-element\"], [1, \"example-progress-spinner-element\", 3, \"value\", \"color\"]], template: function ProgressSpinnerOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"mc-progress-spinner\", 2);\n        i0.ɵɵelement(4, \"mc-progress-spinner\", 2);\n        i0.ɵɵelement(5, \"mc-progress-spinner\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.percent, \"%\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"second\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"error\");\n    } }, directives: [i1.McProgressSpinner], styles: [\".example-progress-spinner-group[_ngcontent-%COMP%]{display:flex}.example-progress-spinner-element[_ngcontent-%COMP%]{margin-right:8px}.example-progress-spinner-element[_ngcontent-%COMP%]:first-child{width:40px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'progress-spinner-overview-example',\n                templateUrl: 'progress-spinner-overview-example.html',\n                styleUrls: ['progress-spinner-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\nconst EXAMPLES = [\n    ProgressSpinnerIndeterminateExample,\n    ProgressSpinnerOverviewExample\n];\nclass ProgressSpinnerExamplesModule {\n}\nProgressSpinnerExamplesModule.ɵfac = function ProgressSpinnerExamplesModule_Factory(t) { return new (t || ProgressSpinnerExamplesModule)(); };\nProgressSpinnerExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ProgressSpinnerExamplesModule });\nProgressSpinnerExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McFormFieldModule,\n            McProgressSpinnerModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McFormFieldModule,\n                    McProgressSpinnerModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ProgressSpinnerExamplesModule, { declarations: [ProgressSpinnerIndeterminateExample,\n        ProgressSpinnerOverviewExample], imports: [CommonModule,\n        FormsModule,\n        McFormFieldModule,\n        McProgressSpinnerModule], exports: [ProgressSpinnerIndeterminateExample,\n        ProgressSpinnerOverviewExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressSpinnerExamplesModule, ProgressSpinnerIndeterminateExample, ProgressSpinnerOverviewExample };\n"]}