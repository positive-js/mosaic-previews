"use strict";
(self["webpackChunkmosaic"] = self["webpackChunkmosaic"] || []).push([["node_modules_ptsecurity_mosaic-examples_fesm2015_ptsecurity-mosaic-examples-mosaic-list_js"],{

/***/ 7690:
/*!********************************************************!*\
  !*** ./dist/mosaic/fesm2015/ptsecurity-mosaic-list.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MC_SELECTION_LIST_VALUE_ACCESSOR": function() { return /* binding */ MC_SELECTION_LIST_VALUE_ACCESSOR; },
/* harmony export */   "McList": function() { return /* binding */ McList; },
/* harmony export */   "McListCopyEvent": function() { return /* binding */ McListCopyEvent; },
/* harmony export */   "McListItem": function() { return /* binding */ McListItem; },
/* harmony export */   "McListModule": function() { return /* binding */ McListModule; },
/* harmony export */   "McListOption": function() { return /* binding */ McListOption; },
/* harmony export */   "McListSelectAllEvent": function() { return /* binding */ McListSelectAllEvent; },
/* harmony export */   "McListSelection": function() { return /* binding */ McListSelection; },
/* harmony export */   "McListSelectionBase": function() { return /* binding */ McListSelectionBase; },
/* harmony export */   "McListSelectionChange": function() { return /* binding */ McListSelectionChange; },
/* harmony export */   "McListSelectionMixinBase": function() { return /* binding */ McListSelectionMixinBase; }
/* harmony export */ });
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/cdk/a11y */ 51606);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 54364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ptsecurity/mosaic/core */ 46872);
/* harmony import */ var _angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/cdk/clipboard */ 13841);
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/coercion */ 20657);
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/collections */ 62604);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 1707);
/* harmony import */ var _ptsecurity_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ptsecurity/cdk/a11y */ 61729);
/* harmony import */ var _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ptsecurity/cdk/keycodes */ 32121);
/* harmony import */ var _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ptsecurity/mosaic/dropdown */ 30005);
/* harmony import */ var _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ptsecurity/mosaic/tooltip */ 54360);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 79441);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ 89919);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 53466);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ 22663);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ 1143);

















/* tslint:disable:no-empty */

/**
 * Component for list-options of selection-list. Each list-option can automatically
 * generate a checkbox and can put current item into the selectionModel of selection-list
 * if the current item is selected.
 */

const _c0 = ["text"];

function McListOption_mc_pseudo_checkbox_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "mc-pseudo-checkbox", 3);
  }

  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx_r0.selected ? "checked" : "unchecked")("disabled", ctx_r0.disabled);
  }
}

const _c1 = ["*", [["mc-option-action"]]];
const _c2 = ["*", "mc-option-action"];
const _c3 = ["*"];
const _c4 = ".mc-divider{display:block;margin:0}.mc-divider.mc-divider_horizontal{border-top-width:1px;border-top-width:var(--mc-divider-size-width, 1px);border-top-style:solid}.mc-divider.mc-divider_vertical{height:100%;border-right-width:1px;border-right-width:var(--mc-divider-size-width, 1px);border-right-style:solid}.mc-divider.mc-divider_inset{margin-left:80px;margin-left:var(--mc-divider-size-inset-margin, 80px)}[dir=rtl] .mc-divider.mc-divider_inset{margin-left:auto;margin-right:80px;margin-right:var(--mc-divider-size-inset-margin, 80px)}.mc-no-select{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.mc-list,.mc-list-selection{display:block;outline:none}.mc-list-item,.mc-list-option{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;position:relative;display:flex;align-items:center;box-sizing:border-box;height:32px;height:var(--mc-list-size-item-height, 32px);border:2px solid transparent;padding-left:16px;padding-left:var(--mc-list-size-horizontal-padding, 16px)}.mc-list-item .mc-list-text,.mc-list-option .mc-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding-right:16px;padding-right:var(--mc-list-size-horizontal-padding, 16px)}.mc-list-item .mc-list-text>*,.mc-list-option .mc-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mc-list-item .mc-list-text:empty,.mc-list-option .mc-list-text:empty{display:none}.mc-list-item .mc-list-icon,.mc-list-option .mc-list-icon{box-sizing:content-box;flex-shrink:0;width:24px;width:var(--mc-list-size-icon-width, 24px);height:24px;height:var(--mc-list-size-icon-width, 24px);border-radius:50%;padding:4px;padding:var(--mc-list-size-icon-padding, 4px);font-size:24px;font-size:var(--mc-list-size-icon-width, 24px)}.mc-list-item .mc-list-icon~.mc-divider_inset,.mc-list-option .mc-list-icon~.mc-divider_inset{margin-left:32pxvar(--mc-list-size-icon-width,24px)8px;width:100%-32pxvar(--mc-list-size-icon-width,24px)8px}[dir=rtl] .mc-list-item .mc-list-icon~.mc-divider_inset,[dir=rtl] .mc-list-option .mc-list-icon~.mc-divider_inset{margin-left:auto;margin-right:32pxvar(--mc-list-size-icon-width,24px)8px}.mc-list-item .mc-divider,.mc-list-option .mc-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mc-list-item .mc-divider,[dir=rtl] .mc-list-option .mc-divider{margin-left:auto;margin-right:0}.mc-list-item .mc-divider.mc-divider_inset,.mc-list-option .mc-divider.mc-divider_inset{position:absolute}.mc-list-item.mc-progress:after,.mc-list-option.mc-progress:after{top:-2px;right:-2px;bottom:-2px;left:-2px}.mc-list-item .mc-pseudo-checkbox,.mc-list-option .mc-pseudo-checkbox{margin-right:8px}.mc-list-item .mc-option-action,.mc-list-option .mc-option-action{display:none}.mc-list-item:not([disabled]):hover .mc-option-action,.mc-list-item:not([disabled]).mc-focused .mc-option-action,.mc-list-item:not([disabled]).mc-action-button-focused .mc-option-action,.mc-list-option:not([disabled]):hover .mc-option-action,.mc-list-option:not([disabled]).mc-focused .mc-option-action,.mc-list-option:not([disabled]).mc-action-button-focused .mc-option-action{display:flex}.mc-list-option:not([disabled]):not(.mc-disabled){cursor:pointer}\n";
const _c5 = [[["", "mc-list-icon", ""], ["", "mcListIcon", ""]], [["", "mc-line", ""], ["", "mcLine", ""]], "*"];
const _c6 = ["[mc-list-icon], [mcListIcon]", "[mc-line], [mcLine]", "*"];

class McListOption {
  constructor(elementRef, changeDetector, ngZone, listSelection, group) {
    this.elementRef = elementRef;
    this.changeDetector = changeDetector;
    this.ngZone = ngZone;
    this.listSelection = listSelection;
    this.group = group;
    this.hasFocus = false;
    this.onFocus = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
    this.onBlur = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
    /**
     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`
     * in the first cycle.
     */

    this.inputsInitialized = false;
    this._disabled = false;
    this._selected = false;
  }

  get value() {
    return this._value;
  }

  set value(newValue) {
    if (this.selected && newValue !== this.value && this.inputsInitialized) {
      this.selected = false;
    }

    this._value = newValue;
  }

  get disabled() {
    const listSelectionDisabled = this.listSelection && this.listSelection.disabled;
    const groupDisabled = this.group && this.group.disabled;
    return listSelectionDisabled || groupDisabled || this._disabled;
  }

  set disabled(value) {
    const newValue = (0,_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(value);

    if (newValue !== this._disabled) {
      this._disabled = newValue;
      this.changeDetector.markForCheck();
    }
  }

  get showCheckbox() {
    return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;
  }

  set showCheckbox(value) {
    this._showCheckbox = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__.coerceBooleanProperty)(value);
  }

  get selected() {
    return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;
  }

  set selected(value) {
    const isSelected = (0,_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(value);

    if (isSelected !== this._selected) {
      this.setSelected(isSelected);
      this.listSelection.reportValueChange();
    }
  }

  get tabIndex() {
    return this.disabled ? null : -1;
  }

  ngOnInit() {
    const list = this.listSelection;

    if (list._value && list._value.some(value => list.compareWith(value, this._value))) {
      this.setSelected(true);
    }

    const wasSelected = this._selected; // List options that are selected at initialization can't be reported properly to the form
    // control. This is because it takes some time until the selection-list knows about all
    // available options. Also it can happen that the ControlValueAccessor has an initial value
    // that should be used instead. Deferring the value change report to the next tick ensures
    // that the form control value is not being overwritten.

    Promise.resolve().then(() => {
      if (this._selected || wasSelected) {
        this.selected = true;
        this.changeDetector.markForCheck();
      }
    });
    this.inputsInitialized = true;
  }

  ngOnDestroy() {
    if (this.selected) {
      // We have to delay this until the next tick in order
      // to avoid changed after checked errors.
      Promise.resolve().then(() => this.selected = false);
    }

    this.listSelection.removeOptionFromList(this);
  }

  toggle() {
    this.selected = !this.selected;
  }

  getLabel() {
    return this.text ? this.text.nativeElement.textContent : '';
  }

  setSelected(selected) {
    if (this._selected === selected || !this.listSelection.selectionModel) {
      return;
    }

    this._selected = selected;

    if (selected) {
      this.listSelection.selectionModel.select(this);
    } else {
      this.listSelection.selectionModel.deselect(this);
    }

    this.changeDetector.markForCheck();
  }

  getHeight() {
    const clientRects = this.elementRef.nativeElement.getClientRects();

    if (clientRects.length) {
      return clientRects[0].height;
    }

    return 0;
  }

  handleClick($event) {
    if (this.disabled) {
      return;
    }

    this.listSelection.setSelectedOptionsByClick(this, (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.hasModifierKey)($event, 'shiftKey'), (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.hasModifierKey)($event, 'ctrlKey'));
  }

  onKeydown($event) {
    if (!this.actionButton) {
      return;
    }

    if ($event.keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.TAB && !$event.shiftKey && !this.actionButton.hasFocus) {
      this.actionButton.focus();
      $event.preventDefault();
    }
  }

  focus() {
    var _a;

    if (this.disabled || this.hasFocus || ((_a = this.actionButton) === null || _a === void 0 ? void 0 : _a.hasFocus)) {
      return;
    }

    this.elementRef.nativeElement.focus();
    this.onFocus.next({
      option: this
    });
    Promise.resolve().then(() => {
      this.hasFocus = true;
      this.changeDetector.markForCheck();
    });
  }

  blur() {
    // When animations are enabled, Angular may end up removing the option from the DOM a little
    // earlier than usual, causing it to be blurred and throwing off the logic in the list
    // that moves focus not the next item. To work around the issue, we defer marking the option
    // as not focused until the next time the zone stabilizes.
    this.ngZone.onStable.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.take)(1)).subscribe(() => {
      this.ngZone.run(() => {
        var _a;

        this.hasFocus = false;

        if ((_a = this.actionButton) === null || _a === void 0 ? void 0 : _a.hasFocus) {
          return;
        }

        this.onBlur.next({
          option: this
        });
      });
    });
  }

  getHostElement() {
    return this.elementRef.nativeElement;
  }

}
/** @nocollapse */


McListOption.ɵfac = function McListOption_Factory(t) {
  return new (t || McListOption)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"]((0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => McListSelection)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptgroup, 8));
};
/** @nocollapse */


McListOption.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: McListOption,
  selectors: [["mc-list-option"]],
  contentQueries: function McListOption_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptionActionComponent, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__.McTooltipTrigger, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_7__.McDropdownTrigger, 5);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.actionButton = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.tooltipTrigger = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.dropdownTrigger = _t.first);
    }
  },
  viewQuery: function McListOption_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 5);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.text = _t.first);
    }
  },
  hostAttrs: [1, "mc-list-option"],
  hostVars: 10,
  hostBindings: function McListOption_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("focusin", function McListOption_focusin_HostBindingHandler() {
        return ctx.focus();
      })("blur", function McListOption_blur_HostBindingHandler() {
        return ctx.blur();
      })("click", function McListOption_click_HostBindingHandler($event) {
        return ctx.handleClick($event);
      })("keydown", function McListOption_keydown_HostBindingHandler($event) {
        return ctx.onKeydown($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", ctx.tabIndex)("disabled", ctx.disabled || null);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("mc-selected", ctx.selected)("mc-disabled", ctx.disabled)("mc-focused", ctx.hasFocus)("mc-action-button-focused", ctx.actionButton == null ? null : ctx.actionButton.active);
    }
  },
  inputs: {
    checkboxPosition: "checkboxPosition",
    value: "value",
    disabled: "disabled",
    showCheckbox: "showCheckbox",
    selected: "selected"
  },
  exportAs: ["mcListOption"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
    provide: _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MC_OPTION_ACTION_PARENT,
    useExisting: McListOption
  }])],
  ngContentSelectors: _c2,
  decls: 5,
  vars: 1,
  consts: [[3, "state", "disabled", 4, "ngIf"], [1, "mc-list-text"], ["text", ""], [3, "state", "disabled"]],
  template: function McListOption_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, McListOption_mc_pseudo_checkbox_0_Template, 1, 2, "mc-pseudo-checkbox", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](4, 1);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showCheckbox);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McPseudoCheckbox],
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](McListOption, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      exportAs: 'mcListOption',
      selector: 'mc-list-option',
      templateUrl: './list-option.html',
      host: {
        class: 'mc-list-option',
        '[class.mc-selected]': 'selected',
        '[class.mc-disabled]': 'disabled',
        '[class.mc-focused]': 'hasFocus',
        '[class.mc-action-button-focused]': 'actionButton?.active',
        '[attr.tabindex]': 'tabIndex',
        '[attr.disabled]': 'disabled || null',
        '(focusin)': 'focus()',
        '(blur)': 'blur()',
        '(click)': 'handleClick($event)',
        '(keydown)': 'onKeydown($event)'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      preserveWhitespaces: false,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      providers: [{
        provide: _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MC_OPTION_ACTION_PARENT,
        useExisting: McListOption
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: McListSelection,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => McListSelection)]
      }]
    }, {
      type: _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptgroup,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }];
  }, {
    actionButton: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptionActionComponent]
    }],
    tooltipTrigger: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [_ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__.McTooltipTrigger]
    }],
    dropdownTrigger: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [_ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_7__.McDropdownTrigger]
    }],
    text: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['text', {
        static: false
      }]
    }],
    checkboxPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    showCheckbox: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();

const MC_SELECTION_LIST_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NG_VALUE_ACCESSOR,
  useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => McListSelection),
  multi: true
};

class McListSelectionChange {
  constructor(source, option) {
    this.source = source;
    this.option = option;
  }

}

class McListSelectAllEvent {
  constructor(source, options) {
    this.source = source;
    this.options = options;
  }

}

class McListCopyEvent {
  constructor(source, option) {
    this.source = source;
    this.option = option;
  }

}

class McListSelectionBase {
  constructor(elementRef) {
    this.elementRef = elementRef;
  }

} // tslint:disable-next-line:naming-convention


const McListSelectionMixinBase = (0,_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.mixinTabIndex)((0,_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.mixinDisabled)(McListSelectionBase));

class McListSelection extends McListSelectionMixinBase {
  constructor(elementRef, changeDetectorRef, multiple, clipboard) {
    super(elementRef);
    this.changeDetectorRef = changeDetectorRef;
    this.clipboard = clipboard;
    this.onSelectAll = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onCopy = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this._autoSelect = true;
    this._noUnselectLast = true;
    this.horizontal = false;
    this._tabIndex = 0;
    this.userTabIndex = null; // Emits a change event whenever the selected state of an option changes.

    this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** Emits whenever the component is destroyed. */

    this.destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
    /**
     * Function used for comparing an option against the selected value when determining which
     * options should appear as selected. The first argument is the value of an options. The second
     * one is a value from the selected value. A boolean must be returned.
     */

    this.compareWith = (a1, a2) => a1 === a2; // View to model callback that should be called if the list or its options lost focus.
    // tslint:disable-next-line:no-empty


    this.onTouched = () => {}; // View to model callback that should be called whenever the selected options change.


    this.onChange = _ => {};

    if (multiple === _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MultipleMode.CHECKBOX || multiple === _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MultipleMode.KEYBOARD) {
      this.multipleMode = multiple;
    } else if (multiple !== null) {
      this.multipleMode = _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MultipleMode.CHECKBOX;
    }

    if (this.multipleMode === _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MultipleMode.CHECKBOX) {
      this.autoSelect = false;
      this.noUnselectLast = false;
    }

    this.selectionModel = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__.SelectionModel(this.multiple);
  }

  get autoSelect() {
    return this._autoSelect;
  }

  set autoSelect(value) {
    this._autoSelect = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__.coerceBooleanProperty)(value);
  }

  get noUnselectLast() {
    return this._noUnselectLast;
  }

  set noUnselectLast(value) {
    this._noUnselectLast = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__.coerceBooleanProperty)(value);
  }

  get multiple() {
    return !!this.multipleMode;
  }

  get tabIndex() {
    return this.disabled ? -1 : this._tabIndex;
  }

  set tabIndex(value) {
    this.userTabIndex = value;
    this._tabIndex = value;
  }

  get showCheckbox() {
    return this.multipleMode === _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MultipleMode.CHECKBOX;
  }

  get optionFocusChanges() {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.merge)(...this.options.map(option => option.onFocus));
  }

  get optionBlurChanges() {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.merge)(...this.options.map(option => option.onBlur));
  }

  ngAfterContentInit() {
    this.horizontal = (0,_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(this.horizontal);
    this.keyManager = new _ptsecurity_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__.FocusKeyManager(this.options).withTypeAhead().withVerticalOrientation(!this.horizontal).withHorizontalOrientation(this.horizontal ? 'ltr' : null);
    this.keyManager.tabOut.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.takeUntil)(this.destroyed)).subscribe(() => {
      this._tabIndex = -1;
      setTimeout(() => {
        this._tabIndex = this.userTabIndex || 0;
        this.changeDetectorRef.markForCheck();
      });
    });

    if (this._value) {
      this.setOptionsFromValues(this._value);
    }

    this.selectionModel.changed.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.takeUntil)(this.destroyed)).subscribe(event => {
      for (const item of event.added) {
        item.selected = true;
      }

      for (const item of event.removed) {
        item.selected = false;
      }
    });
    this.options.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.startWith)(null), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.takeUntil)(this.destroyed)).subscribe(() => {
      this.resetOptions(); // Check to see if we need to update our tab index

      this.updateTabIndex();
    });
    this.updateScrollSize();
  }

  ngOnDestroy() {
    this.destroyed.next();
    this.destroyed.complete();
  }

  focus() {
    if (this.options.length === 0) {
      return;
    }

    this.keyManager.setFirstItemActive();
  }

  blur() {
    if (!this.hasFocusedOption()) {
      this.keyManager.setActiveItem(-1);
    }

    this.onTouched();
    this.changeDetectorRef.markForCheck();
  }

  selectAll() {
    this.options.forEach(option => option.setSelected(true));
    this.reportValueChange();
  }

  deselectAll() {
    this.options.forEach(option => option.setSelected(false));
    this.reportValueChange();
  }

  updateScrollSize() {
    if (this.horizontal || !this.options.first) {
      return;
    }

    this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));
  }

  setSelectedOptionsByClick(option, shiftKey, ctrlKey) {
    if (shiftKey && this.multiple) {
      this.setSelectedOptions(option);
    } else if (ctrlKey) {
      if (!this.canDeselectLast(option)) {
        return;
      }

      this.selectionModel.toggle(option);
    } else if (this.autoSelect) {
      this.selectionModel.clear();
      this.selectionModel.toggle(option);
    } else {
      this.selectionModel.toggle(option);
    }

    this.emitChangeEvent(option);
    this.reportValueChange();
  }

  setSelectedOptionsByKey(option, shiftKey, ctrlKey) {
    if (shiftKey && this.multiple) {
      this.setSelectedOptions(option);
    } else if (ctrlKey) {
      if (!this.canDeselectLast(option)) {
        return;
      }
    } else if (this.autoSelect) {
      this.options.forEach(item => item.setSelected(false));
      option.setSelected(true);
      this.emitChangeEvent(option);
      this.reportValueChange();
    }
  }

  setSelectedOptions(option) {
    const selectedOptionState = option.selected;
    let fromIndex = this.keyManager.previousActiveItemIndex;
    let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;

    if (toIndex === fromIndex) {
      return;
    }

    if (fromIndex > toIndex) {
      [fromIndex, toIndex] = [toIndex, fromIndex];
    }

    this.options.toArray().slice(fromIndex, toIndex + 1).filter(item => !item.disabled).forEach(renderedOption => {
      const isLastRenderedOption = renderedOption === this.keyManager.activeItem;

      if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) {
        return;
      }

      renderedOption.setSelected(!selectedOptionState);
    });
  } // Implemented as part of ControlValueAccessor.


  writeValue(values) {
    this._value = values;

    if (this.options) {
      this.setOptionsFromValues(values || []);
    }
  } // Implemented as part of ControlValueAccessor.


  registerOnChange(fn) {
    this.onChange = fn;
  } // Implemented as part of ControlValueAccessor.


  registerOnTouched(fn) {
    this.onTouched = fn;
  } // Implemented as a part of ControlValueAccessor.


  setDisabledState(isDisabled) {
    if (this.options) {
      this.options.forEach(option => option.disabled = isDisabled);
    }
  }

  getSelectedOptionValues() {
    return this.options.filter(option => option.selected).map(option => option.value);
  } // Toggles the selected state of the currently focused option.


  toggleFocusedOption() {
    const focusedIndex = this.keyManager.activeItemIndex;

    if (focusedIndex != null && this.isValidIndex(focusedIndex)) {
      const focusedOption = this.options.toArray()[focusedIndex];

      if (focusedOption && this.canDeselectLast(focusedOption)) {
        focusedOption.toggle(); // Emit a change event because the focused option changed its state through user interaction.

        this.emitChangeEvent(focusedOption);
      }
    }
  }

  canDeselectLast(listOption) {
    return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && listOption.selected);
  }

  getHeight() {
    const clientRects = this.elementRef.nativeElement.getClientRects();

    if (clientRects.length) {
      return clientRects[0].height;
    }

    return 0;
  } // Removes an option from the selection list and updates the active item.


  removeOptionFromList(option) {
    if (option.hasFocus) {
      const optionIndex = this.getOptionIndex(option); // Check whether the option is the last item

      if (optionIndex > 0) {
        this.keyManager.setPreviousItemActive();
      } else if (optionIndex === 0 && this.options.length > 1) {
        this.keyManager.setNextItemActive();
      }
    }
  }

  onKeyDown(event) {
    // tslint:disable-next-line: deprecation
    const keyCode = event.keyCode;

    if ([_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.SPACE, _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.ENTER, _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.LEFT_ARROW, _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.RIGHT_ARROW].includes(keyCode) || (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.isVerticalMovement)(event)) {
      event.preventDefault();
    }

    if (this.multiple && (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.isSelectAll)(event)) {
      this.selectAllOptions();
      event.preventDefault();
      return;
    } else if ((0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.isCopy)(event)) {
      this.copyActiveOption();
      event.preventDefault();
      return;
    } else if ([_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.SPACE, _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.ENTER].includes(keyCode)) {
      this.toggleFocusedOption();
      return;
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.TAB) {
      this.keyManager.tabOut.next();
      return;
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.DOWN_ARROW) {
      this.keyManager.setNextItemActive();
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.UP_ARROW) {
      this.keyManager.setPreviousItemActive();
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.HOME) {
      this.keyManager.setFirstItemActive();
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.END) {
      this.keyManager.setLastItemActive();
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.PAGE_UP) {
      this.keyManager.setPreviousPageItemActive();
    } else if (keyCode === _ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.PAGE_DOWN) {
      this.keyManager.setNextPageItemActive();
    }

    if (this.keyManager.activeItem && (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.isVerticalMovement)(event)) {
      this.setSelectedOptionsByKey(this.keyManager.activeItem, (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.hasModifierKey)(event, 'shiftKey'), (0,_ptsecurity_cdk_keycodes__WEBPACK_IMPORTED_MODULE_4__.hasModifierKey)(event, 'ctrlKey'));
    }
  } // Reports a value change to the ControlValueAccessor


  reportValueChange() {
    if (this.options) {
      const value = this.getSelectedOptionValues();
      this.onChange(value);
      this._value = value;
    }
  } // Emits a change event if the selected state of an option changed.


  emitChangeEvent(option) {
    this.selectionChange.emit(new McListSelectionChange(this, option));
  }

  updateTabIndex() {
    this._tabIndex = this.userTabIndex || (this.options.length === 0 ? -1 : 0);
  }

  onCopyDefaultHandler() {
    var _a;

    (_a = this.clipboard) === null || _a === void 0 ? void 0 : _a.copy(this.keyManager.activeItem.value);
  }

  resetOptions() {
    this.dropSubscriptions();
    this.listenToOptionsFocus();
  }

  dropSubscriptions() {
    if (this.optionFocusSubscription) {
      this.optionFocusSubscription.unsubscribe();
      this.optionFocusSubscription = null;
    }

    if (this.optionBlurSubscription) {
      this.optionBlurSubscription.unsubscribe();
      this.optionBlurSubscription = null;
    }
  }

  listenToOptionsFocus() {
    this.optionFocusSubscription = this.optionFocusChanges.subscribe(event => {
      const index = this.options.toArray().indexOf(event.option);

      if (this.isValidIndex(index)) {
        this.keyManager.updateActiveItem(index);
      }
    });
    this.optionBlurSubscription = this.optionBlurChanges.subscribe(() => this.blur());
  }
  /** Checks whether any of the options is focused. */


  hasFocusedOption() {
    return this.options.some(option => option.hasFocus);
  } // Returns the option with the specified value.


  getOptionByValue(value) {
    return this.options.find(option => option.value === value);
  } // Sets the selected options based on the specified values.


  setOptionsFromValues(values) {
    this.options.forEach(option => option.setSelected(false));
    values.map(value => this.getOptionByValue(value)).filter(Boolean).forEach(option => option.setSelected(true));
  }
  /**
   * Utility to ensure all indexes are valid.
   * @param index The index to be checked.
   * @returns True if the index is valid for our list of options.
   */


  isValidIndex(index) {
    return index >= 0 && index < this.options.length;
  } // Returns the index of the specified list option.


  getOptionIndex(option) {
    return this.options.toArray().indexOf(option);
  }

  selectAllOptions() {
    const optionsToSelect = this.options.filter(option => !option.disabled);
    optionsToSelect.forEach(option => option.setSelected(true));
    this.onSelectAll.emit(new McListSelectAllEvent(this, optionsToSelect));
  }

  copyActiveOption() {
    if (this.onCopy.observers.length) {
      this.onCopy.emit(new McListCopyEvent(this, this.keyManager.activeItem));
    } else {
      this.onCopyDefaultHandler();
    }
  }

}
/** @nocollapse */


McListSelection.ɵfac = function McListSelection_Factory(t) {
  return new (t || McListSelection)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinjectAttribute"]('multiple'), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_15__.Clipboard, 8));
};
/** @nocollapse */


McListSelection.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: McListSelection,
  selectors: [["mc-list-selection"]],
  contentQueries: function McListSelection_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, McListOption, 5);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.options = _t);
    }
  },
  hostAttrs: [1, "mc-list-selection"],
  hostVars: 2,
  hostBindings: function McListSelection_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown", function McListSelection_keydown_HostBindingHandler($event) {
        return ctx.onKeyDown($event);
      })("resize", function McListSelection_resize_HostBindingHandler() {
        return ctx.updateScrollSize();
      }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresolveWindow"]);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", -1)("disabled", ctx.disabled || null);
    }
  },
  inputs: {
    disabled: "disabled",
    autoSelect: "autoSelect",
    noUnselectLast: "noUnselectLast",
    horizontal: "horizontal",
    tabIndex: "tabIndex",
    compareWith: "compareWith"
  },
  outputs: {
    onSelectAll: "onSelectAll",
    onCopy: "onCopy",
    selectionChange: "selectionChange"
  },
  exportAs: ["mcListSelection"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([MC_SELECTION_LIST_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c3,
  decls: 2,
  vars: 1,
  consts: [[3, "focus", "blur"]],
  template: function McListSelection_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("focus", function McListSelection_Template_div_focus_0_listener() {
        return ctx.focus();
      })("blur", function McListSelection_Template_div_blur_0_listener() {
        return ctx.blur();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", ctx.tabIndex);
    }
  },
  styles: [".mc-divider{display:block;margin:0}.mc-divider.mc-divider_horizontal{border-top-width:1px;border-top-width:var(--mc-divider-size-width, 1px);border-top-style:solid}.mc-divider.mc-divider_vertical{height:100%;border-right-width:1px;border-right-width:var(--mc-divider-size-width, 1px);border-right-style:solid}.mc-divider.mc-divider_inset{margin-left:80px;margin-left:var(--mc-divider-size-inset-margin, 80px)}[dir=rtl] .mc-divider.mc-divider_inset{margin-left:auto;margin-right:80px;margin-right:var(--mc-divider-size-inset-margin, 80px)}.mc-no-select{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.mc-list,.mc-list-selection{display:block;outline:none}.mc-list-item,.mc-list-option{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;position:relative;display:flex;align-items:center;box-sizing:border-box;height:32px;height:var(--mc-list-size-item-height, 32px);border:2px solid transparent;padding-left:16px;padding-left:var(--mc-list-size-horizontal-padding, 16px)}.mc-list-item .mc-list-text,.mc-list-option .mc-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding-right:16px;padding-right:var(--mc-list-size-horizontal-padding, 16px)}.mc-list-item .mc-list-text>*,.mc-list-option .mc-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mc-list-item .mc-list-text:empty,.mc-list-option .mc-list-text:empty{display:none}.mc-list-item .mc-list-icon,.mc-list-option .mc-list-icon{box-sizing:content-box;flex-shrink:0;width:24px;width:var(--mc-list-size-icon-width, 24px);height:24px;height:var(--mc-list-size-icon-width, 24px);border-radius:50%;padding:4px;padding:var(--mc-list-size-icon-padding, 4px);font-size:24px;font-size:var(--mc-list-size-icon-width, 24px)}.mc-list-item .mc-list-icon~.mc-divider_inset,.mc-list-option .mc-list-icon~.mc-divider_inset{margin-left:32pxvar(--mc-list-size-icon-width,24px)8px;width:100%-32pxvar(--mc-list-size-icon-width,24px)8px}[dir=rtl] .mc-list-item .mc-list-icon~.mc-divider_inset,[dir=rtl] .mc-list-option .mc-list-icon~.mc-divider_inset{margin-left:auto;margin-right:32pxvar(--mc-list-size-icon-width,24px)8px}.mc-list-item .mc-divider,.mc-list-option .mc-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mc-list-item .mc-divider,[dir=rtl] .mc-list-option .mc-divider{margin-left:auto;margin-right:0}.mc-list-item .mc-divider.mc-divider_inset,.mc-list-option .mc-divider.mc-divider_inset{position:absolute}.mc-list-item.mc-progress:after,.mc-list-option.mc-progress:after{top:-2px;right:-2px;bottom:-2px;left:-2px}.mc-list-item .mc-pseudo-checkbox,.mc-list-option .mc-pseudo-checkbox{margin-right:8px}.mc-list-item .mc-option-action,.mc-list-option .mc-option-action{display:none}.mc-list-item:not([disabled]):hover .mc-option-action,.mc-list-item:not([disabled]).mc-focused .mc-option-action,.mc-list-item:not([disabled]).mc-action-button-focused .mc-option-action,.mc-list-option:not([disabled]):hover .mc-option-action,.mc-list-option:not([disabled]).mc-focused .mc-option-action,.mc-list-option:not([disabled]).mc-action-button-focused .mc-option-action{display:flex}.mc-list-option:not([disabled]):not(.mc-disabled){cursor:pointer}\n"],
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](McListSelection, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      exportAs: 'mcListSelection',
      selector: 'mc-list-selection',
      template: `
        <div [attr.tabindex]="tabIndex"
             (focus)="focus()"
             (blur)="blur()">
            <ng-content></ng-content>
        </div>`,
      styleUrls: ['./list.scss'],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      inputs: ['disabled'],
      host: {
        class: 'mc-list-selection',
        '[attr.tabindex]': '-1',
        '[attr.disabled]': 'disabled || null',
        '(keydown)': 'onKeyDown($event)',
        '(window:resize)': 'updateScrollSize()'
      },
      providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],
      preserveWhitespaces: false
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.MultipleMode,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Attribute,
        args: ['multiple']
      }]
    }, {
      type: _angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_15__.Clipboard,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }];
  }, {
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren,
      args: [McListOption, {
        descendants: true
      }]
    }],
    onSelectAll: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    onCopy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    autoSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    noUnselectLast: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    horizontal: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    tabIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    compareWith: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})(); // todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.


class McList {}
/** @nocollapse */


McList.ɵfac = function McList_Factory(t) {
  return new (t || McList)();
};
/** @nocollapse */


McList.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: McList,
  selectors: [["mc-list"]],
  hostAttrs: [1, "mc-list"],
  ngContentSelectors: _c3,
  decls: 1,
  vars: 0,
  template: function McList_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0);
    }
  },
  styles: [_c4],
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](McList, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'mc-list',
      host: {
        class: 'mc-list'
      },
      template: '<ng-content></ng-content>',
      styleUrls: ['./list.scss'],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None
    }]
  }], null, null);
})();

class McListItem {
  constructor(elementRef) {
    this.elementRef = elementRef;
  }

  ngAfterContentInit() {
    // tslint:disable-next-line:no-unused-expression
    new _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McLineSetter(this.lines, this.elementRef);
  }

  handleFocus() {
    this.elementRef.nativeElement.classList.add('mc-focused');
  }

  handleBlur() {
    this.elementRef.nativeElement.classList.remove('mc-focused');
  }

  getHostElement() {
    return this.elementRef.nativeElement;
  }

}
/** @nocollapse */


McListItem.ɵfac = function McListItem_Factory(t) {
  return new (t || McListItem)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
};
/** @nocollapse */


McListItem.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: McListItem,
  selectors: [["mc-list-item"], ["a", "mc-list-item", ""]],
  contentQueries: function McListItem_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McLine, 4);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.lines = _t);
    }
  },
  hostAttrs: [1, "mc-list-item"],
  hostBindings: function McListItem_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("focus", function McListItem_focus_HostBindingHandler() {
        return ctx.handleFocus();
      })("blur", function McListItem_blur_HostBindingHandler() {
        return ctx.handleBlur();
      });
    }
  },
  ngContentSelectors: _c6,
  decls: 4,
  vars: 0,
  consts: [[1, "mc-list-text"]],
  template: function McListItem_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c5);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](3, 2);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](McListItem, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'mc-list-item, a[mc-list-item]',
      host: {
        class: 'mc-list-item',
        '(focus)': 'handleFocus()',
        '(blur)': 'handleBlur()'
      },
      templateUrl: './list-item.html',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      preserveWhitespaces: false,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, {
    lines: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren,
      args: [_ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McLine]
    }]
  });
})();

class McListModule {}
/** @nocollapse */


McListModule.ɵfac = function McListModule_Factory(t) {
  return new (t || McListModule)();
};
/** @nocollapse */


McListModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: McListModule
});
/** @nocollapse */

McListModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_16__.A11yModule, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McPseudoCheckboxModule, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McLineModule, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptionModule], _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptionModule]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](McListModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_16__.A11yModule, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McPseudoCheckboxModule, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McLineModule, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptionModule],
      exports: [McList, McListSelection, McListItem, McListOption, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_2__.McOptionModule],
      declarations: [McList, McListSelection, McListItem, McListOption]
    }]
  }], null, null);
})();
/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ 49091:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-list.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListActionButtonExample": function() { return /* binding */ ListActionButtonExample; },
/* harmony export */   "ListExamplesModule": function() { return /* binding */ ListExamplesModule; },
/* harmony export */   "ListGroupsExample": function() { return /* binding */ ListGroupsExample; },
/* harmony export */   "ListMultipleCheckboxExample": function() { return /* binding */ ListMultipleCheckboxExample; },
/* harmony export */   "ListMultipleKeyboardExample": function() { return /* binding */ ListMultipleKeyboardExample; },
/* harmony export */   "ListOverviewExample": function() { return /* binding */ ListOverviewExample; }
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 54364);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 1707);
/* harmony import */ var _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ptsecurity/mosaic/dropdown */ 30005);
/* harmony import */ var _ptsecurity_mosaic_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ptsecurity/mosaic/icon */ 86463);
/* harmony import */ var _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ptsecurity/mosaic/list */ 7690);
/* harmony import */ var _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ptsecurity/mosaic/tooltip */ 54360);
/* harmony import */ var _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ptsecurity/mosaic/core */ 46872);















function ListActionButtonExample_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-option", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "mc-option-action", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item {{ item }}");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" Item ", item_r2, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("mcTooltip", "Tooltip text")("mcPlacement", "right")("mcDropdownTriggerFor", _r1);
} }
const _c0 = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9]; };
/**
 * @title list ActionButton
 */
class ListActionButtonExample {
    constructor() {
        this.selected = [];
    }
}
ListActionButtonExample.ɵfac = function ListActionButtonExample_Factory(t) { return new (t || ListActionButtonExample)(); };
ListActionButtonExample.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ListActionButtonExample, selectors: [["list-action-button-example"]], decls: 13, vars: 5, consts: [[3, "autoSelect", "ngModel", "ngModelChange"], [3, "value", 4, "ngFor", "ngForOf"], ["dropdown", ""], ["mc-dropdown-item", ""], [3, "value"], [3, "mcTooltip", "mcPlacement", "mcDropdownTriggerFor"]], template: function ListActionButtonExample_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-selection", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function ListActionButtonExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ListActionButtonExample_mc_list_option_1_Template, 3, 5, "mc-list-option", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mc-dropdown", null, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "item 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("autoSelect", false)("ngModel", ctx.selected);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](4, _c0));
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Selected: ", ctx.selected, "");
    } }, directives: [_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListSelection, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgModel, _angular_common__WEBPACK_IMPORTED_MODULE_3__.NgForOf, _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__.McDropdown, _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__.McDropdownItem, _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListOption, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_5__.McOptionActionComponent, _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__.McTooltipTrigger, _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__.McDropdownTrigger], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ListActionButtonExample, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
        args: [{
                selector: 'list-action-button-example',
                templateUrl: 'list-action-button-example.html',
                styleUrls: ['list-action-button-example.css']
            }]
    }], null, null); })();

function ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-option", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pokemon_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", pokemon_r3.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", pokemon_r3.viewValue, " ");
} }
function ListGroupsExample_mc_optgroup_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-optgroup", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template, 2, 2, "mc-list-option", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const group_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("label", group_r1.name)("disabled", group_r1.disabled);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", group_r1.pokemon);
} }
/**
 * @title Basic list
 */
class ListGroupsExample {
    constructor() {
        this.pokemonTypes = [
            {
                name: 'Grass',
                pokemon: [
                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },
                    { value: 'oddish-1', viewValue: 'Oddish' },
                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }
                ]
            },
            {
                name: 'Water',
                disabled: true,
                pokemon: [
                    { value: 'squirtle-3', viewValue: 'Squirtle' },
                    { value: 'psyduck-4', viewValue: 'Psyduck' },
                    { value: 'horsea-5', viewValue: 'Horsea' }
                ]
            },
            {
                name: 'Fire',
                pokemon: [
                    { value: 'charmander-6', viewValue: 'Charmander' },
                    { value: 'vulpix-7', viewValue: 'Vulpix' },
                    { value: 'flareon-8', viewValue: 'Flareon' }
                ]
            },
            {
                name: 'Psychic',
                pokemon: [
                    { value: 'mew-9', viewValue: 'Mew' },
                    { value: 'mewtwo-10', viewValue: 'Mewtwo' }
                ]
            }
        ];
    }
}
ListGroupsExample.ɵfac = function ListGroupsExample_Factory(t) { return new (t || ListGroupsExample)(); };
ListGroupsExample.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ListGroupsExample, selectors: [["list-groups-example"]], decls: 4, vars: 2, consts: [[3, "label", "disabled", 4, "ngFor", "ngForOf"], [3, "value"], [3, "label", "disabled"], [3, "value", 4, "ngFor", "ngForOf"]], template: function ListGroupsExample_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-selection");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ListGroupsExample_mc_optgroup_1_Template, 2, 3, "mc-optgroup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "mc-list-option", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Mr. Mime");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.pokemonTypes);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "mime-11");
    } }, directives: [_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListSelection, _angular_common__WEBPACK_IMPORTED_MODULE_3__.NgForOf, _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListOption, _ptsecurity_mosaic_core__WEBPACK_IMPORTED_MODULE_5__.McOptgroup], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ListGroupsExample, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
        args: [{
                selector: 'list-groups-example',
                templateUrl: 'list-groups-example.html',
                styleUrls: ['list-groups-example.css']
            }]
    }], null, null); })();

/**
 * @title Basic list
 */
class ListMultipleCheckboxExample {
    constructor() {
        this.selected = [];
    }
}
ListMultipleCheckboxExample.ɵfac = function ListMultipleCheckboxExample_Factory(t) { return new (t || ListMultipleCheckboxExample)(); };
ListMultipleCheckboxExample.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ListMultipleCheckboxExample, selectors: [["list-multiple-checkbox-example"]], decls: 24, vars: 13, consts: [["multiple", "checkbox", 3, "ngModel", "ngModelChange"], [3, "value", "disabled"], [3, "value"]], template: function ListMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-selection", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mc-list-option", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Item 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "Item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Item 4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "Item 5");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Item 6");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Item 7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Item 8");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, "Item 9");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Item 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](21, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx.selected);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 1")("disabled", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 5");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 6");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 8");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 9");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Selected: ", ctx.selected, "");
    } }, directives: [_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListSelection, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgModel, _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListOption], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ListMultipleCheckboxExample, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
        args: [{
                selector: 'list-multiple-checkbox-example',
                templateUrl: 'list-multiple-checkbox-example.html',
                styleUrls: ['list-multiple-checkbox-example.css']
            }]
    }], null, null); })();

/**
 * @title Basic list
 */
class ListMultipleKeyboardExample {
    constructor() {
        this.selected = [];
    }
}
ListMultipleKeyboardExample.ɵfac = function ListMultipleKeyboardExample_Factory(t) { return new (t || ListMultipleKeyboardExample)(); };
ListMultipleKeyboardExample.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ListMultipleKeyboardExample, selectors: [["list-multiple-keyboard-example"]], decls: 24, vars: 12, consts: [["multiple", "keyboard", 3, "ngModel", "ngModelChange"], ["disabled", "", 3, "value"], [3, "value"]], template: function ListMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-selection", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mc-list-option", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Item 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "Item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Item 4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "Item 5");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Item 6");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Item 7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Item 8");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, "Item 9");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Item 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](21, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx.selected);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 5");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 6");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 8");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 9");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Selected: ", ctx.selected, "");
    } }, directives: [_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListSelection, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgModel, _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListOption], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ListMultipleKeyboardExample, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
        args: [{
                selector: 'list-multiple-keyboard-example',
                templateUrl: 'list-multiple-keyboard-example.html',
                styleUrls: ['list-multiple-keyboard-example.css']
            }]
    }], null, null); })();

/**
 * @title Basic list
 */
class ListOverviewExample {
    constructor() {
        this.selected = [];
    }
}
ListOverviewExample.ɵfac = function ListOverviewExample_Factory(t) { return new (t || ListOverviewExample)(); };
ListOverviewExample.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ListOverviewExample, selectors: [["list-overview-example"]], decls: 24, vars: 12, consts: [[3, "ngModel", "ngModelChange"], ["disabled", "", 3, "value"], [3, "value"]], template: function ListOverviewExample_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mc-list-selection", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mc-list-option", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Item 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "Item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Item 4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "Item 5");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Item 6");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Item 7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Item 8");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, "Item 9");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "mc-list-option", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Item 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](21, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx.selected);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 3");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 5");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 6");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 8");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 9");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "Item 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Selected: ", ctx.selected, "");
    } }, directives: [_ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListSelection, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgModel, _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListOption], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ListOverviewExample, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
        args: [{
                selector: 'list-overview-example',
                templateUrl: 'list-overview-example.html',
                styleUrls: ['list-overview-example.css']
            }]
    }], null, null); })();

const EXAMPLES = [
    ListOverviewExample,
    ListMultipleCheckboxExample,
    ListMultipleKeyboardExample,
    ListGroupsExample,
    ListActionButtonExample
];
class ListExamplesModule {
}
ListExamplesModule.ɵfac = function ListExamplesModule_Factory(t) { return new (t || ListExamplesModule)(); };
ListExamplesModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ListExamplesModule });
ListExamplesModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormsModule,
            _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListModule,
            _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__.McDropdownModule,
            _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__.McToolTipModule,
            _ptsecurity_mosaic_icon__WEBPACK_IMPORTED_MODULE_7__.McIconModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ListExamplesModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
        args: [{
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormsModule,
                    _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListModule,
                    _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__.McDropdownModule,
                    _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__.McToolTipModule,
                    _ptsecurity_mosaic_icon__WEBPACK_IMPORTED_MODULE_7__.McIconModule
                ],
                declarations: EXAMPLES,
                exports: EXAMPLES
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ListExamplesModule, { declarations: [ListOverviewExample,
        ListMultipleCheckboxExample,
        ListMultipleKeyboardExample,
        ListGroupsExample,
        ListActionButtonExample], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormsModule,
        _ptsecurity_mosaic_list__WEBPACK_IMPORTED_MODULE_1__.McListModule,
        _ptsecurity_mosaic_dropdown__WEBPACK_IMPORTED_MODULE_4__.McDropdownModule,
        _ptsecurity_mosaic_tooltip__WEBPACK_IMPORTED_MODULE_6__.McToolTipModule,
        _ptsecurity_mosaic_icon__WEBPACK_IMPORTED_MODULE_7__.McIconModule], exports: [ListOverviewExample,
        ListMultipleCheckboxExample,
        ListMultipleKeyboardExample,
        ListGroupsExample,
        ListActionButtonExample] }); })();

/**
 * Generated bundle index. Do not edit.
 */




/***/ })

}]);
//# sourceMappingURL=node_modules_ptsecurity_mosaic-examples_fesm2015_ptsecurity-mosaic-examples-mosaic-list_js-es2015.js.map