{"version":3,"file":"node_modules_ptsecurity_mosaic-examples_fesm2015_ptsecurity-mosaic-examples-mosaic-list_js-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAqEA;;;;;;;;;;2DCrEA;;;;;4DAAA;;;;;;;;;;;MDsGa,aAAY;AAoFrB,cACY,UADZ,EAEY,cAFZ,EAGY,MAHZ,EAIsD,aAJtD,EAKyB,KALzB,EAK0C;AAJ9B;AACA;AACA;AAC0C;AAC7B;AAxFzB,oBAAoB,KAApB;AAES,mBAAU,IAAI,yCAAJ,EAAV;AAEA,kBAAS,IAAI,yCAAJ,EAAT;;;;;;AAeD,6BAAoB,KAApB;AA8BA,qBAAY,KAAZ;AA4BA,qBAAY,KAAZ;AAYJ;;AAnEK,MAAL,KAAK;AAAU,WAAO,KAAK,MAAZ;AAAqB;;AAC/B,MAAL,KAAK,CAAC,QAAD,EAAc;AACnB,QAAI,KAAK,QAAL,IAAiB,QAAQ,KAAK,KAAK,KAAnC,IAA4C,KAAK,iBAArD,EAAwE;AACpE,WAAK,QAAL,GAAgB,KAAhB;AACH;;AAED,SAAK,MAAL,GAAc,QAAd;AACH;;AAIW,MAAR,QAAQ;AACR,UAAM,qBAAqB,GAAG,KAAK,aAAL,IAAsB,KAAK,aAAL,CAAmB,QAAvE;AACA,UAAM,aAAa,GAAG,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,QAA/C;AAEA,WAAO,qBAAqB,IAAI,aAAzB,IAA0C,KAAK,SAAtD;AACH;;AAEW,MAAR,QAAQ,CAAC,KAAD,EAAW;AACnB,UAAM,QAAQ,GAAG,kEAAS,CAAC,KAAD,CAA1B;;AAEA,QAAI,QAAQ,KAAK,KAAK,SAAtB,EAAiC;AAC7B,WAAK,SAAL,GAAiB,QAAjB;AACA,WAAK,cAAL,CAAoB,YAApB;AACH;AACJ;;AAKe,MAAZ,YAAY;AACZ,WAAO,KAAK,aAAL,KAAuB,SAAvB,GAAmC,KAAK,aAAxC,GAAwD,KAAK,aAAL,CAAmB,YAAlF;AACH;;AAEe,MAAZ,YAAY,CAAC,KAAD,EAAW;AACvB,SAAK,aAAL,GAAqB,4EAAqB,CAAC,KAAD,CAA1C;AACH;;AAKW,MAAR,QAAQ;AACR,WAAO,KAAK,aAAL,CAAmB,cAAnB,IAAqC,KAAK,aAAL,CAAmB,cAAnB,CAAkC,UAAlC,CAA6C,IAA7C,CAArC,IAA2F,KAAlG;AACH;;AAEW,MAAR,QAAQ,CAAC,KAAD,EAAe;AACvB,UAAM,UAAU,GAAG,kEAAS,CAAC,KAAD,CAA5B;;AAEA,QAAI,UAAU,KAAK,KAAK,SAAxB,EAAmC;AAC/B,WAAK,WAAL,CAAiB,UAAjB;AAEA,WAAK,aAAL,CAAmB,iBAAnB;AACH;AACJ;;AAIW,MAAR,QAAQ;AACR,WAAO,KAAK,QAAL,GAAgB,IAAhB,GAAuB,CAAC,CAA/B;AACH;;AAUD,UAAQ;AACJ,UAAM,IAAI,GAAG,KAAK,aAAlB;;AAEA,QAAI,IAAI,CAAC,MAAL,IAAe,IAAI,CAAC,MAAL,CAAY,IAAZ,CAAkB,KAAD,IAAW,IAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,KAAK,MAA7B,CAA5B,CAAnB,EAAsF;AAClF,WAAK,WAAL,CAAiB,IAAjB;AACH;;AAED,UAAM,WAAW,GAAG,KAAK,SAAzB,CAPI;;;;;;AAcJ,WAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB;AACnB,UAAI,KAAK,SAAL,IAAkB,WAAtB,EAAmC;AAC/B,aAAK,QAAL,GAAgB,IAAhB;AACA,aAAK,cAAL,CAAoB,YAApB;AACH;AACJ,KALD;AAOA,SAAK,iBAAL,GAAyB,IAAzB;AACH;;AAED,aAAW;AACP,QAAI,KAAK,QAAT,EAAmB;;;AAGf,aAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,MAAM,KAAK,QAAL,GAAgB,KAA7C;AACH;;AAED,SAAK,aAAL,CAAmB,oBAAnB,CAAwC,IAAxC;AACH;;AAED,QAAM;AACF,SAAK,QAAL,GAAgB,CAAC,KAAK,QAAtB;AACH;;AAED,UAAQ;AACJ,WAAO,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,aAAV,CAAwB,WAApC,GAAkD,EAAzD;AACH;;AAED,aAAW,CAAC,QAAD,EAAkB;AACzB,QAAI,KAAK,SAAL,KAAmB,QAAnB,IAA+B,CAAC,KAAK,aAAL,CAAmB,cAAvD,EAAuE;AAAE;AAAS;;AAElF,SAAK,SAAL,GAAiB,QAAjB;;AAEA,QAAI,QAAJ,EAAc;AACV,WAAK,aAAL,CAAmB,cAAnB,CAAkC,MAAlC,CAAyC,IAAzC;AACH,KAFD,MAEO;AACH,WAAK,aAAL,CAAmB,cAAnB,CAAkC,QAAlC,CAA2C,IAA3C;AACH;;AAED,SAAK,cAAL,CAAoB,YAApB;AACH;;AAED,WAAS;AACL,WAAO,KAAK,UAAL,CAAgB,aAAhB,CAA8B,cAA9B,GAA+C,CAA/C,EAAkD,MAAzD;AACH;;AAED,aAAW,CAAC,MAAD,EAAO;AACd,QAAI,KAAK,QAAT,EAAmB;AAAE;AAAS;;AAE9B,SAAK,aAAL,CAAmB,yBAAnB,CACI,IADJ,EACU,wEAAc,CAAC,MAAD,EAAS,UAAT,CADxB,EAC8C,wEAAc,CAAC,MAAD,EAAS,SAAT,CAD5D;AAGH;;AAED,WAAS,CAAC,MAAD,EAAO;AACZ,QAAI,CAAC,KAAK,YAAV,EAAwB;AAAE;AAAS;;AAEnC,QAAI,MAAM,CAAC,OAAP,KAAmB,yDAAnB,IAA0B,CAAC,MAAM,CAAC,QAAlC,IAA8C,CAAC,KAAK,YAAL,CAAkB,QAArE,EAA+E;AAC3E,WAAK,YAAL,CAAkB,KAAlB;AAEA,YAAM,CAAC,cAAP;AACH;AACJ;;AAED,OAAK;;;AACD,QAAI,KAAK,QAAL,IAAiB,KAAK,QAAtB,KAAkC,WAAK,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE,QAArD,CAAJ,EAAmE;AAAE;AAAS;;AAE9E,SAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;AAEA,SAAK,OAAL,CAAa,IAAb,CAAkB;AAAE,YAAM,EAAE;AAAV,KAAlB;AAEA,WAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB;AACnB,WAAK,QAAL,GAAgB,IAAhB;AAEA,WAAK,cAAL,CAAoB,YAApB;AACH,KAJD;AAKH;;AAED,MAAI;;;;;AAKA,SAAK,MAAL,CAAY,QAAZ,CACK,YADL,GAEK,IAFL,CAEU,oDAAI,CAAC,CAAD,CAFd,EAGK,SAHL,CAGe;AACP,WAAK,MAAL,CAAY,GAAZ,CAAgB;;;AACZ,aAAK,QAAL,GAAgB,KAAhB;;AAEA,YAAI,WAAK,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE,QAAvB,EAAiC;AAAE;AAAS;;AAE5C,aAAK,MAAL,CAAY,IAAZ,CAAiB;AAAE,gBAAM,EAAE;AAAV,SAAjB;AACH,OAND;AAOH,KAXL;AAYH;;AAED,gBAAc;AACV,WAAO,KAAK,UAAL,CAAgB,aAAvB;AACH;;AA7MoB;;;;;mBAAZ,8EAAY,2WAwFT,yDAAU,CAAC,MAAM,eAAP,oEAAuB;;;;;;QAxFpC;;;;6EAOK;6EACA;6EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;eATL;;eAAA;;eAAA;;eAAA;;;;;;;;;;;;;;;;;8EAJE,CACP;AAAE,WAAO,EAAE,4EAAX;AAAoC,eAAW,EAAE;AAAjD,GADO;;;;;;;;8DClGf;kEAAA;gEAAA;gEAAA;gEAAA;;;;8DAAA;;;eAWA;;;;;;qHD2Fa,cAAY;UA5BxB,oDA4BwB;WA5Bd;AACP,cAAQ,EAAE,cADH;AAEP,cAAQ,EAAE,gBAFH;AAGP,iBAAW,EAAE,oBAHN;AAIP,UAAI,EAAE;AACF,aAAK,EAAE,gBADL;AAGF,+BAAuB,UAHrB;AAIF,+BAAuB,UAJrB;AAKF,8BAAsB,UALpB;AAOF,4CAAoC,sBAPlC;AASF,2BAAmB,UATjB;AAUF,2BAAmB,kBAVjB;AAYF,qBAAa,SAZX;AAaF,kBAAU,QAbR;AAcF,mBAAW,qBAdT;AAeF,qBAAa;AAfX,OAJC;AAqBP,mBAAa,EAAE,iEArBR;AAsBP,yBAAmB,EAAE,KAtBd;AAuBP,qBAAe,EAAE,yEAvBV;AAwBP,eAAS,EAAE,CACP;AAAE,eAAO,EAAE,4EAAX;AAAoC,mBAAW;AAA/C,OADO;AAxBJ;AA4Bc;;;;;;;;YAwFgD;AAAe;cAA/E,iDAA+E;eAAxE,yDAAU,CAAC,MAAM,eAAP;AAA8D;;;;cAC/E,mDAAQ;;;;AAlF0B,gBAAY;YAAlD,uDAAkD;aAArC;AAAqC;AACnB,kBAAc;YAA7C,uDAA6C;aAAhC;AAAgC;AACb,mBAAe;YAA/C,uDAA+C;aAAlC;AAAkC;AAEV,QAAI;YAAzC,oDAAyC;aAA/B,QAAQ;AAAE,cAAM,EAAE;AAAV;AAAuB;AAGjC,oBAAgB;YAAxB,gDAAK;AAAmB;AASrB,SAAK;YADR,gDAAK;AACG;AAWL,YAAQ;YADX,gDAAK;AACM;AAmBR,gBAAY;YADf,gDAAK;AACU;AAWZ,YAAQ;YADX,gDAAK;AACM;;;;MAiJH,gCAAgC,GAAQ;AACjD,SAAO,EAAE,6DADwC;AAEjD,aAAW,EAAE,yDAAU,CAAC,MAAM,eAAP,CAF0B;AAGjD,OAAK,EAAE;AAH0C;;MAMxC,sBAAqB;AAC9B,cAAmB,MAAnB,EAAmD,MAAnD,EAAuE;AAApD;AAAgC;AAAwB;;AAD7C;;MAIrB,qBAAoB;AAC7B,cAAmB,MAAnB,EAAmD,OAAnD,EAA+D;AAA5C;AAAgC;AAAgB;;AADtC;;MAIpB,gBAAe;AACxB,cAAmB,MAAnB,EAAmD,MAAnD,EAA4D;AAAzC;AAAgC;AAAa;;AADxC;;MAIf,oBAAmB;AAC5B,cAAmB,UAAnB,EAAyC;AAAtB;AAA0B;;AADjB,EAIhC;;;MACa,wBAAwB,GAC/B,sEAAa,CAAC,sEAAa,CAAC,mBAAD,CAAd;;MA2BN,wBAAwB,yBAAwB;AAkFzD,cACI,UADJ,EAEY,iBAFZ,EAG2B,QAH3B,EAIwB,SAJxB,EAI4C;AAExC,UAAM,UAAN;AAJQ;AAEY;AA/EL,uBAAc,IAAI,uDAAJ,EAAd;AAEA,kBAAS,IAAI,uDAAJ,EAAT;AAWX,uBAAuB,IAAvB;AAWA,2BAA2B,IAA3B;AAQC,sBAAsB,KAAtB;AAYD,qBAAY,CAAZ;AAER,wBAA8B,IAA9B,CAiC4C;;AA1BzB,2BAAuD,IAAI,uDAAJ,EAAvD;;;AAgBF,qBAAY,IAAI,yCAAJ,EAAZ;;;;;;;AAiCR,uBAA6C,CAAC,EAAD,EAAK,EAAL,KAAY,EAAE,KAAK,EAAhE,CAvBmC;;;;AA4N5C,qBAAwB,OAAQ,CAAhC,CA5N4C;;;AAqXpC,oBAAkC,CAAD,IAAO,CAAO,CAA/C;;AAjXJ,QAAI,QAAQ,KAAK,0EAAb,IAAsC,QAAQ,KAAK,0EAAvD,EAA8E;AAC1E,WAAK,YAAL,GAAoB,QAApB;AACH,KAFD,MAEO,IAAI,QAAQ,KAAK,IAAjB,EAAuB;AAC1B,WAAK,YAAL,GAAoB,0EAApB;AACH;;AAED,QAAI,KAAK,YAAL,KAAsB,0EAA1B,EAAiD;AAC7C,WAAK,UAAL,GAAkB,KAAlB;AACA,WAAK,cAAL,GAAsB,KAAtB;AACH;;AAED,SAAK,cAAL,GAAsB,IAAI,qEAAJ,CAAiC,KAAK,QAAtC,CAAtB;AACH;;AA1Fa,MAAV,UAAU;AACV,WAAO,KAAK,WAAZ;AACH;;AAEa,MAAV,UAAU,CAAC,KAAD,EAAe;AACzB,SAAK,WAAL,GAAmB,4EAAqB,CAAC,KAAD,CAAxC;AACH;;AAKiB,MAAd,cAAc;AACd,WAAO,KAAK,eAAZ;AACH;;AAEiB,MAAd,cAAc,CAAC,KAAD,EAAe;AAC7B,SAAK,eAAL,GAAuB,4EAAqB,CAAC,KAAD,CAA5C;AACH;;AAMW,MAAR,QAAQ;AACR,WAAO,CAAC,CAAC,KAAK,YAAd;AACH;;AAKW,MAAR,QAAQ;AACR,WAAO,KAAK,QAAL,GAAgB,CAAC,CAAjB,GAAqB,KAAK,SAAjC;AACH;;AAEW,MAAR,QAAQ,CAAC,KAAD,EAAW;AACnB,SAAK,YAAL,GAAoB,KAApB;AACA,SAAK,SAAL,GAAiB,KAAjB;AACH;;AAMe,MAAZ,YAAY;AACZ,WAAO,KAAK,YAAL,KAAsB,0EAA7B;AACH;;AAOqB,MAAlB,kBAAkB;AAClB,WAAO,4CAAK,CAAC,GAAG,KAAK,OAAL,CAAa,GAAb,CAAkB,MAAD,IAAY,MAAM,CAAC,OAApC,CAAJ,CAAZ;AACH;;AAEoB,MAAjB,iBAAiB;AACjB,WAAO,4CAAK,CAAC,GAAG,KAAK,OAAL,CAAa,GAAb,CAAkB,MAAD,IAAY,MAAM,CAAC,MAApC,CAAJ,CAAZ;AACH;;AAyCD,oBAAkB;AACd,SAAK,UAAL,GAAkB,kEAAS,CAAC,KAAK,UAAN,CAA3B;AAEA,SAAK,UAAL,GAAkB,IAAI,kEAAJ,CAAkC,KAAK,OAAvC,EACb,aADa,GAEb,uBAFa,CAEW,CAAC,KAAK,UAFjB,EAGb,yBAHa,CAGa,KAAK,UAAL,GAAkB,KAAlB,GAA0B,IAHvC,CAAlB;AAKA,SAAK,UAAL,CAAgB,MAAhB,CACK,IADL,CACU,0DAAS,CAAC,KAAK,SAAN,CADnB,EAEK,SAFL,CAEe;AACP,WAAK,SAAL,GAAiB,CAAC,CAAlB;AAEA,gBAAU,CAAC;AACP,aAAK,SAAL,GAAiB,KAAK,YAAL,IAAqB,CAAtC;AACA,aAAK,iBAAL,CAAuB,YAAvB;AACH,OAHS,CAAV;AAIH,KATL;;AAWA,QAAI,KAAK,MAAT,EAAiB;AACb,WAAK,oBAAL,CAA0B,KAAK,MAA/B;AACH;;AAED,SAAK,cAAL,CAAoB,OAApB,CACK,IADL,CACU,0DAAS,CAAC,KAAK,SAAN,CADnB,EAEK,SAFL,CAEgB,KAAD,IAAM;AACb,WAAK,MAAM,IAAX,IAAmB,KAAK,CAAC,KAAzB,EAAgC;AAAE,YAAI,CAAC,QAAL,GAAgB,IAAhB;AAAuB;;AAEzD,WAAK,MAAM,IAAX,IAAmB,KAAK,CAAC,OAAzB,EAAkC;AAAE,YAAI,CAAC,QAAL,GAAgB,KAAhB;AAAwB;AAC/D,KANL;AAQA,SAAK,OAAL,CAAa,OAAb,CACK,IADL,CACU,0DAAS,CAAC,IAAD,CADnB,EAC2B,0DAAS,CAAC,KAAK,SAAN,CADpC,EAEK,SAFL,CAEe;AACP,WAAK,YAAL,GADO;;AAIP,WAAK,cAAL;AACH,KAPL;AASA,SAAK,gBAAL;AACH;;AAED,aAAW;AACP,SAAK,SAAL,CAAe,IAAf;AAEA,SAAK,SAAL,CAAe,QAAf;AACH;;AAED,OAAK;AACD,QAAI,KAAK,OAAL,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAAE;AAAS;;AAE1C,SAAK,UAAL,CAAgB,kBAAhB;AACH;;AAED,MAAI;AACA,QAAI,CAAC,KAAK,gBAAL,EAAL,EAA8B;AAC1B,WAAK,UAAL,CAAgB,aAAhB,CAA8B,CAAC,CAA/B;AACH;;AAED,SAAK,SAAL;AACA,SAAK,iBAAL,CAAuB,YAAvB;AACH;;AAED,WAAS;AACL,SAAK,OAAL,CAAa,OAAb,CAAsB,MAAD,IAAY,MAAM,CAAC,WAAP,CAAmB,IAAnB,CAAjC;AAEA,SAAK,iBAAL;AACH;;AAED,aAAW;AACP,SAAK,OAAL,CAAa,OAAb,CAAsB,MAAD,IAAY,MAAM,CAAC,WAAP,CAAmB,KAAnB,CAAjC;AAEA,SAAK,iBAAL;AACH;;AAED,kBAAgB;AACZ,QAAI,KAAK,UAAL,IAAmB,CAAC,KAAK,OAAL,CAAa,KAArC,EAA4C;AAAE;AAAS;;AAEvD,SAAK,UAAL,CAAgB,cAAhB,CAA+B,IAAI,CAAC,KAAL,CAAW,KAAK,SAAL,KAAmB,KAAK,OAAL,CAAa,KAAb,CAAmB,SAAnB,EAA9B,CAA/B;AACH;;AAED,2BAAyB,CAAC,MAAD,EAAuB,QAAvB,EAA0C,OAA1C,EAA0D;AAC/E,QAAI,QAAQ,IAAI,KAAK,QAArB,EAA+B;AAC3B,WAAK,kBAAL,CAAwB,MAAxB;AACH,KAFD,MAEO,IAAI,OAAJ,EAAa;AAChB,UAAI,CAAC,KAAK,eAAL,CAAqB,MAArB,CAAL,EAAmC;AAAE;AAAS;;AAE9C,WAAK,cAAL,CAAoB,MAApB,CAA2B,MAA3B;AACH,KAJM,MAIA,IAAI,KAAK,UAAT,EAAqB;AACxB,WAAK,cAAL,CAAoB,KAApB;AACA,WAAK,cAAL,CAAoB,MAApB,CAA2B,MAA3B;AACH,KAHM,MAGA;AACH,WAAK,cAAL,CAAoB,MAApB,CAA2B,MAA3B;AACH;;AAED,SAAK,eAAL,CAAqB,MAArB;AACA,SAAK,iBAAL;AACH;;AAED,yBAAuB,CAAC,MAAD,EAAuB,QAAvB,EAA0C,OAA1C,EAA0D;AAC7E,QAAI,QAAQ,IAAI,KAAK,QAArB,EAA+B;AAC3B,WAAK,kBAAL,CAAwB,MAAxB;AACH,KAFD,MAEO,IAAI,OAAJ,EAAa;AAChB,UAAI,CAAC,KAAK,eAAL,CAAqB,MAArB,CAAL,EAAmC;AAAE;AAAS;AACjD,KAFM,MAEA,IAAI,KAAK,UAAT,EAAqB;AACxB,WAAK,OAAL,CAAa,OAAb,CAAsB,IAAD,IAAU,IAAI,CAAC,WAAL,CAAiB,KAAjB,CAA/B;AACA,YAAM,CAAC,WAAP,CAAmB,IAAnB;AAEA,WAAK,eAAL,CAAqB,MAArB;AACA,WAAK,iBAAL;AACH;AACJ;;AAED,oBAAkB,CAAC,MAAD,EAAqB;AACnC,UAAM,mBAAmB,GAAG,MAAM,CAAC,QAAnC;AAEA,QAAI,SAAS,GAAG,KAAK,UAAL,CAAgB,uBAAhC;AACA,QAAI,OAAO,GAAG,KAAK,UAAL,CAAgB,uBAAhB,GAA0C,KAAK,UAAL,CAAgB,eAAxE;;AAEA,QAAI,OAAO,KAAK,SAAhB,EAA2B;AAAE;AAAS;;AAEtC,QAAI,SAAS,GAAG,OAAhB,EAAyB;AACrB,OAAC,SAAD,EAAY,OAAZ,IAAuB,CAAC,OAAD,EAAU,SAAV,CAAvB;AACH;;AAED,SAAK,OAAL,CACK,OADL,GAEK,KAFL,CAEW,SAFX,EAEsB,OAAO,GAAG,CAFhC,EAGK,MAHL,CAGa,IAAD,IAAU,CAAC,IAAI,CAAC,QAH5B,EAIK,OAJL,CAIc,cAAD,IAAe;AACpB,YAAM,oBAAoB,GAAG,cAAc,KAAK,KAAK,UAAL,CAAgB,UAAhE;;AAEA,UAAI,oBAAoB,IAAI,cAAc,CAAC,QAAvC,IAAmD,KAAK,cAA5D,EAA4E;AAAE;AAAS;;AAEvF,oBAAc,CAAC,WAAf,CAA2B,CAAC,mBAA5B;AACH,KAVL;AAWH,GAxPwD;;;AA2PzD,YAAU,CAAC,MAAD,EAAiB;AACvB,SAAK,MAAL,GAAc,MAAd;;AAEA,QAAI,KAAK,OAAT,EAAkB;AACd,WAAK,oBAAL,CAA0B,MAAM,IAAI,EAApC;AACH;AACJ,GAjQwD;;;AAoQzD,kBAAgB,CAAC,EAAD,EAAyB;AACrC,SAAK,QAAL,GAAgB,EAAhB;AACH,GAtQwD;;;AAyQzD,mBAAiB,CAAC,EAAD,EAAe;AAC5B,SAAK,SAAL,GAAiB,EAAjB;AACH,GA3QwD;;;AA8QzD,kBAAgB,CAAC,UAAD,EAAoB;AAChC,QAAI,KAAK,OAAT,EAAkB;AACd,WAAK,OAAL,CAAa,OAAb,CAAsB,MAAD,IAAY,MAAM,CAAC,QAAP,GAAkB,UAAnD;AACH;AACJ;;AAED,yBAAuB;AACnB,WAAO,KAAK,OAAL,CAAa,MAAb,CAAqB,MAAD,IAAY,MAAM,CAAC,QAAvC,EAAiD,GAAjD,CAAsD,MAAD,IAAY,MAAM,CAAC,KAAxE,CAAP;AACH,GAtRwD;;;AAyRzD,qBAAmB;AACf,UAAM,YAAY,GAAG,KAAK,UAAL,CAAgB,eAArC;;AAEA,QAAI,YAAY,IAAI,IAAhB,IAAwB,KAAK,YAAL,CAAkB,YAAlB,CAA5B,EAA6D;AACzD,YAAM,aAAa,GAAiB,KAAK,OAAL,CAAa,OAAb,GAAuB,YAAvB,CAApC;;AAEA,UAAI,aAAa,IAAI,KAAK,eAAL,CAAqB,aAArB,CAArB,EAA0D;AACtD,qBAAa,CAAC,MAAd,GADsD;;AAItD,aAAK,eAAL,CAAqB,aAArB;AACH;AACJ;AACJ;;AAED,iBAAe,CAAC,UAAD,EAAyB;AACpC,WAAO,EAAE,KAAK,cAAL,IAAuB,KAAK,cAAL,CAAoB,QAApB,CAA6B,MAA7B,KAAwC,CAA/D,IAAoE,UAAU,CAAC,QAAjF,CAAP;AACH;;AAED,WAAS;AACL,WAAO,KAAK,UAAL,CAAgB,aAAhB,CAA8B,cAA9B,GAA+C,CAA/C,EAAkD,MAAzD;AACH,GA9SwD;;;AAqTzD,sBAAoB,CAAC,MAAD,EAAqB;AACrC,QAAI,MAAM,CAAC,QAAX,EAAqB;AACjB,YAAM,WAAW,GAAG,KAAK,cAAL,CAAoB,MAApB,CAApB,CADiB;;AAIjB,UAAI,WAAW,GAAG,CAAlB,EAAqB;AACjB,aAAK,UAAL,CAAgB,qBAAhB;AACH,OAFD,MAEO,IAAI,WAAW,KAAK,CAAhB,IAAqB,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA/C,EAAkD;AACrD,aAAK,UAAL,CAAgB,iBAAhB;AACH;AACJ;AACJ;;AAED,WAAS,CAAC,KAAD,EAAqB;;AAE1B,UAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AAEA,QAAI,CAAC,2DAAD,EAAQ,2DAAR,EAAe,gEAAf,EAA2B,iEAA3B,EAAwC,QAAxC,CAAiD,OAAjD,KAA6D,4EAAkB,CAAC,KAAD,CAAnF,EAA4F;AACxF,WAAK,CAAC,cAAN;AACH;;AAED,QAAI,KAAK,QAAL,IAAiB,qEAAW,CAAC,KAAD,CAAhC,EAAyC;AACrC,WAAK,gBAAL;AACA,WAAK,CAAC,cAAN;AAEA;AACH,KALD,MAKO,IAAI,gEAAM,CAAC,KAAD,CAAV,EAAmB;AACtB,WAAK,gBAAL;AACA,WAAK,CAAC,cAAN;AAEA;AACH,KALM,MAKA,IAAI,CAAC,2DAAD,EAAQ,2DAAR,EAAe,QAAf,CAAwB,OAAxB,CAAJ,EAAsC;AACzC,WAAK,mBAAL;AAEA;AACH,KAJM,MAIA,IAAI,OAAO,KAAK,yDAAhB,EAAqB;AACxB,WAAK,UAAL,CAAgB,MAAhB,CAAuB,IAAvB;AAEA;AACH,KAJM,MAIA,IAAI,OAAO,KAAK,gEAAhB,EAA4B;AAC/B,WAAK,UAAL,CAAgB,iBAAhB;AACH,KAFM,MAEA,IAAI,OAAO,KAAK,8DAAhB,EAA0B;AAC7B,WAAK,UAAL,CAAgB,qBAAhB;AACH,KAFM,MAEA,IAAI,OAAO,KAAK,0DAAhB,EAAsB;AACzB,WAAK,UAAL,CAAgB,kBAAhB;AACH,KAFM,MAEA,IAAI,OAAO,KAAK,yDAAhB,EAAqB;AACxB,WAAK,UAAL,CAAgB,iBAAhB;AACH,KAFM,MAEA,IAAI,OAAO,KAAK,6DAAhB,EAAyB;AAC5B,WAAK,UAAL,CAAgB,yBAAhB;AACH,KAFM,MAEA,IAAI,OAAO,KAAK,+DAAhB,EAA2B;AAC9B,WAAK,UAAL,CAAgB,qBAAhB;AACH;;AAED,QAAI,KAAK,UAAL,CAAgB,UAApB,EAAgC;AAC5B,WAAK,uBAAL,CACI,KAAK,UAAL,CAAgB,UADpB,EAEI,wEAAc,CAAC,KAAD,EAAQ,UAAR,CAFlB,EAGI,wEAAc,CAAC,KAAD,EAAQ,SAAR,CAHlB;AAKH;AACJ,GAjXwD;;;AAoXzD,mBAAiB;AACb,QAAI,KAAK,OAAT,EAAkB;AACd,YAAM,KAAK,GAAG,KAAK,uBAAL,EAAd;AACA,WAAK,QAAL,CAAc,KAAd;AACA,WAAK,MAAL,GAAc,KAAd;AACH;AACJ,GA1XwD;;;AA6XzD,iBAAe,CAAC,MAAD,EAAqB;AAChC,SAAK,eAAL,CAAqB,IAArB,CAA0B,IAAI,qBAAJ,CAA0B,IAA1B,EAAgC,MAAhC,CAA1B;AACH;;AAES,gBAAc;AACpB,SAAK,SAAL,GAAiB,KAAK,YAAL,KAAsB,KAAK,OAAL,CAAa,MAAb,KAAwB,CAAxB,GAA4B,CAAC,CAA7B,GAAiC,CAAvD,CAAjB;AACH;;AAEO,sBAAoB;;;AACxB,eAAK,SAAL,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE,IAAF,CAAO,KAAK,UAAL,CAAgB,UAAhB,CAA4B,KAAnC,CAAd;AACH;;AAEO,cAAY;AAChB,SAAK,iBAAL;AACA,SAAK,oBAAL;AACH;;AAEO,mBAAiB;AACrB,QAAI,KAAK,uBAAT,EAAkC;AAC9B,WAAK,uBAAL,CAA6B,WAA7B;AACA,WAAK,uBAAL,GAA+B,IAA/B;AACH;;AAED,QAAI,KAAK,sBAAT,EAAiC;AAC7B,WAAK,sBAAL,CAA4B,WAA5B;AACA,WAAK,sBAAL,GAA8B,IAA9B;AACH;AACJ;;AAEO,sBAAoB;AACxB,SAAK,uBAAL,GAA+B,KAAK,kBAAL,CAC1B,SAD0B,CACf,KAAD,IAAM;AACb,YAAM,KAAK,GAAW,KAAK,OAAL,CAAa,OAAb,GAAuB,OAAvB,CAA+B,KAAK,CAAC,MAArC,CAAtB;;AAEA,UAAI,KAAK,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC1B,aAAK,UAAL,CAAgB,gBAAhB,CAAiC,KAAjC;AACH;AACJ,KAP0B,CAA/B;AASA,SAAK,sBAAL,GAA8B,KAAK,iBAAL,CACzB,SADyB,CACf,MAAM,KAAK,IAAL,EADS,CAA9B;AAEH;;;;AAGO,kBAAgB;AACpB,WAAO,KAAK,OAAL,CAAa,IAAb,CAAmB,MAAD,IAAY,MAAM,CAAC,QAArC,CAAP;AACH,GA3awD;;;AA8ajD,kBAAgB,CAAC,KAAD,EAAc;AAClC,WAAO,KAAK,OAAL,CAAa,IAAb,CAAmB,MAAD,IAAY,MAAM,CAAC,KAAP,KAAiB,KAA/C,CAAP;AACH,GAhbwD;;;AAmbjD,sBAAoB,CAAC,MAAD,EAAiB;AACzC,SAAK,OAAL,CAAa,OAAb,CAAsB,MAAD,IAAY,MAAM,CAAC,WAAP,CAAmB,KAAnB,CAAjC;AAEA,UAAM,CACD,GADL,CACU,KAAD,IAAW,KAAK,gBAAL,CAAsB,KAAtB,CADpB,EAEK,MAFL,CAEY,OAFZ,EAGK,OAHL,CAGc,MAAD,IAAY,MAAO,CAAC,WAAR,CAAoB,IAApB,CAHzB;AAIH;;;;;;;;AAOO,cAAY,CAAC,KAAD,EAAc;AAC9B,WAAO,KAAK,IAAI,CAAT,IAAc,KAAK,GAAG,KAAK,OAAL,CAAa,MAA1C;AACH,GAncwD;;;AAscjD,gBAAc,CAAC,MAAD,EAAqB;AACvC,WAAO,KAAK,OAAL,CAAa,OAAb,GAAuB,OAAvB,CAA+B,MAA/B,CAAP;AACH;;AAKO,kBAAgB;AACpB,UAAM,eAAe,GAAG,KAAK,OAAL,CACnB,MADmB,CACX,MAAD,IAAY,CAAC,MAAM,CAAC,QADR,CAAxB;AAGA,mBAAe,CACd,OADD,CACU,MAAD,IAAY,MAAM,CAAC,WAAP,CAAmB,IAAnB,CADrB;AAGA,SAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAI,oBAAJ,CAAyB,IAAzB,EAA+B,eAA/B,CAAtB;AACH;;AAEO,kBAAgB;AACpB,QAAI,KAAK,MAAL,CAAY,SAAZ,CAAsB,MAA1B,EAAkC;AAC9B,WAAK,MAAL,CAAY,IAAZ,CAAiB,IAAI,eAAJ,CAAoB,IAApB,EAA0B,KAAK,UAAL,CAAgB,UAA1C,CAAjB;AACH,KAFD,MAEO;AACH,WAAK,oBAAL;AACH;AACJ;;AA7dwD;;;;;mBAAhD,iFAAe,uPAqFT,6EAAU;;;;;;QArFhB;;;;6EAtBC;;;;;;;;;;;;;;eAsBD;;eAAA;;;;;;;;;;;;;;;;;;;;;;8EAHE,CAAC,gCAAD;;;;;;;;;;;;;;;gEAdA;;;;;;;;;;;;;qHAiBF,iBAAe;UAzB3B,oDAyB2B;WAzBjB;AACP,cAAQ,EAAE,iBADH;AAEP,cAAQ,EAAE,mBAFH;AAGP,cAAQ,EAAE;;;;;AAKC,eARJ;AASP,eAAS,EAAE,CAAC,aAAD,CATJ;AAUP,qBAAe,EAAE,yEAVV;AAWP,mBAAa,EAAE,iEAXR;AAYP,YAAM,EAAE,CAAC,UAAD,CAZD;AAaP,UAAI,EAAE;AACF,aAAK,EAAE,mBADL;AAGF,2BAAmB,IAHjB;AAIF,2BAAmB,kBAJjB;AAMF,qBAAa,mBANX;AAOF,2BAAmB;AAPjB,OAbC;AAsBP,eAAS,EAAE,CAAC,gCAAD,CAtBJ;AAuBP,yBAAmB,EAAE;AAvBd;AAyBiB;;;;;;;;cAqFnB;eAAU;;;;;cACV,mDAAQ;;;;AAjFyC,WAAO;YAA5D,0DAA4D;aAA5C,cAAc;AAAE,mBAAW,EAAE;AAAf;AAA8B;AAE1C,eAAW;YAA7B,iDAAM;AAAuB;AAEX,UAAM;YAAxB,iDAAM;AAAkB;AAGrB,cAAU;YADb,gDAAK;AACQ;AAWV,kBAAc;YADjB,gDAAK;AACY;AAgBT,cAAU;YAAlB,gDAAK;AAAa;AAGf,YAAQ;YADX,gDAAK;AACM;AAkBO,mBAAe;YAAjC,iDAAM;AAA2B;AAiDzB,eAAW;YAAnB,gDAAK;AAAc;;MEvdxB;;;MAgBa,OAAM;;;;;mBAAN;;;;;;QALC;;;;;;;;;gEAAA;;;;;;;;;qHAKD,QAAM;UARlB,oDAQkB;WARR;AACP,cAAQ,EAAE,SADH;AAEP,UAAI,EAAE;AAAE,aAAK,EAAE;AAAT,OAFC;AAGP,cAAQ,EAAE,2BAHH;AAIP,eAAS,EAAE,CAAC,aAAD,CAJJ;AAKP,qBAAe,EAAE,yEALV;AAMP,mBAAa,EAAE,iEAAsB;AAN9B;AAQQ;;;MAeN,WAAU;AAGnB,cAAoB,UAApB,EAA0C;AAAtB;AAA0B;;AAE9C,oBAAkB;;AAEd,QAAI,iEAAJ,CAAiB,KAAK,KAAtB,EAA6B,KAAK,UAAlC;AACH;;AAED,aAAW;AACP,SAAK,UAAL,CAAgB,aAAhB,CAA8B,SAA9B,CAAwC,GAAxC,CAA4C,YAA5C;AACH;;AAED,YAAU;AACN,SAAK,UAAL,CAAgB,aAAhB,CAA8B,SAA9B,CAAwC,MAAxC,CAA+C,YAA/C;AACH;;AAED,gBAAc;AACV,WAAO,KAAK,UAAL,CAAgB,aAAvB;AACH;;AApBkB;;;;;mBAAV,4EAAU;;;;;;QAAV;;;;6EACQ;;;;;;;;;;;;;eADR;;eAAA;;;;;;;;;;;gEC/Bb;kEAAA;gEAAA;gEAAA;gEAAA;;;;;;;;qHD+Ba,YAAU;UAZtB,oDAYsB;WAZZ;AACP,cAAQ,EAAE,+BADH;AAEP,UAAI,EAAE;AACF,aAAK,EAAE,cADL;AAEF,mBAAW,eAFT;AAGF,kBAAU;AAHR,OAFC;AAOP,iBAAW,EAAE,kBAPN;AAQP,mBAAa,EAAE,iEARR;AASP,yBAAmB,EAAE,KATd;AAUP,qBAAe,EAAE,yEAA8B;AAVxC;AAYY;;;;;AACM,SAAK;YAA7B,0DAA6B;aAAb;AAAa;;;;MEDrB,aAAY;;;;;mBAAZ;;;;;;QANL;;;;aAMK;YArBA,CACL,yDADK,EAEL,0DAFK,EAGL,2EAHK,EAIL,iEAJK,EAKL,mEALK,GAYL;;;;qHASK,cAAY;UAtBxB,mDAsBwB;WAtBf;AACN,aAAO,EAAE,CACL,yDADK,EAEL,0DAFK,EAGL,2EAHK,EAIL,iEAJK,EAKL,mEALK,CADH;AAQN,aAAO,EAAE,CACL,MADK,EAEL,eAFK,EAGL,UAHK,EAIL,YAJK,EAKL,mEALK,CARH;AAeN,kBAAY,EAAE,CACV,MADU,EAEV,eAFU,EAGV,UAHU,EAIV,YAJU;AAfR;AAsBe;;AC/BzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAsC;AACS;AACX;AACgB;AACf;AACQ;AACK;AACa;AACR;AACT;AACS;AACN;AACY;AACf;;AAE9C,sEAAsE;AACtE,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,uDAAY;AAChB,IAAI,0DAAe;AACnB,EAAE;AACF;AACA,IAAI,2DAAgB;AACpB,gBAAgB,yDAAc;AAC9B,IAAI,oEAAyB;AAC7B,IAAI,uDAAY;AAChB,IAAI,gEAAqB;AACzB,IAAI,uDAAY;AAChB,IAAI,wDAAa;AACjB;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,6CAA6C,+DAAoB,GAAG,gYAAgY;AACpc,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,iHAAiH,+BAA+B;AACrK,QAAQ,wDAAa;AACrB,QAAQ,0DAAe;AACvB,QAAQ,uDAAY;AACpB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa,YAAY,6DAAkB;AACnD,QAAQ,uDAAY;AACpB,QAAQ,gEAAqB;AAC7B,OAAO,eAAe,oEAAkB,EAAE,2DAAkB,EAAE,mDAAU,EAAE,oDAAU,EAAE,mEAAa,EAAE,uEAAiB,EAAE,iEAAe,EAAE,4EAA0B,EAAE,wEAAmB,EAAE,0EAAoB,iBAAiB;AAC/N,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;;AAEtB,8EAA8E;AAC9E,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,EAAE;AACF;AACA,IAAI,wDAAa;AACjB,IAAI,uDAAY;AAChB,IAAI,gEAAqB;AACzB;AACA,6DAA6D;AAC7D,IAAI,4DAAiB;AACrB,IAAI,wDAAa;AACjB,IAAI,0DAAe;AACnB,EAAE;AACF;AACA,IAAI,wDAAa;AACjB,IAAI,uDAAY;AAChB,IAAI,wDAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE,sBAAsB,wCAAwC;AAC9D,sBAAsB;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sBAAsB,4CAA4C;AAClE,sBAAsB,0CAA0C;AAChE,sBAAsB;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,sBAAsB,gDAAgD;AACtE,sBAAsB,wCAAwC;AAC9D,sBAAsB;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,uCAAuC,+DAAoB,GAAG,ySAAyS;AACvW,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa;AACrB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,OAAO,eAAe,oEAAkB,EAAE,oDAAU,EAAE,iEAAe,EAAE,+DAAa,iBAAiB;AACrG,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF,iDAAiD,+DAAoB,GAAG,idAAid;AACzhB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,qHAAqH,+BAA+B;AACzK,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,0DAAe;AACvB,QAAQ,uDAAY;AACpB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,gEAAqB;AAC7B,OAAO,eAAe,oEAAkB,EAAE,2DAAkB,EAAE,mDAAU,EAAE,iEAAe,iBAAiB;AAC1G,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF,iDAAiD,+DAAoB,GAAG,idAAid;AACzhB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,qHAAqH,+BAA+B;AACzK,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,0DAAe;AACvB,QAAQ,uDAAY;AACpB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,gEAAqB;AAC7B,OAAO,eAAe,oEAAkB,EAAE,2DAAkB,EAAE,mDAAU,EAAE,iEAAe,iBAAiB;AAC1G,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,yCAAyC,+DAAoB,GAAG,gaAAga;AAChe,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,6GAA6G,+BAA+B;AACjK,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,0DAAe;AACvB,QAAQ,uDAAY;AACpB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,gEAAqB;AAC7B,OAAO,eAAe,oEAAkB,EAAE,2DAAkB,EAAE,mDAAU,EAAE,iEAAe,iBAAiB;AAC1G,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,wCAAwC,8DAAmB,GAAG,0BAA0B;AACxF,wCAAwC,8DAAmB,GAAG;AAC9D,YAAY,yDAAY;AACxB,YAAY,uDAAW;AACvB,YAAY,iEAAY;AACxB,YAAY,yEAAgB;AAC5B,YAAY,uEAAe;AAC3B,YAAY,iEAAY;AACxB,YAAY;AACZ,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,mDAAQ;AACtB;AACA;AACA,oBAAoB,yDAAY;AAChC,oBAAoB,uDAAW;AAC/B,oBAAoB,iEAAY;AAChC,oBAAoB,yEAAgB;AACpC,oBAAoB,uEAAe;AACnC,oBAAoB,iEAAY;AAChC;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAqB,uBAAuB;AAC9G;AACA;AACA;AACA,4CAA4C,yDAAY;AACxD,QAAQ,uDAAW;AACnB,QAAQ,iEAAY;AACpB,QAAQ,yEAAgB;AACxB,QAAQ,uEAAe;AACvB,QAAQ,iEAAY;AACpB;AACA;AACA;AACA,kCAAkC,IAAI;;AAEtC;AACA;AACA;;AAEyJ","sources":["./packages/mosaic/list/list-selection.component.ts","./packages/mosaic/list/list-option.html","./packages/mosaic/list/list.component.ts","./packages/mosaic/list/list-item.html","./packages/mosaic/list/list.module.ts","./packages/mosaic/list/ptsecurity-mosaic-list.ts","./node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-list.js"],"sourcesContent":["/* tslint:disable:no-empty */\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone,\n    Optional,\n    ContentChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    isCopy,\n    isSelectAll,\n    isVerticalMovement,\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex,\n    MultipleMode,\n    McOptgroup,\n    MC_OPTION_ACTION_PARENT,\n    McOptionActionComponent\n} from '@ptsecurity/mosaic/core';\nimport { McDropdownTrigger } from '@ptsecurity/mosaic/dropdown';\nimport { McTooltipTrigger } from '@ptsecurity/mosaic/tooltip';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    templateUrl: './list-option.html',\n    host: {\n        class: 'mc-list-option',\n\n        '[class.mc-selected]': 'selected',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-focused]': 'hasFocus',\n\n        '[class.mc-action-button-focused]': 'actionButton?.active',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(focusin)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)',\n        '(keydown)': 'onKeydown($event)'\n    },\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_OPTION_ACTION_PARENT, useExisting: McListOption }\n    ]\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChild(McOptionActionComponent) actionButton: McOptionActionComponent;\n    @ContentChild(McTooltipTrigger) tooltipTrigger: McTooltipTrigger;\n    @ContentChild(McDropdownTrigger) dropdownTrigger: McDropdownTrigger;\n\n    @ViewChild('text', { static: false }) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after';\n\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     */\n    private inputsInitialized = false;\n\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this.selected && newValue !== this.value && this.inputsInitialized) {\n            this.selected = false;\n        }\n\n        this._value = newValue;\n    }\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        const listSelectionDisabled = this.listSelection && this.listSelection.disabled;\n        const groupDisabled = this.group && this.group.disabled;\n\n        return listSelectionDisabled || groupDisabled || this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngOnInit() {\n        const list = this.listSelection;\n\n        if (list._value && list._value.some((value) => list.compareWith(value, this._value))) {\n            this.setSelected(true);\n        }\n\n        const wasSelected = this._selected;\n\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this.changeDetector.markForCheck();\n            }\n        });\n\n        this.inputsInitialized = true;\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setSelectedOptionsByClick(\n            this, hasModifierKey($event, 'shiftKey'), hasModifierKey($event, 'ctrlKey')\n        );\n    }\n\n    onKeydown($event) {\n        if (!this.actionButton) { return; }\n\n        if ($event.keyCode === TAB && !$event.shiftKey && !this.actionButton.hasFocus) {\n            this.actionButton.focus();\n\n            $event.preventDefault();\n        }\n    }\n\n    focus() {\n        if (this.disabled || this.hasFocus || this.actionButton?.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetector.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    if (this.actionButton?.hasFocus) { return; }\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\nexport class McListSelectAllEvent<T> {\n    constructor(public source: McListSelection, public options: T[]) {}\n}\n\nexport class McListCopyEvent<T> {\n    constructor(public source: McListSelection, public option: T) {}\n}\n\nexport class McListSelectionBase {\n    constructor(public elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: `\n        <div [attr.tabindex]=\"tabIndex\"\n             (focus)=\"focus()\"\n             (blur)=\"blur()\">\n            <ng-content></ng-content>\n        </div>`,\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-list-selection',\n\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    @ContentChildren(McListOption, { descendants: true }) options: QueryList<McListOption>;\n\n    @Output() readonly onSelectAll = new EventEmitter<McListSelectAllEvent<McListOption>>();\n\n    @Output() readonly onCopy = new EventEmitter<McListCopyEvent<McListOption>>();\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    multipleMode: MultipleMode | null;\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    userTabIndex: number | null = null;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // tslint:disable-next-line:orthodox-getter-and-setter naming-convention\n    _value: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode,\n        @Optional() private clipboard: Clipboard\n    ) {\n        super(elementRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n    @Input() compareWith: (o1: any, o2: any) => boolean = (a1, a2) => a1 === a2;\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this._value) {\n            this.setOptionsFromValues(this._value);\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOptionsByClick(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option);\n        } else {\n            this.selectionModel.toggle(option);\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptionsByKey(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.options.forEach((item) => item.setSelected(false));\n            option.setSelected(true);\n\n            this.emitChangeEvent(option);\n            this.reportValueChange();\n        }\n    }\n\n    setSelectedOptions(option: McListOption): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.options\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        this._value = values;\n\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        if ([SPACE, ENTER, LEFT_ARROW, RIGHT_ARROW].includes(keyCode) || isVerticalMovement(event)) {\n            event.preventDefault();\n        }\n\n        if (this.multiple && isSelectAll(event)) {\n            this.selectAllOptions();\n            event.preventDefault();\n\n            return;\n        } else if (isCopy(event)) {\n            this.copyActiveOption();\n            event.preventDefault();\n\n            return;\n        } else if ([SPACE, ENTER].includes(keyCode)) {\n            this.toggleFocusedOption();\n\n            return;\n        } else if (keyCode === TAB) {\n            this.keyManager.tabOut.next();\n\n            return;\n        } else if (keyCode === DOWN_ARROW) {\n            this.keyManager.setNextItemActive();\n        } else if (keyCode === UP_ARROW) {\n            this.keyManager.setPreviousItemActive();\n        } else if (keyCode === HOME) {\n            this.keyManager.setFirstItemActive();\n        } else if (keyCode === END) {\n            this.keyManager.setLastItemActive();\n        } else if (keyCode === PAGE_UP) {\n            this.keyManager.setPreviousPageItemActive();\n        } else if (keyCode === PAGE_DOWN) {\n            this.keyManager.setNextPageItemActive();\n        }\n\n        if (this.keyManager.activeItem) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem as McListOption,\n                hasModifierKey(event, 'shiftKey'),\n                hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            const value = this.getSelectedOptionValues();\n            this.onChange(value);\n            this._value = value;\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.userTabIndex || (this.options.length === 0 ? -1 : 0);\n    }\n\n    private onCopyDefaultHandler(): void {\n        this.clipboard?.copy(this.keyManager.activeItem!.value);\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n\n    private selectAllOptions() {\n        const optionsToSelect = this.options\n            .filter((option) => !option.disabled);\n\n        optionsToSelect\n        .forEach((option) => option.setSelected(true));\n\n        this.onSelectAll.emit(new McListSelectAllEvent(this, optionsToSelect));\n    }\n\n    private copyActiveOption() {\n        if (this.onCopy.observers.length) {\n            this.onCopy.emit(new McListCopyEvent(this, this.keyManager.activeItem as McListOption));\n        } else {\n            this.onCopyDefaultHandler();\n        }\n    }\n}\n","<mc-pseudo-checkbox\n    *ngIf=\"showCheckbox\"\n    [state]=\"selected ? 'checked' : 'unchecked'\"\n    [disabled]=\"disabled\">\n</mc-pseudo-checkbox>\n\n<div class=\"mc-list-text\" #text>\n    <ng-content></ng-content>\n</div>\n\n<ng-content select=\"mc-option-action\"></ng-content>\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList {}\n\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterContentInit() {\n        // tslint:disable-next-line:no-unused-expression\n        new McLineSetter(this.lines, this.elementRef);\n    }\n\n    handleFocus() {\n        this.elementRef.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this.elementRef.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n","<ng-content select=\"[mc-list-icon], [mcListIcon]\"></ng-content>\n\n<div class=\"mc-list-text\">\n    <ng-content select=\"[mc-line], [mcLine]\"></ng-content>\n</div>\n\n<ng-content></ng-content>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McLineModule, McOptionModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule,\n        McOptionModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McOptionModule\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption\n    ]\n})\nexport class McListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4 from '@ptsecurity/mosaic/dropdown';\nimport { McDropdownModule } from '@ptsecurity/mosaic/dropdown';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport * as i1 from '@ptsecurity/mosaic/list';\nimport { McListModule } from '@ptsecurity/mosaic/list';\nimport * as i6 from '@ptsecurity/mosaic/tooltip';\nimport { McToolTipModule } from '@ptsecurity/mosaic/tooltip';\nimport * as i5 from '@ptsecurity/mosaic/core';\n\nfunction ListActionButtonExample_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"mc-option-action\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(6);\n    i0.ɵɵpropertyInterpolate1(\"value\", \"Item \", item_r2, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Item \", item_r2, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mcPlacement\", \"right\")(\"mcDropdownTriggerFor\", _r1);\n} }\nconst _c0 = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9]; };\n/**\n * @title list ActionButton\n */\nclass ListActionButtonExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListActionButtonExample.ɵfac = function ListActionButtonExample_Factory(t) { return new (t || ListActionButtonExample)(); };\nListActionButtonExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListActionButtonExample, selectors: [[\"list-action-button-example\"]], decls: 13, vars: 5, consts: [[3, \"autoSelect\", \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"dropdown\", \"\"], [\"mc-dropdown-item\", \"\"], [3, \"value\"], [\"mcTooltip\", \"Tooltip text\", 3, \"mcPlacement\", \"mcDropdownTriggerFor\"]], template: function ListActionButtonExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListActionButtonExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵtemplate(1, ListActionButtonExample_mc_list_option_1_Template, 3, 4, \"mc-list-option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-dropdown\", null, 2);\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵtext(8, \"item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵtext(10, \"item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 3);\n        i0.ɵɵtext(12, \"item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"autoSelect\", false)(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i4.McDropdown, i4.McDropdownItem, i1.McListOption, i5.McOptionActionComponent, i6.McTooltipTrigger, i4.McDropdownTrigger], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListActionButtonExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-action-button-example',\n                templateUrl: 'list-action-button-example.html',\n                styleUrls: ['list-action-button-example.css']\n            }]\n    }], null, null); })();\n\nfunction ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pokemon_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pokemon_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r3.viewValue, \" \");\n} }\nfunction ListGroupsExample_mc_optgroup_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mc-optgroup\", 2);\n    i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_mc_list_option_1_Template, 2, 2, \"mc-list-option\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r1.name)(\"disabled\", group_r1.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r1.pokemon);\n} }\n/**\n * @title Basic list\n */\nclass ListGroupsExample {\n    constructor() {\n        this.pokemonTypes = [\n            {\n                name: 'Grass',\n                pokemon: [\n                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n                    { value: 'oddish-1', viewValue: 'Oddish' },\n                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n                ]\n            },\n            {\n                name: 'Water',\n                disabled: true,\n                pokemon: [\n                    { value: 'squirtle-3', viewValue: 'Squirtle' },\n                    { value: 'psyduck-4', viewValue: 'Psyduck' },\n                    { value: 'horsea-5', viewValue: 'Horsea' }\n                ]\n            },\n            {\n                name: 'Fire',\n                pokemon: [\n                    { value: 'charmander-6', viewValue: 'Charmander' },\n                    { value: 'vulpix-7', viewValue: 'Vulpix' },\n                    { value: 'flareon-8', viewValue: 'Flareon' }\n                ]\n            },\n            {\n                name: 'Psychic',\n                pokemon: [\n                    { value: 'mew-9', viewValue: 'Mew' },\n                    { value: 'mewtwo-10', viewValue: 'Mewtwo' }\n                ]\n            }\n        ];\n    }\n}\nListGroupsExample.ɵfac = function ListGroupsExample_Factory(t) { return new (t || ListGroupsExample)(); };\nListGroupsExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListGroupsExample, selectors: [[\"list-groups-example\"]], decls: 4, vars: 1, consts: [[3, \"label\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"mime-11\"], [3, \"label\", \"disabled\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function ListGroupsExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\");\n        i0.ɵɵtemplate(1, ListGroupsExample_mc_optgroup_1_Template, 2, 3, \"mc-optgroup\", 0);\n        i0.ɵɵelementStart(2, \"mc-list-option\", 1);\n        i0.ɵɵtext(3, \"Mr. Mime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemonTypes);\n    } }, directives: [i1.McListSelection, i3.NgForOf, i1.McListOption, i5.McOptgroup], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListGroupsExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-groups-example',\n                templateUrl: 'list-groups-example.html',\n                styleUrls: ['list-groups-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleCheckboxExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleCheckboxExample.ɵfac = function ListMultipleCheckboxExample_Factory(t) { return new (t || ListMultipleCheckboxExample)(); };\nListMultipleCheckboxExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleCheckboxExample, selectors: [[\"list-multiple-checkbox-example\"]], decls: 24, vars: 2, consts: [[\"multiple\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListMultipleCheckboxExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleCheckboxExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleCheckboxExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-checkbox-example',\n                templateUrl: 'list-multiple-checkbox-example.html',\n                styleUrls: ['list-multiple-checkbox-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListMultipleKeyboardExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListMultipleKeyboardExample.ɵfac = function ListMultipleKeyboardExample_Factory(t) { return new (t || ListMultipleKeyboardExample)(); };\nListMultipleKeyboardExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListMultipleKeyboardExample, selectors: [[\"list-multiple-keyboard-example\"]], decls: 24, vars: 2, consts: [[\"multiple\", \"keyboard\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListMultipleKeyboardExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListMultipleKeyboardExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListMultipleKeyboardExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-multiple-keyboard-example',\n                templateUrl: 'list-multiple-keyboard-example.html',\n                styleUrls: ['list-multiple-keyboard-example.css']\n            }]\n    }], null, null); })();\n\n/**\n * @title Basic list\n */\nclass ListOverviewExample {\n    constructor() {\n        this.selected = [];\n    }\n}\nListOverviewExample.ɵfac = function ListOverviewExample_Factory(t) { return new (t || ListOverviewExample)(); };\nListOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ListOverviewExample, selectors: [[\"list-overview-example\"]], decls: 24, vars: 2, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Item 1\", \"disabled\", \"\"], [\"value\", \"Item 2\"], [\"value\", \"Item 3\"], [\"value\", \"Item 4\"], [\"value\", \"Item 5\"], [\"value\", \"Item 6\"], [\"value\", \"Item 7\"], [\"value\", \"Item 8\"], [\"value\", \"Item 9\"], [\"value\", \"Item 10\"]], template: function ListOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-list-selection\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ListOverviewExample_Template_mc_list_selection_ngModelChange_0_listener($event) { return ctx.selected = $event; });\n        i0.ɵɵelementStart(1, \"mc-list-option\", 1);\n        i0.ɵɵtext(2, \"Item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mc-list-option\", 2);\n        i0.ɵɵtext(4, \"Item 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mc-list-option\", 3);\n        i0.ɵɵtext(6, \"Item 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mc-list-option\", 4);\n        i0.ɵɵtext(8, \"Item 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mc-list-option\", 5);\n        i0.ɵɵtext(10, \"Item 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mc-list-option\", 6);\n        i0.ɵɵtext(12, \"Item 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mc-list-option\", 7);\n        i0.ɵɵtext(14, \"Item 7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mc-list-option\", 8);\n        i0.ɵɵtext(16, \"Item 8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mc-list-option\", 9);\n        i0.ɵɵtext(18, \"Item 9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mc-list-option\", 10);\n        i0.ɵɵtext(20, \"Item 10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(23);\n        i0.ɵɵtextInterpolate1(\"Selected: \", ctx.selected, \"\");\n    } }, directives: [i1.McListSelection, i2.NgControlStatus, i2.NgModel, i1.McListOption], styles: [\"\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'list-overview-example',\n                templateUrl: 'list-overview-example.html',\n                styleUrls: ['list-overview-example.css']\n            }]\n    }], null, null); })();\n\nconst EXAMPLES = [\n    ListOverviewExample,\n    ListMultipleCheckboxExample,\n    ListMultipleKeyboardExample,\n    ListGroupsExample,\n    ListActionButtonExample\n];\nclass ListExamplesModule {\n}\nListExamplesModule.ɵfac = function ListExamplesModule_Factory(t) { return new (t || ListExamplesModule)(); };\nListExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ListExamplesModule });\nListExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McListModule,\n            McDropdownModule,\n            McToolTipModule,\n            McIconModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McListModule,\n                    McDropdownModule,\n                    McToolTipModule,\n                    McIconModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ListExamplesModule, { declarations: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample,\n        ListActionButtonExample], imports: [CommonModule,\n        FormsModule,\n        McListModule,\n        McDropdownModule,\n        McToolTipModule,\n        McIconModule], exports: [ListOverviewExample,\n        ListMultipleCheckboxExample,\n        ListMultipleKeyboardExample,\n        ListGroupsExample,\n        ListActionButtonExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ListActionButtonExample, ListExamplesModule, ListGroupsExample, ListMultipleCheckboxExample, ListMultipleKeyboardExample, ListOverviewExample };\n"],"names":[],"sourceRoot":"webpack:///"}