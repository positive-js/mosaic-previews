{"version":3,"file":"default-dist_mosaic_fesm2020_ptsecurity-mosaic-toggle_mjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIA,YAAY,GAAG,CAAnB;;MAIaC,aAAY;;AAErBC,cAAmBC,WAAnB,EAA0C;AAAvB;AAA2B;;AAFzB,EAKzB;;;MACaC,iBAAiB,GAIJC,sEAAa,CAACC,mEAAU,CAACC,sEAAa,CAACN,YAAD,CAAd,EAA8BO,yEAA9B,CAAX;;MAE1BE,eAAc;;MA+BdC,0BAA0BP,kBAAiB;AAoDpDF;AAEWC,aAFX,EAGYS,aAHZ,EAIYC,kBAJZ,EAIiD;AAE7C,UAAMV,WAAN;AAJO;AACC;AACA;AAnDH,yBAAyC,OAAzC;AAEY,qBAAoB,EAApB;AACK,0BAAgC,IAAhC;AAQjB,gBAAsB,IAAtB;AAgBD,qBAAqB,KAArB;AAcA,oBAAoB,KAApB;AAEW,kBAAuC,IAAIW,uDAAJ,EAAvC;AAEX,oBAAmB,aAAa,EAAEd,YAAY,EAA9C,CAMyC;;AAqDzC,6BAAoB,OAAQ,CAA5B,CArDyC;;;AAwDzC,4BAAoBe,CAAD,IAAO,CAAO,CAAjC;;AApDJ,SAAKC,EAAL,GAAW,KAAKC,QAAhB;;AAEA,SAAKL,aAAL,CAAmBM,OAAnB,CAA2B,KAAKf,WAAL,CAAiBgB,aAA5C,EAA2D,IAA3D;AACH;;AAnDU,MAAPC,OAAO;AACP,WAAO,GAAG,KAAKJ,EAAL,IAAW,KAAKC,QAAQ,QAAlC;AACH;;AAOW,MAARI,QAAQ;AACR,WAAO,KAAKC,SAAZ;AACH;;AAEW,MAARD,QAAQ,CAACE,KAAD,EAAW;AACnB,QAAIA,KAAK,KAAK,KAAKD,SAAnB,EAA8B;AAC1B,WAAKA,SAAL,GAAiBC,KAAjB;;AACA,WAAKV,kBAAL,CAAwBW,YAAxB;AACH;AACJ;;AAIU,MAAPC,OAAO;AACP,WAAO,KAAKC,QAAZ;AACH;;AAGU,MAAPD,OAAO,CAACF,KAAD,EAAe;AACtB,QAAIA,KAAK,KAAK,KAAKG,QAAnB,EAA6B;AACzB,WAAKA,QAAL,GAAgBH,KAAhB;;AACA,WAAKV,kBAAL,CAAwBW,YAAxB;AACH;AACJ;;AAqBDG,aAAW;AACP,SAAKf,aAAL,CAAmBgB,cAAnB,CAAkC,KAAKzB,WAAL,CAAiBgB,aAAnD;AACH;;AAEDU,OAAK;AACD,SAAKjB,aAAL,CAAmBkB,QAAnB,CAA4B,KAAKC,YAAL,CAAkBZ,aAA9C,EAA6D,UAA7D;AACH;;AAEDa,gBAAc;AACV,WAAO,KAAKP,OAAZ;AACH;;AAEDQ,eAAa,CAACC,KAAD,EAAa;AACtBA,SAAK,CAACC,eAAN;AAEA,SAAKC,gBAAL;AACA,SAAKC,eAAL;AACH;;AAEDC,mBAAiB;AACb,SAAKzB,kBAAL,CAAwBW,YAAxB;AACH;;AAEDe,cAAY,CAACL,KAAD,EAAkB;AAC1BA,SAAK,CAACC,eAAN;AACH;;AAEDK,YAAU,CAACjB,KAAD,EAAW;AACjB,SAAKE,OAAL,GAAe,CAAC,CAACF,KAAjB;AACH;;AAEDkB,kBAAgB,CAACC,EAAD,EAAQ;AACpB,SAAKC,gBAAL,GAAwBD,EAAxB;AACH;;AAEDE,mBAAiB,CAACF,EAAD,EAAQ;AACrB,SAAKG,iBAAL,GAAyBH,EAAzB;AACH;;AAEDI,kBAAgB,CAACC,UAAD,EAAoB;AAChC,SAAK1B,QAAL,GAAgB0B,UAAhB;AACH;;AAQOX,kBAAgB;AACpB,SAAKV,QAAL,GAAgB,CAAC,KAAKD,OAAtB;AACA,SAAKoB,iBAAL;AACH;;AAEOR,iBAAe;AACnB,UAAMH,KAAK,GAAG,IAAIxB,cAAJ,EAAd;AACAwB,SAAK,CAACc,MAAN,GAAe,IAAf;AACAd,SAAK,CAACT,OAAN,GAAgB,KAAKA,OAArB;AAEA,SAAKkB,gBAAL,CAAsB,KAAKlB,OAA3B;AACA,SAAKwB,MAAL,CAAYC,IAAZ,CAAiBhB,KAAjB;AACH;;AA9HmD;;;;;;;mBAA3CvB,mBAAAA,+DAAAA,CAAiBwC,qDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA;;;;;;;;QAAjBxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8EAJE,CAAC;AACRyC,WAAO,EAAEC,6DADD;AACoBC,eAAW,EAAEC,yDAAU,CAAC,MAAM5C,iBAAP,CAD3C;AACsE6C,SAAK,EAAE;AAD7E,GAAD;;;;;;;;kECrEf;kEAAA;kEAAA;8DAAA;AAAA;AAAA;AAAA;AAAA;gEAAA;kEAAA;6DAAA;kEAAA;6DAAA;gEAAA;gEAAA;kEAAA;kEAAA;8DAAA;AAAA;AAAA;gEAAA;gEAAA;gEAAA;gEAAA;gEAAA;;;;+DAAA;6DAAA;+DAAA;6DAAA;8DAAA;+DAAA;6DAAA;8DAAA;6DAAA;+DAAA;;;;;;eD8DgB,CACRC,4DAAO,CAAC,QAAD,EAAW,CACdC,0DAAK,CAAC,MAAD,EAAUC,0DAAK,CAAC;AAAEC,UAAI,EAAE;AAAR,KAAD,CAAf,CADS,EAEdF,0DAAK,CAAC,OAAD,EAAUC,0DAAK,CAAC;AAAEC,UAAI,EAAE;AAAR,KAAD,CAAf,CAFS,EAGdC,+DAAU,CAAC,gBAAD,EAAmBC,4DAAO,CAAC,OAAD,CAA1B,CAHI,CAAX,CADC;;;;;;qHAWHnD,mBAAiB;UA1B7BoD,oDA0B6B;;gBAzBhB;AAAWC,gBACX;AAAUC,uBAGHC,yEAA8BC;AAAAC,qBAChCC,iEAAsBC;AAAAC,cAC7B,CAAC,OAAD,EAAU,UAAV;AAAqBC,YACvB;AACFC,aAAK,EAAE,WADL;AAEF,gBAAQ,IAFN;AAGF,qBAAa,IAHX;AAIF,+BAAuB,UAJrB;AAKF,6BAAqB;AALnB;AAMLC,kBACW,CACRjB,4DAAO,CAAC,QAAD,EAAW,CACdC,0DAAK,CAAC,MAAD,EAAUC,0DAAK,CAAC;AAAEC,YAAI,EAAE;AAAR,OAAD,CAAf,CADS,EAEdF,0DAAK,CAAC,OAAD,EAAUC,0DAAK,CAAC;AAAEC,YAAI,EAAE;AAAR,OAAD,CAAf,CAFS,EAGdC,+DAAU,CAAC,gBAAD,EAAmBC,4DAAO,CAAC,OAAD,CAA1B,CAHI,CAAX,CADC;AAMXa,iBACU,CAAC;AACRvB,eAAO,EAAEC,6DADD;AACoBC,mBAAW,EAAEC,yDAAU,CAAC,uBAAD,CAD3C;AACsEC,aAAK,EAAE;AAD7E,OAAD;AAEToB;AAAAC;;AAEwB;;;;;;;;;AAGa9C,gBAAY;YAAlD+C,oDAAkD;aAAxC,SAAS;AAAEC,cAAM,EAAE;AAAV;AAA+B;AAE1CC,iBAAa;YAArBC,gDAAKA;AAAgB;AAEDC,aAAS;YAA7BD,gDAA6B;aAAvB;AAAuB;AACJE,kBAAc;YAAvCF,gDAAuC;aAAjC;AAAiC;AAE/BjE,MAAE;YAAViE,gDAAKA;AAAK;AAMFG,QAAI;YAAZH,gDAAKA;AAAO;AAEJ1D,SAAK;YAAb0D,gDAAKA;AAAQ;AAGV5D,YAAQ;YADX4D,gDAAKA;AACM;AAkBRxD,WAAO;YADVwD,gDAAKA;AACK;AASQhC,UAAM;YAAxBoC,iDAAMA;AAAkB;;;;ME5GhBC,eAAc;;;;;;;mBAAdA;;;;;;;;QAAAA;;;;;;;YAJA,CAACC,yDAAD,EAAeC,yDAAf,EAA2BC,mEAA3B;;;;qHAIAH,gBAAc;UAL1BI,mDAK0B;WALjB;AACNC,aAAO,EAAE,CAACJ,yDAAD,EAAeC,yDAAf,EAA2BC,mEAA3B,CADH;AAENG,aAAO,EAAE,CAACjF,iBAAD,CAFH;AAGNkF,kBAAY,EAAE,CAAClF,iBAAD;AAHR;AAKiB;;ACb3B","sources":["./packages/mosaic/toggle/toggle.component.ts","./packages/mosaic/toggle/toggle.component.html","./packages/mosaic/toggle/toggle.module.ts","./packages/mosaic/toggle/ptsecurity-mosaic-toggle.ts"],"sourcesContent":["import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    // tslint:disable-next-line: naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line: naming-convention\nexport const McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true\n    }]\n})\nexport class McToggleComponent extends McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input', { static: false }) inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    @Input() id: string;\n\n    get inputId(): string {\n        return `${this.id || this.uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    @Output() readonly change: EventEmitter<McToggleChange> = new EventEmitter<McToggleChange>();\n\n    private uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    constructor(\n        // tslint:disable-next-line:naming-convention\n        public _elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(_elementRef);\n\n        this.id =  this.uniqueId;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this.inputElement.nativeElement, 'keyboard');\n    }\n\n    getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    onChangeEvent(event: Event) {\n        event.stopPropagation();\n\n        this.updateModelValue();\n        this.emitChangeEvent();\n    }\n\n    onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private onChangeCallback = (_: any) => {};\n\n    private updateModelValue() {\n        this._checked = !this.checked;\n        this.onTouchedCallback();\n    }\n\n    private emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this.onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","<label [attr.for]=\"inputId\" class=\"mc-toggle-layout\">\n    <div class=\"mc-toggle__container\" [class.left]=\"labelPosition === 'left'\">\n        <input #input\n               type=\"checkbox\"\n               role=\"switch\"\n               class=\"mc-toggle-input cdk-visually-hidden\"\n               [id]=\"inputId\"\n               [checked]=\"checked\"\n               [attr.value]=\"value\"\n               [disabled]=\"disabled\"\n               [attr.name]=\"name\"\n               [tabIndex]=\"tabIndex\"\n               [attr.aria-label]=\"ariaLabel || null\"\n               [attr.aria-labelledby]=\"ariaLabelledby\"\n               [attr.aria-checked]=\"getAriaChecked()\"\n               (click)=\"onInputClick($event)\"\n               (change)=\"onChangeEvent($event)\"/>\n        <div class=\"mc-toggle-bar-container\">\n            <div class=\"mc-toggle__overlay\"></div>\n            <div class=\"mc-toggle-bar\">\n                <div class=\"mc-toggle__circle\" [@switch]=\"checked\"></div>\n            </div>\n        </div>\n        <div class=\"mc-toggle__content\"\n             [class.left]=\"labelPosition === 'left'\"\n             [class.right]=\"labelPosition === 'right'\">\n            <span class=\"mc-toggle-label\" (cdkObserveContent)=\"onLabelTextChange()\">\n                <ng-content></ng-content>\n            </span>\n        </div>\n    </div>\n</label>\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["nextUniqueId","McToggleBase","constructor","_elementRef","McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_focusMonitor","_changeDetectorRef","EventEmitter","_","id","uniqueId","monitor","nativeElement","inputId","disabled","_disabled","value","markForCheck","checked","_checked","ngOnDestroy","stopMonitoring","focus","focusVia","inputElement","getAriaChecked","onChangeEvent","event","stopPropagation","updateModelValue","emitChangeEvent","onLabelTextChange","onInputClick","writeValue","registerOnChange","fn","onChangeCallback","registerOnTouched","onTouchedCallback","setDisabledState","isDisabled","source","change","emit","i0","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","trigger","state","style","left","transition","animate","Component","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","inputs","host","class","animations","providers","template","styles","ViewChild","static","labelPosition","Input","ariaLabel","ariaLabelledby","name","Output","McToggleModule","CommonModule","A11yModule","McCommonModule","NgModule","imports","exports","declarations"],"sourceRoot":"webpack:///"}