{"version":3,"file":"node_modules_ptsecurity_mosaic-examples_fesm2015_ptsecurity-mosaic-examples-mosaic-progress-s-d53605-es2015.js","mappings":"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","sources":["./packages/mosaic/progress-spinner/progress-spinner.component.ts","./packages/mosaic/progress-spinner/progress-spinner.component.html","./packages/mosaic/progress-spinner/progress-spinner.module.ts","./packages/mosaic/progress-spinner/ptsecurity-mosaic-progress-spinner.ts","./node_modules/@ptsecurity/mosaic-examples/fesm2015/ptsecurity-mosaic-examples-mosaic-progress-spinner.js"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McProgressSpinnerMixinBase:\n    CanColorCtor & typeof McProgressSpinnerBase = mixinColor(McProgressSpinnerBase, ThemePalette.Primary);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","<div class=\"mc-progress-spinner__inner\"\n     [ngClass]=\"{'mc-progress-spinner__inner--indeterminate': mode === 'indeterminate'}\">\n    <svg focusable=\"false\"\n         preserveAspectRatio=\"xMidYMid meet\"\n         viewBox=\"0 0 100 100\"\n         class=\"mc-progress-spinner__svg\">\n        <circle cx=\"50%\"\n                cy=\"50%\"\n                r=\"42.5%\"\n                class=\"mc-progress-spinner__circle\"\n                [ngStyle]=\"{'stroke-dashoffset': mode === 'determinate' ? dashOffsetPercent : null}\">\n        </circle>\n    </svg>\n</div>\n\n","import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport * as i1 from '@ptsecurity/mosaic/progress-spinner';\nimport { McProgressSpinnerModule } from '@ptsecurity/mosaic/progress-spinner';\n\n/**\n * @title Indeterminate progress spinner\n */\nclass ProgressSpinnerIndeterminateExample {\n}\nProgressSpinnerIndeterminateExample.ɵfac = function ProgressSpinnerIndeterminateExample_Factory(t) { return new (t || ProgressSpinnerIndeterminateExample)(); };\nProgressSpinnerIndeterminateExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProgressSpinnerIndeterminateExample, selectors: [[\"progress-spinner-indeterminate-example\"]], decls: 4, vars: 3, consts: [[1, \"example-progress-spinner-group\"], [\"mode\", \"indeterminate\", 1, \"example-progress-spinner-element\", 3, \"color\"]], template: function ProgressSpinnerIndeterminateExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"mc-progress-spinner\", 1);\n        i0.ɵɵelement(2, \"mc-progress-spinner\", 1);\n        i0.ɵɵelement(3, \"mc-progress-spinner\", 1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"second\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"error\");\n    } }, directives: [i1.McProgressSpinner], styles: [\".example-progress-spinner-group[_ngcontent-%COMP%]{display:flex}.example-progress-spinner-element[_ngcontent-%COMP%]{margin-right:8px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerIndeterminateExample, [{\n        type: Component,\n        args: [{\n                selector: 'progress-spinner-indeterminate-example',\n                templateUrl: 'progress-spinner-indeterminate-example.html',\n                styleUrls: ['progress-spinner-indeterminate-example.css']\n            }]\n    }], null, null); })();\n\nconst INTERVAL = 300;\nconst STEP = 4;\nconst MAX_PERCENT = 100;\n/**\n * @title Basic progress spinner\n */\nclass ProgressSpinnerOverviewExample {\n    constructor() {\n        this.percent = 0;\n        setInterval(() => this.percent = (this.percent + STEP) % (MAX_PERCENT + STEP), INTERVAL);\n    }\n    ngOnDestroy() {\n        clearInterval(this.intervalId);\n    }\n}\nProgressSpinnerOverviewExample.ɵfac = function ProgressSpinnerOverviewExample_Factory(t) { return new (t || ProgressSpinnerOverviewExample)(); };\nProgressSpinnerOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProgressSpinnerOverviewExample, selectors: [[\"progress-spinner-overview-example\"]], decls: 6, vars: 7, consts: [[1, \"example-progress-spinner-group\"], [1, \"example-progress-spinner-element\"], [1, \"example-progress-spinner-element\", 3, \"value\", \"color\"]], template: function ProgressSpinnerOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"mc-progress-spinner\", 2);\n        i0.ɵɵelement(4, \"mc-progress-spinner\", 2);\n        i0.ɵɵelement(5, \"mc-progress-spinner\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.percent, \"%\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"second\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.percent)(\"color\", \"error\");\n    } }, directives: [i1.McProgressSpinner], styles: [\".example-progress-spinner-group[_ngcontent-%COMP%]{display:flex}.example-progress-spinner-element[_ngcontent-%COMP%]{margin-right:8px}.example-progress-spinner-element[_ngcontent-%COMP%]:first-child{width:40px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerOverviewExample, [{\n        type: Component,\n        args: [{\n                selector: 'progress-spinner-overview-example',\n                templateUrl: 'progress-spinner-overview-example.html',\n                styleUrls: ['progress-spinner-overview-example.css']\n            }]\n    }], function () { return []; }, null); })();\n\nconst EXAMPLES = [\n    ProgressSpinnerIndeterminateExample,\n    ProgressSpinnerOverviewExample\n];\nclass ProgressSpinnerExamplesModule {\n}\nProgressSpinnerExamplesModule.ɵfac = function ProgressSpinnerExamplesModule_Factory(t) { return new (t || ProgressSpinnerExamplesModule)(); };\nProgressSpinnerExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ProgressSpinnerExamplesModule });\nProgressSpinnerExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            McFormFieldModule,\n            McProgressSpinnerModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressSpinnerExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    McFormFieldModule,\n                    McProgressSpinnerModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ProgressSpinnerExamplesModule, { declarations: [ProgressSpinnerIndeterminateExample,\n        ProgressSpinnerOverviewExample], imports: [CommonModule,\n        FormsModule,\n        McFormFieldModule,\n        McProgressSpinnerModule], exports: [ProgressSpinnerIndeterminateExample,\n        ProgressSpinnerOverviewExample] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressSpinnerExamplesModule, ProgressSpinnerIndeterminateExample, ProgressSpinnerOverviewExample };\n"],"names":[],"sourceRoot":"webpack:///"}