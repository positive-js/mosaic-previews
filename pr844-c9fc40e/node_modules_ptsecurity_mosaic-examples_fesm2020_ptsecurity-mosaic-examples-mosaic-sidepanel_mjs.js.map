{"version":3,"file":"node_modules_ptsecurity_mosaic-examples_fesm2020_ptsecurity-mosaic-examples-mosaic-sidepanel_mjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;;;;;;;;gECHA;4DAAA;iEAAA;AAAA;AAAA;AAAA;8DAAA;;;;;;;;;;;;;;;;;;;;;MDIaA,iBAAiB,GAAG,IAAIC,yDAAJ,CAAwB,iBAAxB;IAErBC;;AAAZ,WAAYA,mBAAZ,EAA+B;AAC3BA;AACAA;AACAA;AACAA;AACH,CALD,EAAYA,mBAAmB,KAAnBA,mBAAmB,GAK9B,EAL8B,CAA/B;;MAOaC,kBAAiB;AAA9BC;;AAKI,SAAIC,IAAJ,GAAkB,IAAlB;AAEA,oBAAiCH,mBAAmB,CAACI,KAArD;;;AAGA,SAAWC,WAAX,GAAwB,IAAxB;;;AAKA,SAAgBC,gBAAhB,GAA6B,KAA7B;;;AAGA,SAAYC,YAAZ,GAAyB,KAAzB;;;AAGA,SAAiBC,iBAAjB,GAAwC,EAAxC;AACH;;AAtB6B;;AEP9B,IAAYC,yBAAZ;;AAAA,WAAYA,yBAAZ,EAAqC;AACjCA;AACAA;AACAA;AACH,CAJD,EAAYA,yBAAyB,KAAzBA,yBAAyB,GAIpC,EAJoC,CAArC,GAMA;AACA;;;AACO,MAAMC,6BAA6B,GAA6D;AACnGC,OAAK,EAAE;AAAEC,MAAE,EAAE,kBAAN;AAA0BC,OAAG,EAAE;AAA/B,GAD4F;AAEnGC,MAAI,EAAE;AAAEF,MAAE,EAAE,mBAAN;AAA2BC,OAAG,EAAE;AAAhC,GAF6F;AAGnGE,KAAG,EAAE;AAAEH,MAAE,EAAE,mBAAN;AAA2BC,OAAG,EAAE;AAAhC,GAH8F;AAInGG,QAAM,EAAE;AAAEJ,MAAE,EAAE,kBAAN;AAA0BC,OAAG,EAAE;AAA/B;AAJ2F,CAAhG;AAOA,MAAMI,qBAAqB,GAA0D;AACxFC,gBAAc,EAAEC,4DAAO,CAAC,OAAD,EAAU,CAC7BC,0DAAK,CACD,QADC,EAEDC,0DAAK,CAAC;AAAEC,aAAS,EAAE;AAAb,GAAD,CAFJ,EAGD;AAAEC,UAAM,EAAE;AAAEC,iBAAW,EAAEd,6BAA6B,CAACV,mBAAmB,CAACI,KAArB,CAA7B,CAAyDQ;AAAxE;AAAV,GAHC,CADwB,EAM7BQ,0DAAK,CACD,SADC,EAEDC,0DAAK,CAAC;AAAEC,aAAS,EAAE;AAAb,GAAD,CAFJ,EAGD;AAAEC,UAAM,EAAE;AAAEE,kBAAY,EAAEf,6BAA6B,CAACV,mBAAmB,CAACI,KAArB,CAA7B,CAAyDS;AAAzE;AAAV,GAHC,CANwB,EAW7Ba,+DAAU,CACN,oCADM,EAENC,4DAAO,CAAU,+FAAmC,EAA7C,CAFD,CAXmB,EAe7BD,+DAAU,CACN,iBADM,EAENC,4DAAO,CAAU,+FAAmC,EAA7C,CAFD,CAfmB,CAAV;AADiE,CAArF,ECXP;;AACA,IAAIG,QAAQ,GAAG,CAAf;;MAEaC,eAAc;AAevB7B,cACW8B,iBADX,EAEYC,UAFZ,EAGWC,MAHX,EAGoC;AAFzB,SAAiBF,iBAAjB;AACC,SAAUC,UAAV;AACD,SAAMC,MAAN;;;AAXM,wBAAe,IAAIC,yCAAJ,EAAf;;;AAGA,wBAAe,IAAIA,yCAAJ,EAAf;AAUb,SAAKC,EAAL,GAAU,KAAKF,MAAL,CAAYE,EAAZ,IAAkB,gBAAgBN,QAAQ,EAAE,EAAtD;AACA,SAAKE,iBAAL,CAAuBI,EAAvB,GAA4B,KAAKA,EAAjC,CAHgC;;AAMhCJ,qBAAiB,CAACK,qBAAlB,CAAwCC,IAAxC,CACIC,sDAAM,CACDC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoB,MAApB,IAA8BD,KAAK,CAACE,OAAN,KAAkBjC,yBAAyB,CAACkC,OADnF,CADV,EAIIC,oDAAI,CAAC,CAAD,CAJR,EAKEC,SALF,CAKY,MAAK;AACb,WAAKC,YAAL,CAAkBC,IAAlB;AACA,WAAKD,YAAL,CAAkBE,QAAlB;AACH,KARD,EANgC;;AAiBhChB,qBAAiB,CAACK,qBAAlB,CAAwCC,IAAxC,CACIC,sDAAM,CACDC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoB,MAApB,IAA8BD,KAAK,CAACE,OAAN,KAAkBjC,yBAAyB,CAACwC,MADnF,CADV,EAIIL,oDAAI,CAAC,CAAD,CAJR,EAKEC,SALF,CAKY,MAAK;AACbZ,gBAAU,CAACiB,OAAX;AACA,WAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,KAAKK,MAA5B;AACA,WAAKD,YAAL,CAAkBH,QAAlB;AACH,KATD;;AAWA,QAAI,CAAChB,iBAAiB,CAACqB,eAAlB,CAAkC9C,YAAvC,EAAqD;AACjD+C,MAAAA,2CAAK,CACDrB,UAAU,CAACsB,aAAX,EADC,EAEDtB,UAAU,CAACuB,aAAX,GAA2BlB,IAA3B;;AAGIC,MAAAA,sDAAM,CAAEC,KAAD,IAAWA,KAAK,CAACiB,OAAN,KAAkBC,4DAA9B,CAHV,CAFC,CAAL,CAOEb,SAPF,CAOY,MAAM,KAAKc,KAAL,EAPlB;AAQH;AACJ;;AAEDA,OAAK,CAACP,MAAD,EAAW;AACZ,QAAI,CAAC,KAAKD,YAAL,CAAkBS,MAAvB,EAA+B;;AAE3B,WAAK5B,iBAAL,CAAuBK,qBAAvB,CAA6CC,IAA7C,CACIC,sDAAM,CAAEC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoB,MAAhC,CADV,EAEIG,oDAAI,CAAC,CAAD,CAFR,EAGEC,SAHF,CAGY,MAAM,KAAKZ,UAAL,CAAgB4B,cAAhB,EAHlB;AAKA,WAAKT,MAAL,GAAcA,MAAd;AACA,WAAKpB,iBAAL,CAAuB8B,IAAvB;AACH;AACJ;;;;AAGDC,aAAW;AACP,WAAO,KAAKZ,YAAL,CAAkBa,YAAlB,EAAP;AACH;;;;AAGDC,aAAW;AACP,WAAO,KAAKnB,YAAL,CAAkBkB,YAAlB,EAAP;AACH;;AA/EsB;;MCYdE,wBAAwB,GAAG,IAAInE,yDAAJ,CAA4B,0BAA5B;MAE3BoE,wBAAwB,GAAG,IAAIpE,yDAAJ,CAA4B,0BAA5B;;AAuBlC,MAAOqE,6BAAP,SAA6CC,iEAA7C,CAA6D;AAkB/DnE,aACY,aACAoE,iBADA,EAEDjB,eAFC,EAGiCkB,UAHjC,EAIiCC,UAJjC,EAIoD;AAE5D;AANQ,SAAUC,UAAV;AACA,SAAiBH,iBAAjB;AACD,SAAejB,eAAf;AACkC,SAAUkB,UAAV;AACA,SAAUC,UAAV;;;AAf7C,0BAA4C/D,yBAAyB,CAACiE,IAAtE;;;AAKA,iCAAwB,IAAIC,uDAAJ,EAAxB;AAaC;;AAEDC,aAAW;AACP,SAAKC,SAAL,GAAiB,IAAjB;AACH;;;;AAGDC,uBAAqB,CAAIC,MAAJ,EAA8B;AAC/C,SAAKC,sBAAL;AACA,SAAKC,YAAL;AACA,SAAKC,aAAL;AAEA,WAAO,KAAKC,YAAL,CAAkBL,qBAAlB,CAAwCC,MAAxC,CAAP;AACH;;;;AAGDK,sBAAoB,CAAIL,MAAJ,EAA6B;AAC7C,SAAKC,sBAAL;AACA,SAAKC,YAAL;AACA,SAAKC,aAAL;AAEA,WAAO,KAAKC,YAAL,CAAkBC,oBAAlB,CAAuCL,MAAvC,CAAP;AACH;;;;AAGDM,OAAK;AACD,QAAI,KAAKR,SAAT,EAAoB;AAAE;AAAS;;AAE/B,SAAKS,cAAL,GAAsB7E,yBAAyB,CAACkC,OAAhD;AACA,SAAK2B,iBAAL,CAAuBiB,aAAvB;AACH;;;;AAGDzB,MAAI;AACA,QAAI,KAAKe,SAAT,EAAoB;AAAE;AAAS;;AAE/B,SAAKS,cAAL,GAAsB7E,yBAAyB,CAACwC,MAAhD;AACA,SAAKqB,iBAAL,CAAuBkB,YAAvB;AACH;;AAEDC,aAAW,CAACjD,KAAD,EAAsB;AAC7B,SAAKH,qBAAL,CAA2BqD,IAA3B,CAAgClD,KAAhC;AACH;;AAEOyC,cAAY;AAChB,UAAMU,QAAQ,GAAwB,KAAKtC,eAAL,CAAqBsC,QAA3D;AAEA,SAAKC,kBAAL,GAA0B;AACtBpE,iBAAW,EAAEd,6BAA6B,CAACiF,QAAD,CAA7B,CAAwC/E,EAD/B;AAEtBa,kBAAY,EAAEf,6BAA6B,CAACiF,QAAD,CAA7B,CAAwC9E;AAFhC,KAA1B;AAIH;;AAEOqE,eAAa;AACjB,UAAMW,OAAO,GAAgB,KAAKpB,UAAL,CAAgBqB,aAA7C;AACA,UAAMH,QAAQ,GAAwB,KAAKtC,eAAL,CAAqBsC,QAA3D;AAEAE,WAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAgD,kCAAU,EAA1D;AACH;;AAEOhB,wBAAsB;AAC1B,QAAI,KAAKG,YAAL,CAAkBc,WAAlB,EAAJ,EAAqC;AACjC,YAAMC,KAAK,CAAC,0EAAD,CAAX;AACH;AACJ;;AA1F8D;;;;;;;mBAAtD9B,+BAAAA,+DAAAA,CAA6B+B,qDAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,qBAAAA,+DAAAA,CAsB1BjC,2BAAAA,+DAAAA,CACAC;;;;;;;;QAvBHC;;;;gEAKEgC,gEAAeA;;;;;;;;;;;;;;eALjB;;eAAA;;;;;;;;;;;;;;;;kEHlDb;8DAAA;kEAAA;8DAAA;gEAAA;;;;6DAAA;8DAAA;;;eAQAC,iDAAAA,EAAAA,4DAAAA,EAAAA,gEAAAA;;;;eG2BgB,CAACpF,qBAAqB,CAACC,cAAvB;;;;;;qHAeHkD,+BAA6B;UArBzCkC,oDAqByC;AApB5BC;AAAAC;AAGOC,uBAAAA,yEAHP;AAGqCE,qBAChCC,iEAJL;AAI2BE,kBACzB,CAAC7F,qBAAqB,CAACC,cAAvB,CALF;AAMJ6F;AACFC,aAAK,EAAE,wBADL;AAEF,uCAA+B,YAF7B;AAGF,mDAA2C,YAHzC;AAIF,qBAAa,IAJX;AAKF,2BAAmB,IALjB;AAMF,oBAAY;;;AAGV,UATA;AAUF,0BAAkB,qBAVhB;AAWF,yBAAiB;AAXf,OANI;AAkBTC,2SAlBS;AAkBTC;AAlBS;AAoB4B;;;;;;;;;;cAsBjCC,iDAAMA;eAACjD;;;;;cACPiD,iDAAMA;eAAChD;;;;AAlBkCgB,gBAAY;YAAzDiC,oDAAyD;AAA/Cb,aAAAA,gEAAeA,EAAE;AAAEc,cAAM,EAAE;AAAV,OAAjB;AAA+C;;;ACjC9D;;;MACaC,4BAA4B,GACrC,IAAIvH,yDAAJ,CAAsC,8BAAtC;;MAGSwH,mBAAkB;AAS3BrH,cACYsH,OADZ,EAEYC,QAFZ,EAG8DC,cAH9D,EAIoCC,sBAJpC,EAI8E;AAHlE,SAAOH,OAAP;AACA,SAAQC,QAAR;AACkD,SAAcC,cAAd;AAC1B,SAAsBC,sBAAtB;AAZ5B,SAA2BC,2BAA3B,GAAgD,EAAhD;AAaP;;;;AAVmB,MAAhBC,gBAAgB;AAChB,WAAO,KAAKF,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BE,gBAA1D,GACH,KAAKD,2BADT;AAEH;;AASDhD,aAAW;;;AAGP,SAAKkD,eAAL,CAAqB,KAAKF,2BAA1B;AACH;;AAEDG,MAAI,CACAC,sBADA,EAC2D9F,MAD3D,EACwF;AAExF,UAAM+F,UAAU,GAAG,EACf,IAAI,KAAKP,cAAL,IAAuB,IAAIzH,iBAAJ,EAA3B,CADe;AAEf,SAAGiC;AAFY,KAAnB;;AAKA,QAAI+F,UAAU,CAAC7F,EAAX,IAAiB,KAAK8F,gBAAL,CAAsBD,UAAU,CAAC7F,EAAjC,CAArB,EAA2D;AACvD,YAAM8D,KAAK,CAAuB,gCAAU,CAAC9D,EAAE,oDAApC,CAAX;AACH;;AAED,UAAMH,UAAU,GAAG,KAAKkG,aAAL,CAAmBF,UAAnB,CAAnB;AACA,UAAMG,SAAS,GAAG,KAAKC,eAAL,CAAqBpG,UAArB,EAAiCgG,UAAjC,CAAlB;AACA,UAAMK,GAAG,GAAG,IAAIvG,cAAJ,CAAmBqG,SAAnB,EAA8BnG,UAA9B,EAA0CgG,UAA1C,CAAZ;;AAEA,QAAID,sBAAsB,YAAYO,sDAAtC,EAAmD;AAC/CH,eAAS,CAAChD,oBAAV,CAA+B,IAAIoD,+DAAJ,CAAsBR,sBAAtB,EAA8C,IAA9C,EAAqD;AAChFS,iBAAS,EAAER,UAAU,CAAC9H,IAD0D;AAEhFuI,oBAAY,EAAEJ;AAFkE,OAArD,CAA/B;AAIH,KALD,MAKO;AACH,YAAMb,QAAQ,GAAG,KAAKkB,cAAL,CAAoBV,UAApB,EAAgCK,GAAhC,EAAqCF,SAArC,CAAjB;AACA,YAAMrD,MAAM,GAAG,IAAI6D,gEAAJ,CAAoBZ,sBAApB,EAA4Ca,SAA5C,EAAuDpB,QAAvD,CAAf;AACA,YAAMqB,UAAU,GAAGV,SAAS,CAACtD,qBAAV,CAAgCC,MAAhC,CAAnB;AAEAuD,SAAG,CAACS,QAAJ,GAAeD,UAAU,CAACC,QAA1B;AACH;;AAED,SAAKlB,gBAAL,CAAsBmB,IAAtB,CAA2BV,GAA3B;AACAA,OAAG,CAACvE,WAAJ,GACKlB,SADL,CACe,MAAM,KAAKoG,mBAAL,CAAyBX,GAAzB,CADrB;AAGAF,aAAS,CAAC/C,KAAV;AAEA,WAAOiD,GAAP;AACH;AAED;;AAEG;;;AACHY,UAAQ;AACJ,SAAKpB,eAAL,CAAqB,KAAKD,gBAA1B;AACH;AAED;;;AAGG;;;AACHK,kBAAgB,CAAC9F,EAAD,EAAW;AACvB,WAAO,KAAKyF,gBAAL,CAAsBsB,IAAtB,CAA4BC,SAAD,IAAeA,SAAS,CAAChH,EAAV,KAAiBA,EAA3D,CAAP;AACH;AAED;;AAEG;;;AACKiG,iBAAe,CAACpG,UAAD,EAAyBC,MAAzB,EAAkD;AACrE,UAAMmH,gCAAgC,GAAG,KAAKC,mCAAL,CAAyCpH,MAAzC,CAAzC,CADqE;;AAIrE,UAAMuF,QAAQ,GAAG,IAAI8B,+DAAJ,CAAmB,KAAK9B,QAAxB,EAAkC,IAAI+B,OAAJ,CAAiB,CAChE,CAACvJ,iBAAD,EAAoBiC,MAApB,CADgE,EAEhE,CAACgC,wBAAD,EAA2BmF,gCAAgC,CAACI,MAAjC,IAA2C,CAAtE,CAFgE,EAGhE,CAACtF,wBAAD,EAA2BkF,gCAAgC,CAACI,MAAjC,GAA0C,CAArE,CAHgE,CAGO;AAHP,KAAjB,CAAlC,CAAjB;AAMA,UAAMC,eAAe,GAAG,IAAId,gEAAJ,CAAoBxE,6BAApB,EAAmDyE,SAAnD,EAA8DpB,QAA9D,CAAxB;AACA,UAAMkC,YAAY,GAAgD1H,UAAU,CAAC2H,MAAX,CAAkBF,eAAlB,CAAlE;AAEA,WAAOC,YAAY,CAACZ,QAApB;AACH;AAED;;;;;;;AAOG;;;AACKJ,gBAAc,CAClBzG,MADkB,EAElBwG,YAFkB;AAIlBmB,oBAJkB,EAI+B;;;;;AAMjD,UAAMC,eAAe,GAAG,IAAIN,OAAJ,CAAiB,CACrC,CAACpF,6BAAD,EAAgCyF,kBAAhC,CADqC,EAErC,CAAC/J,iBAAD,EAAoBoC,MAAM,CAAC/B,IAA3B,CAFqC,EAGrC,CAAC4B,cAAD,EAAiB2G,YAAjB,CAHqC,CAAjB,CAAxB,CANiD;;AAajD,WAAO,IAAIa,+DAAJ,CAAmB,KAAK9B,QAAxB,EAAkCqC,eAAlC,CAAP;AACH;AAED;;;AAGG;;;AACK3B,eAAa,CAACjG,MAAD,EAA0B;AAC3C,UAAM6H,aAAa,GAAG,IAAIC,gEAAJ,CAAkB;AACpC3J,iBAAW,EAAE6B,MAAM,CAAC7B,WADgB;AAEpC4J,mBAAa,EAAE,KAAKC,gBAAL,CAAsBhI,MAAtB,CAFqB;AAGpCiI,cAAQ,EAAE,MAH0B;AAIpCC,gBAAU,EAAElI,MAAM,CAAC1B,iBAJiB;AAKpC6J,oBAAc,EAAE,KAAK7C,OAAL,CAAa8C,gBAAb,CAA8BC,KAA9B,EALoB;AAMpCC,sBAAgB,EAAE,KAAKhD,OAAL,CAAa7B,QAAb,GAAwB8E,MAAxB;AANkB,KAAlB,CAAtB;AASA,WAAO,KAAKjD,OAAL,CAAakD,MAAb,CAAoBX,aAApB,CAAP;AACH;;AAEOjC,iBAAe,CAAC6C,UAAD,EAA6B;AAChD,UAAMC,wBAAwB,GAAG,CAAC,GAAGD,UAAU,CAACE,OAAX,EAAJ,CAAjC;AAEAD,4BAAwB,CAACE,OAAzB,CAAkCpC,YAAD,IAAiC;AAC9DA,kBAAY,CAAC/E,KAAb;AACH,KAFD;AAGH;;AAEOuG,kBAAgB,CAAChI,MAAD,EAA0B;AAC9C,QAAIA,MAAM,CAAC7B,WAAP,IAAsB6B,MAAM,CAAC+H,aAAjC,EAAgD;AAC5C,aAAO/H,MAAM,CAAC+H,aAAd;AACH;;AAED,UAAMc,8BAA8B,GAChC,KAAKlD,gBAAL,CAAsBmD,IAAtB,CAA4BtC,YAAD,IAAkBA,YAAY,CAACxG,MAAb,CAAoB7B,WAAjE,CADJ;AAGA,WAAO6B,MAAM,CAAC5B,gBAAP,IAA2B,CAACyK,8BAA5B,GAA6D,2BAA7D,GACH,kCADJ;AAEH;;AAEOzB,qCAAmC,CAACpH,MAAD,EAA0B;AACjE,WAAO,KAAK2F,gBAAL,CAAsBtF,MAAtB,CAA8BmG,YAAD,IAAkBA,YAAY,CAACxG,MAAb,CAAoByD,QAApB,KAAiCzD,MAAM,CAACyD,QAAvF,CAAP;AACH;AAED;;;AAGG;;;AACKsD,qBAAmB,CAACP,YAAD,EAA6B;AACpD,UAAMuC,KAAK,GAAG,KAAKpD,gBAAL,CAAsBqD,OAAtB,CAA8BxC,YAA9B,CAAd;;AAEA,QAAIuC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,WAAKpD,gBAAL,CAAsBsD,MAAtB,CAA6BF,KAA7B,EAAoC,CAApC;AACH;AACJ;;AA7K0B;;;;;;;mBAAlB1D,oBAAAA,sDAAAA,CAAkB6D,0DAAAA,GAAAA,sDAAAA,CAAAA,mDAAAA,GAAAA,sDAAAA,CAYH9D,kCAAAA,sDAAAA,CACoCC;;;;;;;;SAbnDA;WAAAA;;;;qHAAAA,oBAAkB;UAD9B8D,qDAAUA;AACoB;;;;;;;;cAYtBC,mDAAQA;;cAAInE,iDAAMA;eAACG;;;YACoCC;AAAkBgE;cAAzED,mDAAQA;AAAiE;cAA7DE,mDAAQA;OAAqD;;;;ACxBlF;;AAEG;;;MAQUC,iBAAgB;AAKzBvL,cACuBwI,YADvB,EAEYjE,UAFZ,EAGYiH,gBAHZ,EAGgD;AAFzB,SAAYhD,YAAZ;AACX,SAAUjE,UAAV;AACA,SAAgBiH,gBAAhB;AACR;;AAEJC,UAAQ;AACJ,QAAI,CAAC,KAAKjD,YAAV,EAAwB;;;;;;;AAOpBkD,gBAAU,CAAC,MAAK;AACZ,aAAKlD,YAAL,GAAoBmD,mBAAmB,CAAC,KAAKpH,UAAN,EAAkB,KAAKiH,gBAAL,CAAsB7D,gBAAxC,CAAvC;AACH,OAFS,CAAV;AAGH;AACJ;;AAEDiE,aAAW,CAACC,OAAD,EAAuB;AAC9B,UAAMC,aAAa,GAAGD,OAAO,CAACE,gBAAR,IAA4BF,OAAO,CAACG,eAA1D;;AAEA,QAAIF,aAAJ,EAAmB;AACf,WAAKE,eAAL,GAAuBF,aAAa,CAACG,YAArC;AACH;AACJ;;AA/BwB;;;;;;;mBAAhBV,kBAAAA,+DAAAA,CAAgBW,oBAAAA,+DAAAA,CAAAA,qDAAAA,GAAAA,+DAAAA;;;;;;;;QAAhBX;;;;;;eAAA;;;;;;;;;;;;qHAAAA,kBAAgB;UAP5BY,oDAO4B;AAPlB9F;AACPC,cAAQ,EAAE,sDADH;AAEPO,UAAI,EAAE;AACF,mBAAW,qCADT;AAEFC,aAAK,EAAE;AAFL;AAFC;AAOkB;;;;cAMpBsE,mDAAQA;;;;;;;;AALgBY,mBAAe;YAA3CI,gDAA2C;aAArC;AAAqC;AAEjBL,oBAAgB;YAA1CK,gDAA0C;aAApC;AAAoC;;;AA+B/C;;AAEG;;;MAiBUC,kBAAiB;AAhB9BrM;AAiBI,SAAYsM,YAAZ,GAAeC,iEAAf;AAGH;;AAJ6B;;;;;;;mBAAjBF;;AAAA;;AAAA;;;AAAAA,wCAAAA,+DAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;mEAAA;+EAAA;mEAAA;kEAAA;yHAAA;AAAA;;AAAA;gEAAA;qFAAA;AAAA;AAAA;AAAA,eALRG,4DAKQ,EALRC,iDAKQ,EArDAlB,gBAqDA,EArDgBiB,qEAqDhB;AAAA;AAAA;;;qHAAAH,mBAAiB;UAhB7BjG,oDAgB6B;AAhBnBC;AACPC,cAAQ,EAAE,qBADH;AAEPS,cAAQ,EAAE;;;;;;;;;AAST,KAXM;AAYPF,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAZC;AAgBmB;AAGjB4F,aAAS;YAAjBN,gDAAKA;AAAY;;;AAGtB;;AAEG;;;MAOUO,gBAAe;;;;;;;mBAAfA;;;;;;;;QAAAA;;;;;;qHAAAA,iBAAe;UAN3BR,oDAM2B;AANjB9F;AACPC,cAAQ,EAAE,yDADH;AAEPO,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAFC;AAMiB;;AAE5B;;AAEG;;;MAOU8F,kBAAiB;;;;;;;mBAAjBA;;;;;;;;QAAAA;;;;;;qHAAAA,mBAAiB;UAN7BT,oDAM6B;AANnB9F;AACPC,cAAQ,EAAE,+DADH;AAEPO,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAFC;AAMmB;;AAE9B;;AAEG;;;MAOU+F,mBAAkB;;;;;;;mBAAlBA;;;;;;;;QAAAA;;;;;;qHAAAA,oBAAkB;UAN9BV,oDAM8B;AANpB9F;AACPC,cAAQ,EAAE,kEADH;AAEPO,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAFC;AAMoB;;AAE/B;;;;AAIG;;;AACH,SAAS6E,mBAAT,CAA6BhG,OAA7B,EAA+DmH,cAA/D,EAA+F;AAC3F,MAAIC,MAAM,GAAuBpH,OAAO,CAACC,aAAR,CAAsBoH,aAAvD;;AAEA,SAAOD,MAAM,IAAI,CAACA,MAAM,CAAClH,SAAP,CAAiBoH,QAAjB,CAA0B,wBAA1B,CAAlB,EAAuE;AACnEF,UAAM,GAAGA,MAAM,CAACC,aAAhB;AACH;;AAED,SAAOD,MAAM,GAAGD,cAAc,CAAC7D,IAAf,CAAqBC,SAAD,IAAeA,SAAS,CAAChH,EAAV,KAAiB6K,MAAO,CAAC7K,EAA5D,CAAH,GAAqE,IAAlF;AACJ;;MClFagL,kBAAiB;;;;;;;mBAAjBA;;AAAA;;AAAA;;;AAAAA,wCAAAA,8DAAAA;AAAA;AAAA;AAAA;;AAAA;;AAAAA,wCAAAA,8DAAAA;AAAA,aAnBE,CAAC7F,kBAAD,CAmBF;AAAA,YA5BA,CACL8F,yDADK,EAELC,gEAFK,EAGLC,6DAHK,EAILC,mEAJK,EAKLC,sEALK,EAMLC,kEANK,EAOLC,0DAPK,CA4BA;AAAA;;;qHAAAP,mBAAiB;UA7B7BQ,mDA6B6B;AA7BpBrH;AACNsH,aAAO,EAAE,CACLR,yDADK,EAELC,gEAFK,EAGLC,6DAHK,EAILC,mEAJK,EAKLC,sEALK,EAMLC,kEANK,EAOLC,0DAPK,CADH;AAUNG,eAAS,EAAE,CAACvG,kBAAD,CAVL;AAWNwG,kBAAY,EAAE,CACV3J,6BADU,EAEVqH,gBAFU,EAGVc,iBAHU,EAIVM,eAJU,EAKVC,iBALU,EAMVC,kBANU,CAXR;AAmBNiB,qBAAe,EAAE,CAAC5J,6BAAD,CAnBX;AAoBN6J,aAAO,EAAE,CACL7J,6BADK,EAELqH,gBAFK,EAGLc,iBAHK,EAILM,eAJK,EAKLC,iBALK,EAMLC,kBANK;AApBH;AA6BoB;;ACjD9B;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFmC;AACS;AACX;AACmE;AAClE;AACQ;AACG;AACW;AACP;AACc;AACX;AACP;AACW;AACR;AACsD;AACzD;AACW;AACb;AACS;;AAEvD,mEAAmE;AACnE,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,EAAE;AACF;AACA,IAAI,uDAAY;AAChB,IAAI,gEAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iEAAY;AACxC,wBAAwB,mFAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,SAAS;AACT;AACA;AACA,iFAAiF,4CAA4C,+DAAoB,CAAC,4EAAqB;AACvK,+CAA+C,+DAAoB,GAAG,ueAAue;AAC7iB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,uGAAuG,+BAA+B;AAC3J,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,4GAA4G,iCAAiC;AAClK,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,uDAAY;AACpB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,mFAAmF,sCAAsC;AAC9I,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,gEAAqB;AAC7B,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,OAAO,eAAe,sEAAc,EAAE,+DAAW,EAAE,sEAAkB,EAAE,6DAAW,EAAE,wEAAoB,EAAE,2DAAkB,EAAE,mDAAU,EAAE,+DAAW,EAAE,wEAAoB,mEAAmE,gBAAgB,qBAAqB,aAAa,sBAAsB,gBAAgB,YAAY,kBAAkB,YAAY,wBAAwB;AACxY,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB,iBAAiB,wDAAwD,iEAAsB,8sBAA8sB,wBAAwB,mRAAmR,gBAAgB,qBAAqB,aAAa,sBAAsB,gBAAgB,YAAY,kBAAkB,YAAY,MAAM;AAChuC,KAAK,iBAAiB,UAAU,MAAM,4EAAqB,EAAE,IAAI,UAAU;AAC3E;AACA;AACA;AACA,4BAA4B,iEAAY;AACxC,oCAAoC;AACpC;AACA;AACA;AACA,6FAA6F,kDAAkD,+DAAoB,CAAC,2EAAiB;AACrL,qDAAqD,+DAAoB,GAAG,odAAod;AAChiB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,wDAAa;AACrB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,wFAAwF,sCAAsC;AACnJ,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,MAAM;AACN,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,OAAO,eAAe,2EAAoB,EAAE,yEAAkB,EAAE,oDAAU,EAAE,2EAAoB,EAAE,4EAAqB,EAAE,+DAAW,EAAE,wEAAoB,EAAE,0EAAmB,qBAAqB;AACpM,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,iDAAM;AAC5B,uBAAuB,2EAAiB;AACxC,aAAa,GAAG,IAAI,UAAU;;AAE9B,2EAA2E;AAC3E,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,EAAE;AACF;AACA,IAAI,uDAAY;AAChB,IAAI,gEAAqB;AACzB;AACA,qEAAqE;AACrE,gBAAgB,8DAAmB;AACnC,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,IAAI,wDAAa;AACjB,IAAI,0DAAe;AACnB,IAAI,4DAAiB;AACrB,IAAI,wDAAa,gGAAgG,2DAAgB,OAAO,eAAe,2DAAgB,IAAI,wCAAwC;AACnN,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,IAAI,4DAAiB;AACrB,IAAI,oDAAS;AACb,IAAI,0DAAe;AACnB,EAAE;AACF,mBAAmB,2DAAgB;AACnC,IAAI,wDAAa;AACjB,IAAI,uDAAY;AAChB,IAAI,wDAAa;AACjB,IAAI,uDAAY;AAChB,IAAI,wDAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iEAAY;AACxC,wBAAwB,mFAAyB;AACjD;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+EAA+E,2CAA2C,+DAAoB,CAAC,4EAAqB;AACpK,8CAA8C,+DAAoB,GAAG,2IAA2I;AAChN,QAAQ,yDAAc,CAAC,sDAAW;AAClC,MAAM;AACN;AACA,QAAQ,4DAAiB,MAAM,yDAAc;AAC7C,OAAO,6mBAA6mB;AACpnB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,sGAAsG,+BAA+B;AAC1J,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,2GAA2G,iCAAiC;AACjK,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,uDAAY;AACpB,QAAQ,4DAAiB;AACzB,QAAQ,wDAAa,kFAAkF,qCAAqC;AAC5I,QAAQ,4DAAiB;AACzB,QAAQ,oDAAS;AACjB,QAAQ,0DAAe;AACvB,QAAQ,wDAAa;AACrB,MAAM;AACN,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,QAAQ,uDAAY;AACpB,QAAQ,gEAAqB;AAC7B,QAAQ,uDAAY;AACpB,QAAQ,wDAAa;AACrB,OAAO,eAAe,sEAAc,EAAE,+DAAW,EAAE,sEAAkB,EAAE,6DAAW,EAAE,wEAAoB,EAAE,2DAAkB,EAAE,mDAAU,EAAE,+DAAW,EAAE,wEAAoB,EAAE,2EAAoB,EAAE,yEAAkB,EAAE,oDAAU,EAAE,2EAAoB,EAAE,4EAAqB,kEAAkE,gBAAgB,gBAAgB,YAAY,kBAAkB,YAAY,wBAAwB;AAClb,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,oDAAS;AACvB,iBAAiB,uDAAuD,iEAAsB,8sBAA8sB,wBAAwB,0gBAA0gB,8BAA8B,QAAQ,6jBAA6jB,gBAAgB,gBAAgB,YAAY,kBAAkB,YAAY,MAAM;AACjgE,KAAK,iBAAiB,UAAU,MAAM,4EAAqB,EAAE,IAAI,IAAI;AACrE,kBAAkB,oDAAS;AAC3B,mBAAmB,sDAAW,IAAI,eAAe;AACjD,SAAS,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,6CAA6C,8DAAmB,GAAG,+BAA+B;AAClG,6CAA6C,8DAAmB,GAAG;AACnE,YAAY,yDAAY;AACxB,YAAY,qEAAc;AAC1B,YAAY,iEAAY;AACxB,YAAY,2EAAiB;AAC7B,YAAY,4EAAiB;AAC7B,YAAY,qEAAc;AAC1B,YAAY,qEAAc;AAC1B,YAAY,uDAAW;AACvB,YAAY;AACZ,eAAe,mDAAmD,+DAAoB;AACtF,cAAc,mDAAQ;AACtB;AACA;AACA,oBAAoB,yDAAY;AAChC,oBAAoB,qEAAc;AAClC,oBAAoB,iEAAY;AAChC,oBAAoB,2EAAiB;AACrC,oBAAoB,4EAAiB;AACrC,oBAAoB,qEAAc;AAClC,oBAAoB,qEAAc;AAClC,oBAAoB,uDAAW;AAC/B;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAqB,4BAA4B;AACnH;AACA,oDAAoD,yDAAY;AAChE,QAAQ,qEAAc;AACtB,QAAQ,iEAAY;AACpB,QAAQ,2EAAiB;AACzB,QAAQ,4EAAiB;AACzB,QAAQ,qEAAc;AACtB,QAAQ,qEAAc;AACtB,QAAQ,uDAAW;AACnB;AACA,0CAA0C,IAAI;;AAE9C;AACA;AACA;;AAEyH","sources":["./packages/mosaic/sidepanel/sidepanel-config.ts","./packages/mosaic/sidepanel/sidepanel-container.component.html","./packages/mosaic/sidepanel/sidepanel-animations.ts","./packages/mosaic/sidepanel/sidepanel-ref.ts","./packages/mosaic/sidepanel/sidepanel-container.component.ts","./packages/mosaic/sidepanel/sidepanel.service.ts","./packages/mosaic/sidepanel/sidepanel-directives.ts","./packages/mosaic/sidepanel/sidepanel.module.ts","./packages/mosaic/sidepanel/ptsecurity-mosaic-sidepanel.ts","./node_modules/@ptsecurity/mosaic-examples/fesm2020/ptsecurity-mosaic-examples-mosaic-sidepanel.mjs"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    backdropClass?: string;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","<div class=\"mc-sidepanel-wrapper\">\n\n    <div *ngIf=\"withIndent\" class=\"mc-sidepanel-indent\" (click)=\"exit()\"></div>\n\n    <div class=\"mc-sidepanel-content\" cdkTrapFocus cdkTrapFocusAutoCapture>\n        <ng-template cdkPortalOutlet></ng-template>\n    </div>\n</div>\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: { readonly sidepanelState: AnimationTriggerMetadata } = {\n    sidepanelState: trigger('state', [\n        state(\n            'hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state(\n            'visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition(\n            'visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)\n        ),\n        transition(\n            'void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`)\n        )\n    ])\n};\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT = new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW = new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        '[class.mc-sidepanel_nested]': 'withIndent',\n        '[class.mc-sidepanel-container_shadowed]': 'withShadow',\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet, { static: true }) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean\n    ) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (this.destroyed) { return; }\n\n        this.animationState = McSidepanelAnimationState.Visible;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (this.destroyed) { return; }\n\n        this.animationState = McSidepanelAnimationState.Hidden;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config?: McSidepanelConfig<D>\n    ): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed()\n            .subscribe(() => this.removeOpenSidepanel(ref));\n\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        // tslint:disable-next-line:deprecation\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        // tslint:disable-next-line:deprecation\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        // tslint:disable-next-line:deprecation\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        if (config.hasBackdrop && config.backdropClass) {\n            return config.backdropClass;\n        }\n\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import {\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnInit,\n    Optional,\n    SimpleChanges\n} from '@angular/core';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" [color]=\"themePalette.Second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    themePalette = ThemePalette;\n\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McButtonModule,\n        McIconModule,\n        A11yModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Inject, TemplateRef, ViewChild, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i7 from '@ptsecurity/mosaic/button';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport * as i2 from '@ptsecurity/mosaic/form-field';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport * as i3 from '@ptsecurity/mosaic/select';\nimport { McSelectModule } from '@ptsecurity/mosaic/select';\nimport * as i1 from '@ptsecurity/mosaic/sidepanel';\nimport { McSidepanelPosition, MC_SIDEPANEL_DATA, McSidepanelModule } from '@ptsecurity/mosaic/sidepanel';\nimport * as i5 from '@ptsecurity/mosaic/toggle';\nimport { McToggleModule } from '@ptsecurity/mosaic/toggle';\nimport * as i4 from '@ptsecurity/mosaic/core';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\n\nfunction SidepanelExampleCustomComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r2 + 1, \" \");\n} }\n/**\n * @title Template Modal\n */\nclass SidepanelComponentExample {\n    constructor(sidepanelService) {\n        this.sidepanelService = sidepanelService;\n        this.themePalette = ThemePalette;\n        this.position = McSidepanelPosition.Right;\n        this.modalState = false;\n    }\n    openComponentSidepanel() {\n        this.sidepanelService.open(SidepanelExampleCustomComponent, {\n            position: this.position,\n            hasBackdrop: this.modalState,\n            data: {\n                openComponentSidepanel: () => { this.openComponentSidepanel(); }\n            }\n        });\n    }\n}\nSidepanelComponentExample.ɵfac = function SidepanelComponentExample_Factory(t) { return new (t || SidepanelComponentExample)(i0.ɵɵdirectiveInject(i1.McSidepanelService)); };\nSidepanelComponentExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SidepanelComponentExample, selectors: [[\"sidepanel-component-example\"]], decls: 22, vars: 8, consts: [[1, \"mc-form-horizontal\", \"margin\"], [1, \"mc-form__row\"], [1, \"mc-form__label\"], [1, \"mc-form__control\", \"flex-10\"], [3, \"value\", \"valueChange\"], [3, \"value\"], [1, \"layout-row\", \"mc-form__control\", \"layout-align-center-center\", \"flex-10\"], [3, \"ngModel\", \"ngModelChange\"], [\"mc-button\", \"\", 3, \"color\", \"click\"]], template: function SidepanelComponentExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mc-form-field\", 3)(5, \"mc-select\", 4);\n        i0.ɵɵlistener(\"valueChange\", function SidepanelComponentExample_Template_mc_select_valueChange_5_listener($event) { return ctx.position = $event; });\n        i0.ɵɵelementStart(6, \"mc-option\", 5);\n        i0.ɵɵtext(7, \"Right\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mc-option\", 5);\n        i0.ɵɵtext(9, \"Left\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mc-option\", 5);\n        i0.ɵɵtext(11, \"Top\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mc-option\", 5);\n        i0.ɵɵtext(13, \"Bottom\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"mc-toggle\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SidepanelComponentExample_Template_mc_toggle_ngModelChange_15_listener($event) { return ctx.modalState = $event; });\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(17, \"br\")(18, \"br\");\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function SidepanelComponentExample_Template_button_click_19_listener() { return ctx.openComponentSidepanel(); });\n        i0.ɵɵelementStart(20, \"span\");\n        i0.ɵɵtext(21, \"Open component sidepanel\");\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.position);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"right\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"left\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"top\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"bottom\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.modalState);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Modal: \", ctx.modalState.toString(), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", ctx.themePalette.Primary);\n    } }, directives: [i2.McFormField, i3.McSelect, i3.McOptionTooltip, i4.McOption, i5.McToggleComponent, i6.NgControlStatus, i6.NgModel, i7.McButton, i7.McButtonCssStyler], styles: [\"sidepanel-component-example .mc-form__control.flex-10{min-width:120px}.sidepanel-container{display:flex;flex-direction:column}.layout-padding{padding:8px}.layout-padding>*{padding:8px}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelComponentExample, [{\n        type: Component,\n        args: [{ selector: 'sidepanel-component-example', encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mc-form-horizontal margin\\\">\\n    <div class=\\\"mc-form__row\\\">\\n        <label class=\\\"mc-form__label\\\">Position</label>\\n        <mc-form-field class=\\\"mc-form__control flex-10\\\">\\n            <mc-select [(value)]=\\\"position\\\">\\n                <mc-option [value]=\\\"'right'\\\">Right</mc-option>\\n                <mc-option [value]=\\\"'left'\\\">Left</mc-option>\\n                <mc-option [value]=\\\"'top'\\\">Top</mc-option>\\n                <mc-option [value]=\\\"'bottom'\\\">Bottom</mc-option>\\n            </mc-select>\\n        </mc-form-field>\\n\\n        <div class=\\\"layout-row mc-form__control layout-align-center-center flex-10\\\">\\n            <mc-toggle [(ngModel)]=\\\"modalState\\\">Modal: {{ modalState.toString() }}</mc-toggle>\\n        </div>\\n    </div>\\n</div>\\n\\n<br><br>\\n\\n<button mc-button [color]=\\\"themePalette.Primary\\\" (click)=\\\"openComponentSidepanel()\\\">\\n    <span>Open component sidepanel</span>\\n</button>\\n\", styles: [\"sidepanel-component-example .mc-form__control.flex-10{min-width:120px}.sidepanel-container{display:flex;flex-direction:column}.layout-padding{padding:8px}.layout-padding>*{padding:8px}\\n\"] }]\n    }], function () { return [{ type: i1.McSidepanelService }]; }, null); })();\nclass SidepanelExampleCustomComponent {\n    constructor(data) {\n        this.data = data;\n        this.themePalette = ThemePalette;\n        this.array = new Array(60); // tslint:disable-line\n        this.openComponentSidepanel = data.openComponentSidepanel;\n    }\n}\nSidepanelExampleCustomComponent.ɵfac = function SidepanelExampleCustomComponent_Factory(t) { return new (t || SidepanelExampleCustomComponent)(i0.ɵɵdirectiveInject(MC_SIDEPANEL_DATA)); };\nSidepanelExampleCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SidepanelExampleCustomComponent, selectors: [[\"example-sidepanel\"]], hostAttrs: [1, \"layout-column\", \"flex\", \"sidepanel-container\"], decls: 14, vars: 4, consts: [[3, \"closeable\"], [1, \"layout-padding\"], [1, \"mc-subheading\"], [4, \"ngFor\", \"ngForOf\"], [\"align\", \"right\"], [\"cdkFocusInitial\", \"\", \"mc-button\", \"\", 3, \"color\", \"click\"], [\"mc-button\", \"\", \"mc-sidepanel-close\", \"\", 3, \"color\"]], template: function SidepanelExampleCustomComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mc-sidepanel-header\", 0);\n        i0.ɵɵtext(1, \" Sidepanel Component Content \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mc-sidepanel-body\", 1)(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Sidepanel Component Body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, SidepanelExampleCustomComponent_div_5_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mc-sidepanel-footer\")(7, \"mc-sidepanel-actions\", 4)(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function SidepanelExampleCustomComponent_Template_button_click_8_listener() { return ctx.openComponentSidepanel(); });\n        i0.ɵɵelementStart(9, \"span\");\n        i0.ɵɵtext(10, \"Open another sidepanel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 6)(12, \"span\");\n        i0.ɵɵtext(13, \"Close\");\n        i0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"closeable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.array);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", ctx.themePalette.Primary);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", ctx.themePalette.Second);\n    } }, directives: [i1.McSidepanelHeader, i1.McSidepanelBody, i8.NgForOf, i1.McSidepanelFooter, i1.McSidepanelActions, i7.McButton, i7.McButtonCssStyler, i1.McSidepanelClose], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelExampleCustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'example-sidepanel',\n                template: `\n    <mc-sidepanel-header [closeable]=\"true\">\n        Sidepanel Component Content\n    </mc-sidepanel-header>\n    <mc-sidepanel-body class=\"layout-padding\">\n        <div class=\"mc-subheading\">Sidepanel Component Body</div>\n\n        <div *ngFor=\"let item of array; index as i\">\n            {{ i + 1 }}\n        </div>\n    </mc-sidepanel-body>\n    <mc-sidepanel-footer>\n        <mc-sidepanel-actions align=\"right\">\n            <button cdkFocusInitial mc-button [color]=\"themePalette.Primary\" (click)=\"openComponentSidepanel()\">\n                <span>Open another sidepanel</span>\n            </button>\n\n            <button mc-button [color]=\"themePalette.Second\" mc-sidepanel-close>\n                <span>Close</span>\n            </button>\n        </mc-sidepanel-actions>\n    </mc-sidepanel-footer>`,\n                host: {\n                    class: 'layout-column flex sidepanel-container'\n                }\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MC_SIDEPANEL_DATA]\n            }] }]; }, null); })();\n\nfunction SidepanelOverviewExample_ng_template_22_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r3 + 1, \" \");\n} }\nfunction SidepanelOverviewExample_ng_template_22_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mc-sidepanel-header\", 9);\n    i0.ɵɵtext(1, \" Sidepanel Template Content \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mc-sidepanel-body\", 10)(3, \"div\", 11);\n    i0.ɵɵtext(4, \"Sidepanel Template Body\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SidepanelOverviewExample_ng_template_22_div_5_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mc-sidepanel-footer\")(7, \"mc-sidepanel-actions\", 13)(8, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SidepanelOverviewExample_ng_template_22_Template_button_click_8_listener() { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.openTemplateSidepanel(); });\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"Open another sidepanel\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"mc-sidepanel-actions\", 15)(12, \"span\");\n    i0.ɵɵtext(13, \"Close\");\n    i0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"closeable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.array);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"color\", ctx_r0.themePalette.Primary);\n} }\n/**\n * @title Template Modal\n */\nclass SidepanelOverviewExample {\n    constructor(sidepanelService) {\n        this.sidepanelService = sidepanelService;\n        this.themePalette = ThemePalette;\n        this.position = McSidepanelPosition.Right;\n        this.modalState = false;\n        this.arrayLength = 40;\n        this.array = new Array(this.arrayLength); // tslint:disable-line\n    }\n    openTemplateSidepanel() {\n        this.sidepanelService.open(this.template, {\n            position: this.position,\n            hasBackdrop: this.modalState\n        });\n    }\n}\nSidepanelOverviewExample.ɵfac = function SidepanelOverviewExample_Factory(t) { return new (t || SidepanelOverviewExample)(i0.ɵɵdirectiveInject(i1.McSidepanelService)); };\nSidepanelOverviewExample.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SidepanelOverviewExample, selectors: [[\"sidepanel-overview-example\"]], viewQuery: function SidepanelOverviewExample_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, decls: 23, vars: 8, consts: [[1, \"mc-form-horizontal\", \"margin\"], [1, \"mc-form__row\"], [1, \"mc-form__label\"], [1, \"mc-form__control\", \"flex-10\"], [3, \"value\", \"valueChange\"], [3, \"value\"], [1, \"layout-row\", \"mc-form__control\", \"layout-align-center-center\", \"flex-10\"], [3, \"ngModel\", \"ngModelChange\"], [\"mc-button\", \"\", 1, \"template-button\", 3, \"color\", \"click\"], [3, \"closeable\"], [1, \"layout-padding\"], [1, \"mc-subheading\"], [4, \"ngFor\", \"ngForOf\"], [\"align\", \"left\"], [\"cdkFocusInitial\", \"\", \"mc-button\", \"\", 3, \"color\", \"click\"], [\"align\", \"right\"]], template: function SidepanelOverviewExample_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mc-form-field\", 3)(5, \"mc-select\", 4);\n        i0.ɵɵlistener(\"valueChange\", function SidepanelOverviewExample_Template_mc_select_valueChange_5_listener($event) { return ctx.position = $event; });\n        i0.ɵɵelementStart(6, \"mc-option\", 5);\n        i0.ɵɵtext(7, \"Right\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mc-option\", 5);\n        i0.ɵɵtext(9, \"Left\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mc-option\", 5);\n        i0.ɵɵtext(11, \"Top\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mc-option\", 5);\n        i0.ɵɵtext(13, \"Bottom\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"mc-toggle\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SidepanelOverviewExample_Template_mc_toggle_ngModelChange_15_listener($event) { return ctx.modalState = $event; });\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(17, \"br\")(18, \"br\");\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function SidepanelOverviewExample_Template_button_click_19_listener() { return ctx.openTemplateSidepanel(); });\n        i0.ɵɵelementStart(20, \"span\");\n        i0.ɵɵtext(21, \"Open template sidepanel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, SidepanelOverviewExample_ng_template_22_Template, 14, 3, \"ng-template\");\n    } if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.position);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"right\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"left\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"top\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"bottom\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.modalState);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Modal: \", ctx.modalState.toString(), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"color\", ctx.themePalette.Primary);\n    } }, directives: [i2.McFormField, i3.McSelect, i3.McOptionTooltip, i4.McOption, i5.McToggleComponent, i6.NgControlStatus, i6.NgModel, i7.McButton, i7.McButtonCssStyler, i1.McSidepanelHeader, i1.McSidepanelBody, i8.NgForOf, i1.McSidepanelFooter, i1.McSidepanelActions], styles: [\"sidepanel-overview-example .mc-form__control.flex-10{min-width:120px}.layout-padding{padding:8px}.layout-padding>*{padding:8px}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelOverviewExample, [{\n        type: Component,\n        args: [{ selector: 'sidepanel-overview-example', encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mc-form-horizontal margin\\\">\\n    <div class=\\\"mc-form__row\\\">\\n        <label class=\\\"mc-form__label\\\">Position</label>\\n        <mc-form-field class=\\\"mc-form__control flex-10\\\">\\n            <mc-select [(value)]=\\\"position\\\">\\n                <mc-option [value]=\\\"'right'\\\">Right</mc-option>\\n                <mc-option [value]=\\\"'left'\\\">Left</mc-option>\\n                <mc-option [value]=\\\"'top'\\\">Top</mc-option>\\n                <mc-option [value]=\\\"'bottom'\\\">Bottom</mc-option>\\n            </mc-select>\\n        </mc-form-field>\\n\\n        <div class=\\\"layout-row mc-form__control layout-align-center-center flex-10\\\">\\n            <mc-toggle [(ngModel)]=\\\"modalState\\\">Modal: {{ modalState.toString() }}</mc-toggle>\\n        </div>\\n    </div>\\n</div>\\n\\n<br><br>\\n\\n<button class=\\\"template-button\\\" mc-button [color]=\\\"themePalette.Primary\\\" (click)=\\\"openTemplateSidepanel()\\\">\\n    <span>Open template sidepanel</span>\\n</button>\\n\\n<ng-template>\\n    <mc-sidepanel-header [closeable]=\\\"true\\\">\\n        Sidepanel Template Content\\n    </mc-sidepanel-header>\\n    <mc-sidepanel-body class=\\\"layout-padding\\\">\\n        <div class=\\\"mc-subheading\\\">Sidepanel Template Body</div>\\n\\n        <div *ngFor=\\\"let item of array; index as i\\\">\\n            {{ i + 1 }}\\n        </div>\\n    </mc-sidepanel-body>\\n    <mc-sidepanel-footer>\\n        <mc-sidepanel-actions align=\\\"left\\\">\\n            <button cdkFocusInitial mc-button [color]=\\\"themePalette.Primary\\\" (click)=\\\"openTemplateSidepanel()\\\">\\n                <span>Open another sidepanel</span>\\n            </button>\\n        </mc-sidepanel-actions>\\n\\n        <mc-sidepanel-actions align=\\\"right\\\">\\n                <span>Close</span>\\n        </mc-sidepanel-actions>\\n    </mc-sidepanel-footer>\\n</ng-template>\\n\", styles: [\"sidepanel-overview-example .mc-form__control.flex-10{min-width:120px}.layout-padding{padding:8px}.layout-padding>*{padding:8px}\\n\"] }]\n    }], function () { return [{ type: i1.McSidepanelService }]; }, { template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: false }]\n        }] }); })();\n\nconst EXAMPLES = [\n    SidepanelOverviewExample,\n    SidepanelComponentExample,\n    SidepanelExampleCustomComponent\n];\nclass SidepanelExamplesModule {\n}\nSidepanelExamplesModule.ɵfac = function SidepanelExamplesModule_Factory(t) { return new (t || SidepanelExamplesModule)(); };\nSidepanelExamplesModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: SidepanelExamplesModule });\nSidepanelExamplesModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            McButtonModule,\n            McIconModule,\n            McSidepanelModule,\n            McFormFieldModule,\n            McSelectModule,\n            McToggleModule,\n            FormsModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SidepanelExamplesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    McButtonModule,\n                    McIconModule,\n                    McSidepanelModule,\n                    McFormFieldModule,\n                    McSelectModule,\n                    McToggleModule,\n                    FormsModule\n                ],\n                declarations: EXAMPLES,\n                exports: EXAMPLES\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SidepanelExamplesModule, { declarations: [SidepanelOverviewExample,\n        SidepanelComponentExample,\n        SidepanelExampleCustomComponent], imports: [CommonModule,\n        McButtonModule,\n        McIconModule,\n        McSidepanelModule,\n        McFormFieldModule,\n        McSelectModule,\n        McToggleModule,\n        FormsModule], exports: [SidepanelOverviewExample,\n        SidepanelComponentExample,\n        SidepanelExampleCustomComponent] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SidepanelComponentExample, SidepanelExampleCustomComponent, SidepanelExamplesModule, SidepanelOverviewExample };\n"],"names":["MC_SIDEPANEL_DATA","InjectionToken","McSidepanelPosition","McSidepanelConfig","constructor","data","Right","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","McSidepanelAnimationState","mcSidepanelTransformAnimation","right","in","out","left","top","bottom","mcSidepanelAnimations","sidepanelState","trigger","state","style","transform","params","transformIn","transformOut","transition","animate","AccelerationCurve","DecelerationCurve","uniqueId","McSidepanelRef","containerInstance","overlayRef","config","Subject","id","animationStateChanged","pipe","filter","event","phaseName","toState","Visible","take","subscribe","afterOpened$","next","complete","Hidden","dispose","afterClosed$","result","sidepanelConfig","merge","backdropClick","keydownEvents","keyCode","ESCAPE","close","closed","detachBackdrop","exit","afterClosed","asObservable","afterOpened","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","McSidepanelContainerComponent","BasePortalOutlet","changeDetectorRef","withIndent","withShadow","elementRef","Void","EventEmitter","ngOnDestroy","destroyed","attachComponentPortal","portal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","animationState","detectChanges","markForCheck","onAnimation","emit","position","animationTransform","element","nativeElement","classList","add","hasAttached","Error","i0","CdkPortalOutlet","i2","Component","args","selector","changeDetection","OnPush","encapsulation","ViewEncapsulation","None","animations","host","class","template","styles","Inject","ViewChild","static","MC_SIDEPANEL_DEFAULT_OPTIONS","McSidepanelService","overlay","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","createOverlay","container","attachContainer","ref","TemplateRef","TemplatePortal","$implicit","sidepanelRef","createInjector","ComponentPortal","undefined","contentRef","instance","push","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","containerRef","attach","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","panelClass","scrollStrategy","scrollStrategies","block","positionStrategy","global","create","sidepanels","reversedOpenedSidepanels","reverse","forEach","hasOpenedSidepanelWithBackdrop","some","index","indexOf","splice","i1","Injectable","Optional","decorators","SkipSelf","McSidepanelClose","sidepanelService","ngOnInit","setTimeout","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","i1.McSidepanelRef","Directive","Input","McSidepanelHeader","themePalette","ThemePalette","i3","i4","closeable","McSidepanelBody","McSidepanelFooter","McSidepanelActions","openSidepanels","parent","parentElement","contains","McSidepanelModule","CommonModule","OverlayModule","PortalModule","McCommonModule","McButtonModule","McIconModule","A11yModule","NgModule","imports","providers","declarations","entryComponents","exports"],"sourceRoot":"webpack:///"}